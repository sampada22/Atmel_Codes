
numbercount withtimer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000128  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00000128  0000019c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001b0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005ba  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000529  00000000  00000000  000007f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000216  00000000  00000000  00000d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000f38  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000304  00000000  00000000  00000f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ad  00000000  00000000  00001270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000131d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e2       	ldi	r30, 0x28	; 40
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
 */ 
#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>
int main()
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	64 97       	sbiw	r28, 0x14	; 20
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
	DDRD |= (1 << 0); 
  96:	88 9a       	sbi	0x11, 0	; 17
	DDRC = 0xFF;
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	84 bb       	out	0x14, r24	; 20
	DDRB=0xFF;
  9c:	87 bb       	out	0x17, r24	; 23
	TCCR1B |= ((1 << CS10 ) | (1 << CS12 ));
  9e:	8e b5       	in	r24, 0x2e	; 46
  a0:	85 60       	ori	r24, 0x05	; 5
  a2:	8e bd       	out	0x2e, r24	; 46
	int i=-1,j=0; 
	int a[10]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09};
  a4:	84 e1       	ldi	r24, 0x14	; 20
  a6:	e0 e6       	ldi	r30, 0x60	; 96
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	de 01       	movw	r26, r28
  ac:	11 96       	adiw	r26, 0x01	; 1
  ae:	01 90       	ld	r0, Z+
  b0:	0d 92       	st	X+, r0
  b2:	8a 95       	dec	r24
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x2c>
{
	DDRD |= (1 << 0); 
	DDRC = 0xFF;
	DDRB=0xFF;
	TCCR1B |= ((1 << CS10 ) | (1 << CS12 ));
	int i=-1,j=0; 
  b6:	20 e0       	ldi	r18, 0x00	; 0
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	6f ef       	ldi	r22, 0xFF	; 255
  bc:	7f ef       	ldi	r23, 0xFF	; 255
	for (;;)
	{
		
		if ( TCNT1 >= 15624)
		{
			PORTD ^= (1 << 0);
  be:	41 e0       	ldi	r20, 0x01	; 1
	int a[10]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09};
	
	for (;;)
	{
		
		if ( TCNT1 >= 15624)
  c0:	8c b5       	in	r24, 0x2c	; 44
  c2:	9d b5       	in	r25, 0x2d	; 45
  c4:	88 30       	cpi	r24, 0x08	; 8
  c6:	9d 43       	sbci	r25, 0x3D	; 61
  c8:	d8 f3       	brcs	.-10     	; 0xc0 <main+0x3e>
		{
			PORTD ^= (1 << 0);
  ca:	82 b3       	in	r24, 0x12	; 18
  cc:	84 27       	eor	r24, r20
  ce:	82 bb       	out	0x12, r24	; 18
			
			 
			
					if (PORTD==0x01){
  d0:	82 b3       	in	r24, 0x12	; 18
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	21 f5       	brne	.+72     	; 0x11e <main+0x9c>
					PORTB = a[j+1];
  d6:	2f 5f       	subi	r18, 0xFF	; 255
  d8:	3f 4f       	sbci	r19, 0xFF	; 255
  da:	f9 01       	movw	r30, r18
  dc:	ee 0f       	add	r30, r30
  de:	ff 1f       	adc	r31, r31
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	8c 0f       	add	r24, r28
  e6:	9d 1f       	adc	r25, r29
  e8:	e8 0f       	add	r30, r24
  ea:	f9 1f       	adc	r31, r25
  ec:	80 81       	ld	r24, Z
  ee:	88 bb       	out	0x18, r24	; 24
					j++;
					
					if (j==9){
  f0:	29 30       	cpi	r18, 0x09	; 9
  f2:	31 05       	cpc	r19, r1
  f4:	91 f0       	breq	.+36     	; 0x11a <main+0x98>
			       j=-1;}
				    if (j==0){
  f6:	21 15       	cp	r18, r1
  f8:	31 05       	cpc	r19, r1
  fa:	89 f4       	brne	.+34     	; 0x11e <main+0x9c>
					    PORTC= a[i+2];
  fc:	fb 01       	movw	r30, r22
  fe:	32 96       	adiw	r30, 0x02	; 2
 100:	ee 0f       	add	r30, r30
 102:	ff 1f       	adc	r31, r31
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	8c 0f       	add	r24, r28
 10a:	9d 1f       	adc	r25, r29
 10c:	e8 0f       	add	r30, r24
 10e:	f9 1f       	adc	r31, r25
 110:	80 81       	ld	r24, Z
 112:	85 bb       	out	0x15, r24	; 21
					    i++;
 114:	6f 5f       	subi	r22, 0xFF	; 255
 116:	7f 4f       	sbci	r23, 0xFF	; 255
 118:	02 c0       	rjmp	.+4      	; 0x11e <main+0x9c>
					if (PORTD==0x01){
					PORTB = a[j+1];
					j++;
					
					if (j==9){
			       j=-1;}
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	3f ef       	ldi	r19, 0xFF	; 255
					    PORTC= a[i+2];
					    i++;
				    }
				   
					}
	TCNT1 = 0; 
 11e:	1d bc       	out	0x2d, r1	; 45
 120:	1c bc       	out	0x2c, r1	; 44
 122:	ce cf       	rjmp	.-100    	; 0xc0 <main+0x3e>

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
