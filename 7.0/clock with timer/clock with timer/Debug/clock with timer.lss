
clock with timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000332  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000332  000003c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  0080006a  0080006a  000003d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000400  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  0000043c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000084b  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005bc  00000000  00000000  00000caf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003e3  00000000  00000000  0000126b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000048  00000000  00000000  00001650  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000356  00000000  00000000  00001698  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002d1  00000000  00000000  000019ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001cbf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_4>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 e3       	ldi	r30, 0x32	; 50
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 97 01 	jmp	0x32e	; 0x32e <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
uint16_t count=0;
uint8_t num [10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
	
	
int main(){
	TCCR2=(1<<WGM21)|(1<<CS20)|(1<<CS21)|(1<<CS22);                 //set CTC mode and set the prescalar to 1024
  92:	8f e0       	ldi	r24, 0x0F	; 15
  94:	85 bd       	out	0x25, r24	; 37
	OCR2=156;
  96:	8c e9       	ldi	r24, 0x9C	; 156
  98:	83 bd       	out	0x23, r24	; 35
	TIMSK=(1<<OCIE2);//enable interrrupt on compare
  9a:	80 e8       	ldi	r24, 0x80	; 128
  9c:	89 bf       	out	0x39, r24	; 57
	sei();//set the global interrupt
  9e:	78 94       	sei
	
	DDRA=0xFF;
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	8a bb       	out	0x1a, r24	; 26
	DDRB=0xFF;
  a4:	87 bb       	out	0x17, r24	; 23
	disp=0;
  a6:	18 ba       	out	0x18, r1	; 24
	gnd=0b00111111;
  a8:	8f e3       	ldi	r24, 0x3F	; 63
  aa:	8b bb       	out	0x1b, r24	; 27
		gnd &=~(1<<h1);
		_delay_ms(5);
		gnd|=(1<<h1);
	}
	if (hr>=10){
		disp =num[hr/10];
  ac:	2a e0       	ldi	r18, 0x0A	; 10
  ae:	30 e0       	ldi	r19, 0x00	; 0
			min++;}
		if (min>59){
			min=0;
			hr++;}	
		if (hr>12){
			hr=1;}
  b0:	e1 e0       	ldi	r30, 0x01	; 1
  b2:	40 e0       	ldi	r20, 0x00	; 0
	DDRB=0xFF;
	disp=0;
	gnd=0b00111111;
	
	while(1){
		if (sec>59){
  b4:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
  b8:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
  bc:	cc 97       	sbiw	r24, 0x3c	; 60
  be:	6c f0       	brlt	.+26     	; 0xda <main+0x48>
			sec=0;
  c0:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <sec+0x1>
  c4:	10 92 6e 00 	sts	0x006E, r1	; 0x80006e <sec>
			min++;}
  c8:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <min>
  cc:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <min+0x1>
  d0:	01 96       	adiw	r24, 0x01	; 1
  d2:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <min+0x1>
  d6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <min>
		if (min>59){
  da:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <min>
  de:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <min+0x1>
  e2:	cc 97       	sbiw	r24, 0x3c	; 60
  e4:	6c f0       	brlt	.+26     	; 0x100 <main+0x6e>
			min=0;
  e6:	10 92 6d 00 	sts	0x006D, r1	; 0x80006d <min+0x1>
  ea:	10 92 6c 00 	sts	0x006C, r1	; 0x80006c <min>
			hr++;}	
  ee:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <hr>
  f2:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <hr+0x1>
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <hr+0x1>
  fc:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <hr>
		if (hr>12){
 100:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <hr>
 104:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <hr+0x1>
 108:	8d 30       	cpi	r24, 0x0D	; 13
 10a:	91 05       	cpc	r25, r1
 10c:	3c f0       	brlt	.+14     	; 0x11c <main+0x8a>
			hr=1;}
 10e:	e0 93 70 00 	sts	0x0070, r30	; 0x800070 <hr>
 112:	40 93 71 00 	sts	0x0071, r20	; 0x800071 <hr+0x1>
		
		
	if (hr<10){
 116:	8e 2f       	mov	r24, r30
 118:	94 2f       	mov	r25, r20
 11a:	03 c0       	rjmp	.+6      	; 0x122 <main+0x90>
 11c:	8a 30       	cpi	r24, 0x0A	; 10
 11e:	91 05       	cpc	r25, r1
 120:	a4 f4       	brge	.+40     	; 0x14a <main+0xb8>
		disp = num[hr];
 122:	dc 01       	movw	r26, r24
 124:	a0 5a       	subi	r26, 0xA0	; 160
 126:	bf 4f       	sbci	r27, 0xFF	; 255
 128:	8c 91       	ld	r24, X
 12a:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<h1);
 12c:	d9 98       	cbi	0x1b, 1	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 12e:	8f e1       	ldi	r24, 0x1F	; 31
 130:	9e e4       	ldi	r25, 0x4E	; 78
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <main+0xa0>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0xa6>
 138:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<h1);
 13a:	d9 9a       	sbi	0x1b, 1	; 27
	}
	if (hr>=10){
 13c:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <hr>
 140:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <hr+0x1>
 144:	8a 30       	cpi	r24, 0x0A	; 10
 146:	91 05       	cpc	r25, r1
 148:	24 f1       	brlt	.+72     	; 0x192 <main+0x100>
		disp =num[hr/10];
 14a:	b9 01       	movw	r22, r18
 14c:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 150:	db 01       	movw	r26, r22
 152:	a0 5a       	subi	r26, 0xA0	; 160
 154:	bf 4f       	sbci	r27, 0xFF	; 255
 156:	8c 91       	ld	r24, X
 158:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<h2);
 15a:	d8 98       	cbi	0x1b, 0	; 27
 15c:	8f e1       	ldi	r24, 0x1F	; 31
 15e:	9e e4       	ldi	r25, 0x4E	; 78
 160:	01 97       	sbiw	r24, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0xce>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0xd4>
 166:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<h2);
 168:	d8 9a       	sbi	0x1b, 0	; 27
		
		disp=num[hr%10];
 16a:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <hr>
 16e:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <hr+0x1>
 172:	b9 01       	movw	r22, r18
 174:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 178:	dc 01       	movw	r26, r24
 17a:	a0 5a       	subi	r26, 0xA0	; 160
 17c:	bf 4f       	sbci	r27, 0xFF	; 255
 17e:	8c 91       	ld	r24, X
 180:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<h1);
 182:	d9 98       	cbi	0x1b, 1	; 27
 184:	8f e1       	ldi	r24, 0x1F	; 31
 186:	9e e4       	ldi	r25, 0x4E	; 78
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <main+0xf6>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0xfc>
 18e:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<h1);
 190:	d9 9a       	sbi	0x1b, 1	; 27
	}
	if (min<10){
 192:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <min>
 196:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <min+0x1>
 19a:	8a 30       	cpi	r24, 0x0A	; 10
 19c:	91 05       	cpc	r25, r1
 19e:	a4 f4       	brge	.+40     	; 0x1c8 <main+0x136>
		disp=num[min];
 1a0:	dc 01       	movw	r26, r24
 1a2:	a0 5a       	subi	r26, 0xA0	; 160
 1a4:	bf 4f       	sbci	r27, 0xFF	; 255
 1a6:	8c 91       	ld	r24, X
 1a8:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<m1);
 1aa:	db 98       	cbi	0x1b, 3	; 27
 1ac:	8f e1       	ldi	r24, 0x1F	; 31
 1ae:	9e e4       	ldi	r25, 0x4E	; 78
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x11e>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x124>
 1b6:	00 00       	nop
		_delay_ms(5);
		gnd |=(1<<m1);
 1b8:	db 9a       	sbi	0x1b, 3	; 27
	}
	if (min>=10){
 1ba:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <min>
 1be:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <min+0x1>
 1c2:	8a 30       	cpi	r24, 0x0A	; 10
 1c4:	91 05       	cpc	r25, r1
 1c6:	24 f1       	brlt	.+72     	; 0x210 <main+0x17e>
		disp=num[min/10];
 1c8:	b9 01       	movw	r22, r18
 1ca:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 1ce:	db 01       	movw	r26, r22
 1d0:	a0 5a       	subi	r26, 0xA0	; 160
 1d2:	bf 4f       	sbci	r27, 0xFF	; 255
 1d4:	8c 91       	ld	r24, X
 1d6:	88 bb       	out	0x18, r24	; 24
		gnd  &=~(1<<m2);
 1d8:	da 98       	cbi	0x1b, 2	; 27
 1da:	8f e1       	ldi	r24, 0x1F	; 31
 1dc:	9e e4       	ldi	r25, 0x4E	; 78
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <main+0x14c>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x152>
 1e4:	00 00       	nop
		_delay_ms(5);
		gnd |=(1<<m2);
 1e6:	da 9a       	sbi	0x1b, 2	; 27
		
		disp=num[min%10];
 1e8:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <min>
 1ec:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <min+0x1>
 1f0:	b9 01       	movw	r22, r18
 1f2:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 1f6:	dc 01       	movw	r26, r24
 1f8:	a0 5a       	subi	r26, 0xA0	; 160
 1fa:	bf 4f       	sbci	r27, 0xFF	; 255
 1fc:	8c 91       	ld	r24, X
 1fe:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<m1);
 200:	db 98       	cbi	0x1b, 3	; 27
 202:	8f e1       	ldi	r24, 0x1F	; 31
 204:	9e e4       	ldi	r25, 0x4E	; 78
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0x174>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x17a>
 20c:	00 00       	nop
		_delay_ms(5);
		gnd |=(1<<m1);
 20e:	db 9a       	sbi	0x1b, 3	; 27
	}
	if (sec<10){
 210:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
 214:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
 218:	8a 30       	cpi	r24, 0x0A	; 10
 21a:	91 05       	cpc	r25, r1
 21c:	ac f4       	brge	.+42     	; 0x248 <main+0x1b6>
		disp=num[sec];
 21e:	dc 01       	movw	r26, r24
 220:	a0 5a       	subi	r26, 0xA0	; 160
 222:	bf 4f       	sbci	r27, 0xFF	; 255
 224:	8c 91       	ld	r24, X
 226:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<s1);
 228:	dd 98       	cbi	0x1b, 5	; 27
 22a:	8f e1       	ldi	r24, 0x1F	; 31
 22c:	9e e4       	ldi	r25, 0x4E	; 78
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <main+0x19c>
 232:	00 c0       	rjmp	.+0      	; 0x234 <main+0x1a2>
 234:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<s1);
 236:	dd 9a       	sbi	0x1b, 5	; 27
	}
	if (sec>=10){
 238:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
 23c:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
 240:	8a 30       	cpi	r24, 0x0A	; 10
 242:	91 05       	cpc	r25, r1
 244:	0c f4       	brge	.+2      	; 0x248 <main+0x1b6>
 246:	36 cf       	rjmp	.-404    	; 0xb4 <main+0x22>
		disp=num[sec/10];
 248:	b9 01       	movw	r22, r18
 24a:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 24e:	db 01       	movw	r26, r22
 250:	a0 5a       	subi	r26, 0xA0	; 160
 252:	bf 4f       	sbci	r27, 0xFF	; 255
 254:	8c 91       	ld	r24, X
 256:	88 bb       	out	0x18, r24	; 24
		gnd&=~(1<<s2);
 258:	dc 98       	cbi	0x1b, 4	; 27
 25a:	8f e1       	ldi	r24, 0x1F	; 31
 25c:	9e e4       	ldi	r25, 0x4E	; 78
 25e:	01 97       	sbiw	r24, 0x01	; 1
 260:	f1 f7       	brne	.-4      	; 0x25e <main+0x1cc>
 262:	00 c0       	rjmp	.+0      	; 0x264 <main+0x1d2>
 264:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<s2);
 266:	dc 9a       	sbi	0x1b, 4	; 27
		
		disp=num[sec%10];
 268:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
 26c:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
 270:	b9 01       	movw	r22, r18
 272:	0e 94 6f 01 	call	0x2de	; 0x2de <__divmodhi4>
 276:	dc 01       	movw	r26, r24
 278:	a0 5a       	subi	r26, 0xA0	; 160
 27a:	bf 4f       	sbci	r27, 0xFF	; 255
 27c:	8c 91       	ld	r24, X
 27e:	88 bb       	out	0x18, r24	; 24
		gnd &=~(1<<s1);
 280:	dd 98       	cbi	0x1b, 5	; 27
 282:	8f e1       	ldi	r24, 0x1F	; 31
 284:	9e e4       	ldi	r25, 0x4E	; 78
 286:	01 97       	sbiw	r24, 0x01	; 1
 288:	f1 f7       	brne	.-4      	; 0x286 <main+0x1f4>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0x1fa>
 28c:	00 00       	nop
		_delay_ms(5);
		gnd|=(1<<s1);
 28e:	dd 9a       	sbi	0x1b, 5	; 27
 290:	11 cf       	rjmp	.-478    	; 0xb4 <main+0x22>

00000292 <__vector_4>:
		
	}
		}
	}
	
	ISR(TIMER2_COMP_vect){
 292:	1f 92       	push	r1
 294:	0f 92       	push	r0
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	0f 92       	push	r0
 29a:	11 24       	eor	r1, r1
 29c:	8f 93       	push	r24
 29e:	9f 93       	push	r25
	count++;
 2a0:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 2a4:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__data_end+0x1>
 2a8:	01 96       	adiw	r24, 0x01	; 1
 2aa:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__data_end+0x1>
 2ae:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
	if (count==1){
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	69 f4       	brne	.+26     	; 0x2d0 <__vector_4+0x3e>
		sec++;
 2b6:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <sec>
 2ba:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <sec+0x1>
 2be:	01 96       	adiw	r24, 0x01	; 1
 2c0:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <sec+0x1>
 2c4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <sec>
		count=0;}
 2c8:	10 92 6b 00 	sts	0x006B, r1	; 0x80006b <__data_end+0x1>
 2cc:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
	}
 2d0:	9f 91       	pop	r25
 2d2:	8f 91       	pop	r24
 2d4:	0f 90       	pop	r0
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	0f 90       	pop	r0
 2da:	1f 90       	pop	r1
 2dc:	18 95       	reti

000002de <__divmodhi4>:
 2de:	97 fb       	bst	r25, 7
 2e0:	07 2e       	mov	r0, r23
 2e2:	16 f4       	brtc	.+4      	; 0x2e8 <__divmodhi4+0xa>
 2e4:	00 94       	com	r0
 2e6:	07 d0       	rcall	.+14     	; 0x2f6 <__divmodhi4_neg1>
 2e8:	77 fd       	sbrc	r23, 7
 2ea:	09 d0       	rcall	.+18     	; 0x2fe <__divmodhi4_neg2>
 2ec:	0e 94 83 01 	call	0x306	; 0x306 <__udivmodhi4>
 2f0:	07 fc       	sbrc	r0, 7
 2f2:	05 d0       	rcall	.+10     	; 0x2fe <__divmodhi4_neg2>
 2f4:	3e f4       	brtc	.+14     	; 0x304 <__divmodhi4_exit>

000002f6 <__divmodhi4_neg1>:
 2f6:	90 95       	com	r25
 2f8:	81 95       	neg	r24
 2fa:	9f 4f       	sbci	r25, 0xFF	; 255
 2fc:	08 95       	ret

000002fe <__divmodhi4_neg2>:
 2fe:	70 95       	com	r23
 300:	61 95       	neg	r22
 302:	7f 4f       	sbci	r23, 0xFF	; 255

00000304 <__divmodhi4_exit>:
 304:	08 95       	ret

00000306 <__udivmodhi4>:
 306:	aa 1b       	sub	r26, r26
 308:	bb 1b       	sub	r27, r27
 30a:	51 e1       	ldi	r21, 0x11	; 17
 30c:	07 c0       	rjmp	.+14     	; 0x31c <__udivmodhi4_ep>

0000030e <__udivmodhi4_loop>:
 30e:	aa 1f       	adc	r26, r26
 310:	bb 1f       	adc	r27, r27
 312:	a6 17       	cp	r26, r22
 314:	b7 07       	cpc	r27, r23
 316:	10 f0       	brcs	.+4      	; 0x31c <__udivmodhi4_ep>
 318:	a6 1b       	sub	r26, r22
 31a:	b7 0b       	sbc	r27, r23

0000031c <__udivmodhi4_ep>:
 31c:	88 1f       	adc	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	5a 95       	dec	r21
 322:	a9 f7       	brne	.-22     	; 0x30e <__udivmodhi4_loop>
 324:	80 95       	com	r24
 326:	90 95       	com	r25
 328:	bc 01       	movw	r22, r24
 32a:	cd 01       	movw	r24, r26
 32c:	08 95       	ret

0000032e <_exit>:
 32e:	f8 94       	cli

00000330 <__stop_program>:
 330:	ff cf       	rjmp	.-2      	; 0x330 <__stop_program>
