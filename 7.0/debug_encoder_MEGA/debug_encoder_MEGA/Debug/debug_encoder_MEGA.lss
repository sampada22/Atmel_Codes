
debug_encoder_MEGA.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800200  000006c6  0000075a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800248  00800248  000007a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f31  00000000  00000000  00000904  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f0f  00000000  00000000  00002835  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000be5  00000000  00000000  00003744  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  0000432c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008e4  00000000  00000000  00004684  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000127b  00000000  00000000  00004f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000061e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	23 c2       	rjmp	.+1094   	; 0x44c <__vector_1>
   6:	00 00       	nop
   8:	79 c2       	rjmp	.+1266   	; 0x4fc <__vector_2>
   a:	00 00       	nop
   c:	cf c2       	rjmp	.+1438   	; 0x5ac <__vector_3>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e6 ec       	ldi	r30, 0xC6	; 198
  fc:	f6 e0       	ldi	r31, 0x06	; 6
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 34       	cpi	r26, 0x48	; 72
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e4       	ldi	r26, 0x48	; 72
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a7 35       	cpi	r26, 0x57	; 87
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	d1 d0       	rcall	.+418    	; 0x2c2 <main>
 120:	d0 c2       	rjmp	.+1440   	; 0x6c2 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <_ZL9lcd_writeh>:
void lcd_num( int num, int radix )
{
	char str[6];
	itoa( num, str, radix );
	lcd_puts( str );
}
 124:	95 ed       	ldi	r25, 0xD5	; 213
 126:	9a 95       	dec	r25
 128:	f1 f7       	brne	.-4      	; 0x126 <_ZL9lcd_writeh+0x2>
 12a:	00 00       	nop
 12c:	88 23       	and	r24, r24
 12e:	14 f4       	brge	.+4      	; 0x134 <_ZL9lcd_writeh+0x10>
 130:	42 9a       	sbi	0x08, 2	; 8
 132:	01 c0       	rjmp	.+2      	; 0x136 <_ZL9lcd_writeh+0x12>
 134:	42 98       	cbi	0x08, 2	; 8
 136:	86 ff       	sbrs	r24, 6
 138:	02 c0       	rjmp	.+4      	; 0x13e <_ZL9lcd_writeh+0x1a>
 13a:	40 9a       	sbi	0x08, 0	; 8
 13c:	01 c0       	rjmp	.+2      	; 0x140 <_ZL9lcd_writeh+0x1c>
 13e:	40 98       	cbi	0x08, 0	; 8
 140:	85 ff       	sbrs	r24, 5
 142:	02 c0       	rjmp	.+4      	; 0x148 <_ZL9lcd_writeh+0x24>
 144:	a2 9a       	sbi	0x14, 2	; 20
 146:	01 c0       	rjmp	.+2      	; 0x14a <_ZL9lcd_writeh+0x26>
 148:	a2 98       	cbi	0x14, 2	; 20
 14a:	84 ff       	sbrs	r24, 4
 14c:	02 c0       	rjmp	.+4      	; 0x152 <_ZL9lcd_writeh+0x2e>
 14e:	a0 9a       	sbi	0x14, 0	; 20
 150:	01 c0       	rjmp	.+2      	; 0x154 <_ZL9lcd_writeh+0x30>
 152:	a0 98       	cbi	0x14, 0	; 20
 154:	a1 9a       	sbi	0x14, 1	; 20
 156:	a1 98       	cbi	0x14, 1	; 20
 158:	83 ff       	sbrs	r24, 3
 15a:	02 c0       	rjmp	.+4      	; 0x160 <_ZL9lcd_writeh+0x3c>
 15c:	42 9a       	sbi	0x08, 2	; 8
 15e:	01 c0       	rjmp	.+2      	; 0x162 <_ZL9lcd_writeh+0x3e>
 160:	42 98       	cbi	0x08, 2	; 8
 162:	82 ff       	sbrs	r24, 2
 164:	02 c0       	rjmp	.+4      	; 0x16a <_ZL9lcd_writeh+0x46>
 166:	40 9a       	sbi	0x08, 0	; 8
 168:	01 c0       	rjmp	.+2      	; 0x16c <_ZL9lcd_writeh+0x48>
 16a:	40 98       	cbi	0x08, 0	; 8
 16c:	81 ff       	sbrs	r24, 1
 16e:	02 c0       	rjmp	.+4      	; 0x174 <_ZL9lcd_writeh+0x50>
 170:	a2 9a       	sbi	0x14, 2	; 20
 172:	01 c0       	rjmp	.+2      	; 0x176 <_ZL9lcd_writeh+0x52>
 174:	a2 98       	cbi	0x14, 2	; 20
 176:	80 ff       	sbrs	r24, 0
 178:	02 c0       	rjmp	.+4      	; 0x17e <_ZL9lcd_writeh+0x5a>
 17a:	a0 9a       	sbi	0x14, 0	; 20
 17c:	01 c0       	rjmp	.+2      	; 0x180 <_ZL9lcd_writeh+0x5c>
 17e:	a0 98       	cbi	0x14, 0	; 20
 180:	a1 9a       	sbi	0x14, 1	; 20
 182:	a1 98       	cbi	0x14, 1	; 20
 184:	08 95       	ret

00000186 <_Z9lcd_clearv>:
 186:	eb e0       	ldi	r30, 0x0B	; 11
 188:	f1 e0       	ldi	r31, 0x01	; 1
 18a:	80 81       	ld	r24, Z
 18c:	8b 7f       	andi	r24, 0xFB	; 251
 18e:	80 83       	st	Z, r24
 190:	81 e0       	ldi	r24, 0x01	; 1
 192:	c8 df       	rcall	.-112    	; 0x124 <_ZL9lcd_writeh>
 194:	8f e3       	ldi	r24, 0x3F	; 63
 196:	9f e1       	ldi	r25, 0x1F	; 31
 198:	01 97       	sbiw	r24, 0x01	; 1
 19a:	f1 f7       	brne	.-4      	; 0x198 <_Z9lcd_clearv+0x12>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <_Z9lcd_clearv+0x18>
 19e:	00 00       	nop
 1a0:	08 95       	ret

000001a2 <_Z8lcd_putsPKc>:
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	ec 01       	movw	r28, r24
 1a8:	eb e0       	ldi	r30, 0x0B	; 11
 1aa:	f1 e0       	ldi	r31, 0x01	; 1
 1ac:	80 81       	ld	r24, Z
 1ae:	84 60       	ori	r24, 0x04	; 4
 1b0:	80 83       	st	Z, r24
 1b2:	88 81       	ld	r24, Y
 1b4:	88 23       	and	r24, r24
 1b6:	29 f0       	breq	.+10     	; 0x1c2 <_Z8lcd_putsPKc+0x20>
 1b8:	21 96       	adiw	r28, 0x01	; 1
 1ba:	b4 df       	rcall	.-152    	; 0x124 <_ZL9lcd_writeh>
 1bc:	89 91       	ld	r24, Y+
 1be:	81 11       	cpse	r24, r1
 1c0:	fc cf       	rjmp	.-8      	; 0x1ba <_Z8lcd_putsPKc+0x18>
 1c2:	df 91       	pop	r29
 1c4:	cf 91       	pop	r28
 1c6:	08 95       	ret

000001c8 <_Z9lcd_putchc>:
 1c8:	eb e0       	ldi	r30, 0x0B	; 11
 1ca:	f1 e0       	ldi	r31, 0x01	; 1
 1cc:	90 81       	ld	r25, Z
 1ce:	94 60       	ori	r25, 0x04	; 4
 1d0:	90 83       	st	Z, r25
 1d2:	a8 cf       	rjmp	.-176    	; 0x124 <_ZL9lcd_writeh>
 1d4:	08 95       	ret

000001d6 <_Z8lcd_gotoh>:
 1d6:	eb e0       	ldi	r30, 0x0B	; 11
 1d8:	f1 e0       	ldi	r31, 0x01	; 1
 1da:	90 81       	ld	r25, Z
 1dc:	9b 7f       	andi	r25, 0xFB	; 251
 1de:	90 83       	st	Z, r25
 1e0:	80 68       	ori	r24, 0x80	; 128
 1e2:	a0 cf       	rjmp	.-192    	; 0x124 <_ZL9lcd_writeh>
 1e4:	08 95       	ret

000001e6 <_Z8lcd_initv>:
 1e6:	ea e0       	ldi	r30, 0x0A	; 10
 1e8:	f1 e0       	ldi	r31, 0x01	; 1
 1ea:	80 81       	ld	r24, Z
 1ec:	84 60       	ori	r24, 0x04	; 4
 1ee:	80 83       	st	Z, r24
 1f0:	99 9a       	sbi	0x13, 1	; 19
 1f2:	3a 9a       	sbi	0x07, 2	; 7
 1f4:	38 9a       	sbi	0x07, 0	; 7
 1f6:	9a 9a       	sbi	0x13, 2	; 19
 1f8:	98 9a       	sbi	0x13, 0	; 19
 1fa:	eb e0       	ldi	r30, 0x0B	; 11
 1fc:	f1 e0       	ldi	r31, 0x01	; 1
 1fe:	80 81       	ld	r24, Z
 200:	8b 7f       	andi	r24, 0xFB	; 251
 202:	80 83       	st	Z, r24
 204:	a1 98       	cbi	0x14, 1	; 20
 206:	8f e5       	ldi	r24, 0x5F	; 95
 208:	9a ee       	ldi	r25, 0xEA	; 234
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	f1 f7       	brne	.-4      	; 0x20a <_Z8lcd_initv+0x24>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <_Z8lcd_initv+0x2a>
 210:	00 00       	nop
 212:	a0 9a       	sbi	0x14, 0	; 20
 214:	a2 9a       	sbi	0x14, 2	; 20
 216:	40 98       	cbi	0x08, 0	; 8
 218:	42 98       	cbi	0x08, 2	; 8
 21a:	a1 9a       	sbi	0x14, 1	; 20
 21c:	a1 98       	cbi	0x14, 1	; 20
 21e:	8f e1       	ldi	r24, 0x1F	; 31
 220:	9e e4       	ldi	r25, 0x4E	; 78
 222:	01 97       	sbiw	r24, 0x01	; 1
 224:	f1 f7       	brne	.-4      	; 0x222 <_Z8lcd_initv+0x3c>
 226:	00 c0       	rjmp	.+0      	; 0x228 <_Z8lcd_initv+0x42>
 228:	00 00       	nop
 22a:	a1 9a       	sbi	0x14, 1	; 20
 22c:	a1 98       	cbi	0x14, 1	; 20
 22e:	8f e1       	ldi	r24, 0x1F	; 31
 230:	93 e0       	ldi	r25, 0x03	; 3
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	f1 f7       	brne	.-4      	; 0x232 <_Z8lcd_initv+0x4c>
 236:	00 c0       	rjmp	.+0      	; 0x238 <_Z8lcd_initv+0x52>
 238:	00 00       	nop
 23a:	a1 9a       	sbi	0x14, 1	; 20
 23c:	a1 98       	cbi	0x14, 1	; 20
 23e:	8f e1       	ldi	r24, 0x1F	; 31
 240:	93 e0       	ldi	r25, 0x03	; 3
 242:	01 97       	sbiw	r24, 0x01	; 1
 244:	f1 f7       	brne	.-4      	; 0x242 <_Z8lcd_initv+0x5c>
 246:	00 c0       	rjmp	.+0      	; 0x248 <_Z8lcd_initv+0x62>
 248:	00 00       	nop
 24a:	a0 98       	cbi	0x14, 0	; 20
 24c:	a2 9a       	sbi	0x14, 2	; 20
 24e:	40 98       	cbi	0x08, 0	; 8
 250:	42 98       	cbi	0x08, 2	; 8
 252:	a1 9a       	sbi	0x14, 1	; 20
 254:	a1 98       	cbi	0x14, 1	; 20
 256:	88 e2       	ldi	r24, 0x28	; 40
 258:	65 df       	rcall	.-310    	; 0x124 <_ZL9lcd_writeh>
 25a:	8c e0       	ldi	r24, 0x0C	; 12
 25c:	63 df       	rcall	.-314    	; 0x124 <_ZL9lcd_writeh>
 25e:	93 df       	rcall	.-218    	; 0x186 <_Z9lcd_clearv>
 260:	86 e0       	ldi	r24, 0x06	; 6
 262:	60 cf       	rjmp	.-320    	; 0x124 <_ZL9lcd_writeh>
 264:	08 95       	ret

00000266 <_Z10lcd_putinti>:
 266:	0f 93       	push	r16
 268:	1f 93       	push	r17
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	2f 97       	sbiw	r28, 0x0f	; 15
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
 27e:	4a e0       	ldi	r20, 0x0A	; 10
 280:	be 01       	movw	r22, r28
 282:	6f 5f       	subi	r22, 0xFF	; 255
 284:	7f 4f       	sbci	r23, 0xFF	; 255
 286:	ea d1       	rcall	.+980    	; 0x65c <__itoa_ncheck>
 288:	89 81       	ldd	r24, Y+1	; 0x01
 28a:	88 23       	and	r24, r24
 28c:	49 f0       	breq	.+18     	; 0x2a0 <_Z10lcd_putinti+0x3a>
 28e:	8e 01       	movw	r16, r28
 290:	0e 5f       	subi	r16, 0xFE	; 254
 292:	1f 4f       	sbci	r17, 0xFF	; 255
 294:	99 df       	rcall	.-206    	; 0x1c8 <_Z9lcd_putchc>
 296:	f8 01       	movw	r30, r16
 298:	81 91       	ld	r24, Z+
 29a:	8f 01       	movw	r16, r30
 29c:	81 11       	cpse	r24, r1
 29e:	fa cf       	rjmp	.-12     	; 0x294 <_Z10lcd_putinti+0x2e>
 2a0:	2f 96       	adiw	r28, 0x0f	; 15
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	f8 94       	cli
 2a6:	de bf       	out	0x3e, r29	; 62
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	cd bf       	out	0x3d, r28	; 61
 2ac:	df 91       	pop	r29
 2ae:	cf 91       	pop	r28
 2b0:	1f 91       	pop	r17
 2b2:	0f 91       	pop	r16
 2b4:	08 95       	ret

000002b6 <_Z10lcd_gotoxyhh>:

void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
 2b6:	90 e4       	ldi	r25, 0x40	; 64
 2b8:	69 9f       	mul	r22, r25
 2ba:	80 0d       	add	r24, r0
 2bc:	11 24       	eor	r1, r1
 2be:	8b cf       	rjmp	.-234    	; 0x1d6 <_Z8lcd_gotoh>
 2c0:	08 95       	ret

000002c2 <main>:
struct direction motor1,motor2,motor3,motor4;


int main(void)
{
	DDRC = (0<<PINC7)|(0<<PINC6)|(0<<PINC5);
 2c2:	17 b8       	out	0x07, r1	; 7
	 	PORTC = (0<<PINC7)|(0<<PINC6)|(0<<PINC5);
 2c4:	18 b8       	out	0x08, r1	; 8
	 	DDRD |=(0<<PIND4)|(0<<PIND5)|(0<<PIND6);
 2c6:	8a b1       	in	r24, 0x0a	; 10
 2c8:	8a b9       	out	0x0a, r24	; 10
	 	PORTD |= (1<<PIND4)|(1<<PIND5)|(1<<PIND6);
 2ca:	8b b1       	in	r24, 0x0b	; 11
 2cc:	80 67       	ori	r24, 0x70	; 112
	 	 
	lcd_init();
 2ce:	8b b9       	out	0x0b, r24	; 11
	EICRA |= (1<<ISC01)| (1<<ISC00)|(1<<ISC10)|(1<<ISC11)|(1<<ISC20)|(1<<ISC21); // trigger at rising edge
 2d0:	8a df       	rcall	.-236    	; 0x1e6 <_Z8lcd_initv>
 2d2:	e9 e6       	ldi	r30, 0x69	; 105
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	80 81       	ld	r24, Z
 2d8:	8f 63       	ori	r24, 0x3F	; 63
	//EICRB |= (1<<ISC20)|(1<<ISC21);
	EIMSK  |= (1<<INT0)|(1<<INT1)|(1<<INT2)|(1<<INT3);                   //enable interrupts 0,1,2
 2da:	80 83       	st	Z, r24
 2dc:	8d b3       	in	r24, 0x1d	; 29
 2de:	8f 60       	ori	r24, 0x0F	; 15
	//GICR |= (1<<INT2);
	sei();
 2e0:	8d bb       	out	0x1d, r24	; 29
	
	while(1)
	{
		if (bit_is_clear(PINF,0)){
 2e2:	78 94       	sei
 2e4:	78 99       	sbic	0x0f, 0	; 15
			lcd_gotoxy(2,2);
 2e6:	0c c0       	rjmp	.+24     	; 0x300 <main+0x3e>
 2e8:	62 e0       	ldi	r22, 0x02	; 2
			lcd_puts("Rotate motor 1");
 2ea:	82 e0       	ldi	r24, 0x02	; 2
 2ec:	e4 df       	rcall	.-56     	; 0x2b6 <_Z10lcd_gotoxyhh>
			lcd_gotoxy(2,1);
 2ee:	80 e0       	ldi	r24, 0x00	; 0
 2f0:	92 e0       	ldi	r25, 0x02	; 2
 2f2:	57 df       	rcall	.-338    	; 0x1a2 <_Z8lcd_putsPKc>
			lcd_puts("                ");
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	82 e0       	ldi	r24, 0x02	; 2
 2f8:	de df       	rcall	.-68     	; 0x2b6 <_Z10lcd_gotoxyhh>

		}
		if (bit_is_clear(PINF,1)){
 2fa:	8f e0       	ldi	r24, 0x0F	; 15
			lcd_gotoxy(2,2);
 2fc:	92 e0       	ldi	r25, 0x02	; 2
 2fe:	51 df       	rcall	.-350    	; 0x1a2 <_Z8lcd_putsPKc>
			lcd_puts("Rotate motor 2");
 300:	79 99       	sbic	0x0f, 1	; 15
 302:	0c c0       	rjmp	.+24     	; 0x31c <main+0x5a>
 304:	62 e0       	ldi	r22, 0x02	; 2
			lcd_gotoxy(2,1);
 306:	82 e0       	ldi	r24, 0x02	; 2
 308:	d6 df       	rcall	.-84     	; 0x2b6 <_Z10lcd_gotoxyhh>
 30a:	80 e2       	ldi	r24, 0x20	; 32
			lcd_puts("                ");
 30c:	92 e0       	ldi	r25, 0x02	; 2
 30e:	49 df       	rcall	.-366    	; 0x1a2 <_Z8lcd_putsPKc>
 310:	61 e0       	ldi	r22, 0x01	; 1

			
		}
		if (bit_is_clear(PINF,2)){
 312:	82 e0       	ldi	r24, 0x02	; 2
			lcd_gotoxy(2,2);
 314:	d0 df       	rcall	.-96     	; 0x2b6 <_Z10lcd_gotoxyhh>
 316:	8f e0       	ldi	r24, 0x0F	; 15
 318:	92 e0       	ldi	r25, 0x02	; 2
			lcd_puts("Rotate motor 3");
 31a:	43 df       	rcall	.-378    	; 0x1a2 <_Z8lcd_putsPKc>
 31c:	7a 99       	sbic	0x0f, 2	; 15
 31e:	e2 cf       	rjmp	.-60     	; 0x2e4 <main+0x22>
 320:	62 e0       	ldi	r22, 0x02	; 2
			lcd_gotoxy(2,1);
 322:	82 e0       	ldi	r24, 0x02	; 2
 324:	c8 df       	rcall	.-112    	; 0x2b6 <_Z10lcd_gotoxyhh>
 326:	8f e2       	ldi	r24, 0x2F	; 47
 328:	92 e0       	ldi	r25, 0x02	; 2
			lcd_puts("                ");
 32a:	3b df       	rcall	.-394    	; 0x1a2 <_Z8lcd_putsPKc>
 32c:	61 e0       	ldi	r22, 0x01	; 1
 32e:	82 e0       	ldi	r24, 0x02	; 2
 330:	c2 df       	rcall	.-124    	; 0x2b6 <_Z10lcd_gotoxyhh>
 332:	8f e0       	ldi	r24, 0x0F	; 15
 334:	92 e0       	ldi	r25, 0x02	; 2
 336:	35 df       	rcall	.-406    	; 0x1a2 <_Z8lcd_putsPKc>
 338:	d5 cf       	rjmp	.-86     	; 0x2e4 <main+0x22>

0000033a <_Z8compare1v>:

		}
	}
}
int compare1(void){
	if (motor1.direction == clockwise){
 33a:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <motor1>
 33e:	81 11       	cpse	r24, r1
		lcd_clear();
 340:	17 c0       	rjmp	.+46     	; 0x370 <_Z8compare1v+0x36>
		lcd_puts("       ");
 342:	21 df       	rcall	.-446    	; 0x186 <_Z9lcd_clearv>
 344:	88 e1       	ldi	r24, 0x18	; 24
		lcd_gotoxy(2,1);
 346:	92 e0       	ldi	r25, 0x02	; 2
 348:	2c df       	rcall	.-424    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_puts("clk:");
 34a:	61 e0       	ldi	r22, 0x01	; 1
 34c:	82 e0       	ldi	r24, 0x02	; 2
 34e:	b3 df       	rcall	.-154    	; 0x2b6 <_Z10lcd_gotoxyhh>
 350:	82 e4       	ldi	r24, 0x42	; 66
		lcd_putint(count0);
 352:	92 e0       	ldi	r25, 0x02	; 2
 354:	26 df       	rcall	.-436    	; 0x1a2 <_Z8lcd_putsPKc>
 356:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <count0>
 35a:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <count0+0x1>
 35e:	a0 91 55 02 	lds	r26, 0x0255	; 0x800255 <count0+0x2>
	}
	if (motor1.direction == anticlockwise){
 362:	b0 91 56 02 	lds	r27, 0x0256	; 0x800256 <count0+0x3>
 366:	7f df       	rcall	.-258    	; 0x266 <_Z10lcd_putinti>
		lcd_clear();
 368:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <motor1>
		lcd_puts("         ");
 36c:	88 23       	and	r24, r24
 36e:	99 f0       	breq	.+38     	; 0x396 <_Z8compare1v+0x5c>
		lcd_gotoxy(2,1);
 370:	0a df       	rcall	.-492    	; 0x186 <_Z9lcd_clearv>
 372:	86 e1       	ldi	r24, 0x16	; 22
 374:	92 e0       	ldi	r25, 0x02	; 2
 376:	15 df       	rcall	.-470    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_puts("anticlk:");
 378:	61 e0       	ldi	r22, 0x01	; 1
 37a:	82 e0       	ldi	r24, 0x02	; 2
 37c:	9c df       	rcall	.-200    	; 0x2b6 <_Z10lcd_gotoxyhh>
		lcd_putint(count0);
 37e:	8e e3       	ldi	r24, 0x3E	; 62
 380:	92 e0       	ldi	r25, 0x02	; 2
 382:	0f df       	rcall	.-482    	; 0x1a2 <_Z8lcd_putsPKc>
 384:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <count0>
 388:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <count0+0x1>
 38c:	a0 91 55 02 	lds	r26, 0x0255	; 0x800255 <count0+0x2>
 390:	b0 91 56 02 	lds	r27, 0x0256	; 0x800256 <count0+0x3>
 394:	68 cf       	rjmp	.-304    	; 0x266 <_Z10lcd_putinti>
 396:	08 95       	ret

00000398 <_Z8compare2v>:
	}
}
int compare2(void){
	if (motor2.direction == clockwise){
 398:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <motor2>
 39c:	81 11       	cpse	r24, r1
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <_Z8compare2v+0x34>

		lcd_puts("                ");
 3a0:	8f e0       	ldi	r24, 0x0F	; 15
 3a2:	92 e0       	ldi	r25, 0x02	; 2
 3a4:	fe de       	rcall	.-516    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_gotoxy(2,1);
 3a6:	61 e0       	ldi	r22, 0x01	; 1
 3a8:	82 e0       	ldi	r24, 0x02	; 2
		lcd_puts("clk:");
 3aa:	85 df       	rcall	.-246    	; 0x2b6 <_Z10lcd_gotoxyhh>
 3ac:	82 e4       	ldi	r24, 0x42	; 66
 3ae:	92 e0       	ldi	r25, 0x02	; 2
		lcd_putint(count1);
 3b0:	f8 de       	rcall	.-528    	; 0x1a2 <_Z8lcd_putsPKc>
 3b2:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <count1>
 3b6:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <count1+0x1>
 3ba:	a0 91 51 02 	lds	r26, 0x0251	; 0x800251 <count1+0x2>
 3be:	b0 91 52 02 	lds	r27, 0x0252	; 0x800252 <count1+0x3>
		
	}
	if (motor2.direction == anticlockwise){
 3c2:	51 df       	rcall	.-350    	; 0x266 <_Z10lcd_putinti>
 3c4:	80 91 49 02 	lds	r24, 0x0249	; 0x800249 <motor2>
		
		lcd_puts("                ");
 3c8:	88 23       	and	r24, r24
 3ca:	91 f0       	breq	.+36     	; 0x3f0 <_Z8compare2v+0x58>
		lcd_gotoxy(2,1);
 3cc:	8f e0       	ldi	r24, 0x0F	; 15
 3ce:	92 e0       	ldi	r25, 0x02	; 2
 3d0:	e8 de       	rcall	.-560    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_puts("anticlk:");
 3d2:	61 e0       	ldi	r22, 0x01	; 1
 3d4:	82 e0       	ldi	r24, 0x02	; 2
 3d6:	6f df       	rcall	.-290    	; 0x2b6 <_Z10lcd_gotoxyhh>
 3d8:	8e e3       	ldi	r24, 0x3E	; 62
		lcd_putint(count1);
 3da:	92 e0       	ldi	r25, 0x02	; 2
 3dc:	e2 de       	rcall	.-572    	; 0x1a2 <_Z8lcd_putsPKc>
 3de:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <count1>
 3e2:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <count1+0x1>
 3e6:	a0 91 51 02 	lds	r26, 0x0251	; 0x800251 <count1+0x2>
 3ea:	b0 91 52 02 	lds	r27, 0x0252	; 0x800252 <count1+0x3>
 3ee:	3b cf       	rjmp	.-394    	; 0x266 <_Z10lcd_putinti>
 3f0:	08 95       	ret

000003f2 <_Z8compare3v>:
		
	}
}
int compare3(void){
	if (motor3.direction == clockwise){
 3f2:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <__data_end>
 3f6:	81 11       	cpse	r24, r1
 3f8:	16 c0       	rjmp	.+44     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
		lcd_puts("                ");
 3fa:	8f e0       	ldi	r24, 0x0F	; 15
 3fc:	92 e0       	ldi	r25, 0x02	; 2
 3fe:	d1 de       	rcall	.-606    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_gotoxy(2,1);
 400:	61 e0       	ldi	r22, 0x01	; 1
 402:	82 e0       	ldi	r24, 0x02	; 2
		lcd_puts("clk:");
 404:	58 df       	rcall	.-336    	; 0x2b6 <_Z10lcd_gotoxyhh>
 406:	82 e4       	ldi	r24, 0x42	; 66
 408:	92 e0       	ldi	r25, 0x02	; 2
		lcd_putint(count2);
 40a:	cb de       	rcall	.-618    	; 0x1a2 <_Z8lcd_putsPKc>
 40c:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <count2>
 410:	90 91 4c 02 	lds	r25, 0x024C	; 0x80024c <count2+0x1>
 414:	a0 91 4d 02 	lds	r26, 0x024D	; 0x80024d <count2+0x2>
 418:	b0 91 4e 02 	lds	r27, 0x024E	; 0x80024e <count2+0x3>
	}
	if (motor3.direction == anticlockwise){
 41c:	24 df       	rcall	.-440    	; 0x266 <_Z10lcd_putinti>
 41e:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <__data_end>
		lcd_puts("                ");
 422:	88 23       	and	r24, r24
 424:	91 f0       	breq	.+36     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
		lcd_gotoxy(2,1);
 426:	8f e0       	ldi	r24, 0x0F	; 15
 428:	92 e0       	ldi	r25, 0x02	; 2
 42a:	bb de       	rcall	.-650    	; 0x1a2 <_Z8lcd_putsPKc>
		lcd_puts("anticlk:");
 42c:	61 e0       	ldi	r22, 0x01	; 1
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	42 df       	rcall	.-380    	; 0x2b6 <_Z10lcd_gotoxyhh>
 432:	8e e3       	ldi	r24, 0x3E	; 62
		lcd_putint(count2);
 434:	92 e0       	ldi	r25, 0x02	; 2
 436:	b5 de       	rcall	.-662    	; 0x1a2 <_Z8lcd_putsPKc>
 438:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <count2>
 43c:	90 91 4c 02 	lds	r25, 0x024C	; 0x80024c <count2+0x1>
 440:	a0 91 4d 02 	lds	r26, 0x024D	; 0x80024d <count2+0x2>
 444:	b0 91 4e 02 	lds	r27, 0x024E	; 0x80024e <count2+0x3>
 448:	0e cf       	rjmp	.-484    	; 0x266 <_Z10lcd_putinti>
 44a:	08 95       	ret

0000044c <__vector_1>:
	}
}
ISR (INT0_vect){
 44c:	1f 92       	push	r1
 44e:	0f 92       	push	r0
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	0b b6       	in	r0, 0x3b	; 59
 458:	0f 92       	push	r0
 45a:	2f 93       	push	r18
 45c:	3f 93       	push	r19
 45e:	4f 93       	push	r20
 460:	5f 93       	push	r21
 462:	6f 93       	push	r22
 464:	7f 93       	push	r23
 466:	8f 93       	push	r24
 468:	9f 93       	push	r25
 46a:	af 93       	push	r26
 46c:	bf 93       	push	r27
 46e:	ef 93       	push	r30
 470:	ff 93       	push	r31
	
	if (bit_is_set(PINA,0)){
 472:	00 9b       	sbis	0x00, 0	; 0
 474:	17 c0       	rjmp	.+46     	; 0x4a4 <__vector_1+0x58>
		count0++;
 476:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <count0>
 47a:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <count0+0x1>
 47e:	a0 91 55 02 	lds	r26, 0x0255	; 0x800255 <count0+0x2>
 482:	b0 91 56 02 	lds	r27, 0x0256	; 0x800256 <count0+0x3>
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	a1 1d       	adc	r26, r1
 48a:	b1 1d       	adc	r27, r1
 48c:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <count0>
 490:	90 93 54 02 	sts	0x0254, r25	; 0x800254 <count0+0x1>
 494:	a0 93 55 02 	sts	0x0255, r26	; 0x800255 <count0+0x2>
 498:	b0 93 56 02 	sts	0x0256, r27	; 0x800256 <count0+0x3>
		motor1.direction = clockwise;
 49c:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <motor1>
		compare1();
 4a0:	4c df       	rcall	.-360    	; 0x33a <_Z8compare1v>
	}
	
	else if (bit_is_clear(PINA,0)){
 4a2:	19 c0       	rjmp	.+50     	; 0x4d6 <__vector_1+0x8a>
 4a4:	00 99       	sbic	0x00, 0	; 0
		count0--;
 4a6:	17 c0       	rjmp	.+46     	; 0x4d6 <__vector_1+0x8a>
 4a8:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <count0>
 4ac:	90 91 54 02 	lds	r25, 0x0254	; 0x800254 <count0+0x1>
 4b0:	a0 91 55 02 	lds	r26, 0x0255	; 0x800255 <count0+0x2>
 4b4:	b0 91 56 02 	lds	r27, 0x0256	; 0x800256 <count0+0x3>
 4b8:	01 97       	sbiw	r24, 0x01	; 1
 4ba:	a1 09       	sbc	r26, r1
 4bc:	b1 09       	sbc	r27, r1
 4be:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <count0>
 4c2:	90 93 54 02 	sts	0x0254, r25	; 0x800254 <count0+0x1>
 4c6:	a0 93 55 02 	sts	0x0255, r26	; 0x800255 <count0+0x2>
 4ca:	b0 93 56 02 	sts	0x0256, r27	; 0x800256 <count0+0x3>
		motor1.direction = anticlockwise;
 4ce:	81 e0       	ldi	r24, 0x01	; 1
		compare1();
 4d0:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <motor1>
	}
}
 4d4:	32 df       	rcall	.-412    	; 0x33a <_Z8compare1v>
 4d6:	ff 91       	pop	r31
 4d8:	ef 91       	pop	r30
 4da:	bf 91       	pop	r27
 4dc:	af 91       	pop	r26
 4de:	9f 91       	pop	r25
 4e0:	8f 91       	pop	r24
 4e2:	7f 91       	pop	r23
 4e4:	6f 91       	pop	r22
 4e6:	5f 91       	pop	r21
 4e8:	4f 91       	pop	r20
 4ea:	3f 91       	pop	r19
 4ec:	2f 91       	pop	r18
 4ee:	0f 90       	pop	r0
 4f0:	0b be       	out	0x3b, r0	; 59
 4f2:	0f 90       	pop	r0
 4f4:	0f be       	out	0x3f, r0	; 63
 4f6:	0f 90       	pop	r0
 4f8:	1f 90       	pop	r1
 4fa:	18 95       	reti

000004fc <__vector_2>:

ISR (INT1_vect){
 4fc:	1f 92       	push	r1
 4fe:	0f 92       	push	r0
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	0f 92       	push	r0
 504:	11 24       	eor	r1, r1
 506:	0b b6       	in	r0, 0x3b	; 59
 508:	0f 92       	push	r0
 50a:	2f 93       	push	r18
 50c:	3f 93       	push	r19
 50e:	4f 93       	push	r20
 510:	5f 93       	push	r21
 512:	6f 93       	push	r22
 514:	7f 93       	push	r23
 516:	8f 93       	push	r24
 518:	9f 93       	push	r25
 51a:	af 93       	push	r26
 51c:	bf 93       	push	r27
 51e:	ef 93       	push	r30
 520:	ff 93       	push	r31
	
	if (bit_is_set(PINA,1)){
 522:	01 9b       	sbis	0x00, 1	; 0
 524:	17 c0       	rjmp	.+46     	; 0x554 <__vector_2+0x58>
		count1++;
 526:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <count1>
 52a:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <count1+0x1>
 52e:	a0 91 51 02 	lds	r26, 0x0251	; 0x800251 <count1+0x2>
 532:	b0 91 52 02 	lds	r27, 0x0252	; 0x800252 <count1+0x3>
 536:	01 96       	adiw	r24, 0x01	; 1
 538:	a1 1d       	adc	r26, r1
 53a:	b1 1d       	adc	r27, r1
 53c:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <count1>
 540:	90 93 50 02 	sts	0x0250, r25	; 0x800250 <count1+0x1>
 544:	a0 93 51 02 	sts	0x0251, r26	; 0x800251 <count1+0x2>
 548:	b0 93 52 02 	sts	0x0252, r27	; 0x800252 <count1+0x3>
		motor2.direction = clockwise;
 54c:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <motor2>
		
		compare2();
 550:	23 df       	rcall	.-442    	; 0x398 <_Z8compare2v>
		
	}
	
	else if (bit_is_clear(PINA,1)){
 552:	19 c0       	rjmp	.+50     	; 0x586 <__vector_2+0x8a>
 554:	01 99       	sbic	0x00, 1	; 0
		count1--;
 556:	17 c0       	rjmp	.+46     	; 0x586 <__vector_2+0x8a>
 558:	80 91 4f 02 	lds	r24, 0x024F	; 0x80024f <count1>
 55c:	90 91 50 02 	lds	r25, 0x0250	; 0x800250 <count1+0x1>
 560:	a0 91 51 02 	lds	r26, 0x0251	; 0x800251 <count1+0x2>
 564:	b0 91 52 02 	lds	r27, 0x0252	; 0x800252 <count1+0x3>
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	a1 09       	sbc	r26, r1
 56c:	b1 09       	sbc	r27, r1
 56e:	80 93 4f 02 	sts	0x024F, r24	; 0x80024f <count1>
 572:	90 93 50 02 	sts	0x0250, r25	; 0x800250 <count1+0x1>
 576:	a0 93 51 02 	sts	0x0251, r26	; 0x800251 <count1+0x2>
 57a:	b0 93 52 02 	sts	0x0252, r27	; 0x800252 <count1+0x3>
		motor2.direction = anticlockwise;
 57e:	81 e0       	ldi	r24, 0x01	; 1
		
		compare2();
 580:	80 93 49 02 	sts	0x0249, r24	; 0x800249 <motor2>
	}
}
 584:	09 df       	rcall	.-494    	; 0x398 <_Z8compare2v>
 586:	ff 91       	pop	r31
 588:	ef 91       	pop	r30
 58a:	bf 91       	pop	r27
 58c:	af 91       	pop	r26
 58e:	9f 91       	pop	r25
 590:	8f 91       	pop	r24
 592:	7f 91       	pop	r23
 594:	6f 91       	pop	r22
 596:	5f 91       	pop	r21
 598:	4f 91       	pop	r20
 59a:	3f 91       	pop	r19
 59c:	2f 91       	pop	r18
 59e:	0f 90       	pop	r0
 5a0:	0b be       	out	0x3b, r0	; 59
 5a2:	0f 90       	pop	r0
 5a4:	0f be       	out	0x3f, r0	; 63
 5a6:	0f 90       	pop	r0
 5a8:	1f 90       	pop	r1
 5aa:	18 95       	reti

000005ac <__vector_3>:


ISR (INT2_vect){
 5ac:	1f 92       	push	r1
 5ae:	0f 92       	push	r0
 5b0:	0f b6       	in	r0, 0x3f	; 63
 5b2:	0f 92       	push	r0
 5b4:	11 24       	eor	r1, r1
 5b6:	0b b6       	in	r0, 0x3b	; 59
 5b8:	0f 92       	push	r0
 5ba:	2f 93       	push	r18
 5bc:	3f 93       	push	r19
 5be:	4f 93       	push	r20
 5c0:	5f 93       	push	r21
 5c2:	6f 93       	push	r22
 5c4:	7f 93       	push	r23
 5c6:	8f 93       	push	r24
 5c8:	9f 93       	push	r25
 5ca:	af 93       	push	r26
 5cc:	bf 93       	push	r27
 5ce:	ef 93       	push	r30
 5d0:	ff 93       	push	r31
	
	if (bit_is_set(PINA,2)){
 5d2:	02 9b       	sbis	0x00, 2	; 0
 5d4:	17 c0       	rjmp	.+46     	; 0x604 <__vector_3+0x58>
		count2++;
 5d6:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <count2>
 5da:	90 91 4c 02 	lds	r25, 0x024C	; 0x80024c <count2+0x1>
 5de:	a0 91 4d 02 	lds	r26, 0x024D	; 0x80024d <count2+0x2>
 5e2:	b0 91 4e 02 	lds	r27, 0x024E	; 0x80024e <count2+0x3>
 5e6:	01 96       	adiw	r24, 0x01	; 1
 5e8:	a1 1d       	adc	r26, r1
 5ea:	b1 1d       	adc	r27, r1
 5ec:	80 93 4b 02 	sts	0x024B, r24	; 0x80024b <count2>
 5f0:	90 93 4c 02 	sts	0x024C, r25	; 0x80024c <count2+0x1>
 5f4:	a0 93 4d 02 	sts	0x024D, r26	; 0x80024d <count2+0x2>
 5f8:	b0 93 4e 02 	sts	0x024E, r27	; 0x80024e <count2+0x3>
		motor3.direction = clockwise;
 5fc:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <__data_end>
		compare3();
 600:	f8 de       	rcall	.-528    	; 0x3f2 <_Z8compare3v>
		
	}
	
	else if (bit_is_clear(PINA,2)){
 602:	19 c0       	rjmp	.+50     	; 0x636 <__vector_3+0x8a>
 604:	02 99       	sbic	0x00, 2	; 0
		count2--;
 606:	17 c0       	rjmp	.+46     	; 0x636 <__vector_3+0x8a>
 608:	80 91 4b 02 	lds	r24, 0x024B	; 0x80024b <count2>
 60c:	90 91 4c 02 	lds	r25, 0x024C	; 0x80024c <count2+0x1>
 610:	a0 91 4d 02 	lds	r26, 0x024D	; 0x80024d <count2+0x2>
 614:	b0 91 4e 02 	lds	r27, 0x024E	; 0x80024e <count2+0x3>
 618:	01 97       	sbiw	r24, 0x01	; 1
 61a:	a1 09       	sbc	r26, r1
 61c:	b1 09       	sbc	r27, r1
 61e:	80 93 4b 02 	sts	0x024B, r24	; 0x80024b <count2>
 622:	90 93 4c 02 	sts	0x024C, r25	; 0x80024c <count2+0x1>
 626:	a0 93 4d 02 	sts	0x024D, r26	; 0x80024d <count2+0x2>
 62a:	b0 93 4e 02 	sts	0x024E, r27	; 0x80024e <count2+0x3>
		motor3.direction = anticlockwise;
 62e:	81 e0       	ldi	r24, 0x01	; 1
		compare3();
 630:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <__data_end>
	}
}
 634:	de de       	rcall	.-580    	; 0x3f2 <_Z8compare3v>
 636:	ff 91       	pop	r31
 638:	ef 91       	pop	r30
 63a:	bf 91       	pop	r27
 63c:	af 91       	pop	r26
 63e:	9f 91       	pop	r25
 640:	8f 91       	pop	r24
 642:	7f 91       	pop	r23
 644:	6f 91       	pop	r22
 646:	5f 91       	pop	r21
 648:	4f 91       	pop	r20
 64a:	3f 91       	pop	r19
 64c:	2f 91       	pop	r18
 64e:	0f 90       	pop	r0
 650:	0b be       	out	0x3b, r0	; 59
 652:	0f 90       	pop	r0
 654:	0f be       	out	0x3f, r0	; 63
 656:	0f 90       	pop	r0
 658:	1f 90       	pop	r1
 65a:	18 95       	reti

0000065c <__itoa_ncheck>:
 65c:	bb 27       	eor	r27, r27
 65e:	4a 30       	cpi	r20, 0x0A	; 10
 660:	31 f4       	brne	.+12     	; 0x66e <__itoa_ncheck+0x12>
 662:	99 23       	and	r25, r25
 664:	22 f4       	brpl	.+8      	; 0x66e <__itoa_ncheck+0x12>
 666:	bd e2       	ldi	r27, 0x2D	; 45
 668:	90 95       	com	r25
 66a:	81 95       	neg	r24
 66c:	9f 4f       	sbci	r25, 0xFF	; 255
 66e:	01 c0       	rjmp	.+2      	; 0x672 <__utoa_common>

00000670 <__utoa_ncheck>:
 670:	bb 27       	eor	r27, r27

00000672 <__utoa_common>:
 672:	fb 01       	movw	r30, r22
 674:	55 27       	eor	r21, r21
 676:	aa 27       	eor	r26, r26
 678:	88 0f       	add	r24, r24
 67a:	99 1f       	adc	r25, r25
 67c:	aa 1f       	adc	r26, r26
 67e:	a4 17       	cp	r26, r20
 680:	10 f0       	brcs	.+4      	; 0x686 <__utoa_common+0x14>
 682:	a4 1b       	sub	r26, r20
 684:	83 95       	inc	r24
 686:	50 51       	subi	r21, 0x10	; 16
 688:	b9 f7       	brne	.-18     	; 0x678 <__utoa_common+0x6>
 68a:	a0 5d       	subi	r26, 0xD0	; 208
 68c:	aa 33       	cpi	r26, 0x3A	; 58
 68e:	08 f0       	brcs	.+2      	; 0x692 <__utoa_common+0x20>
 690:	a9 5d       	subi	r26, 0xD9	; 217
 692:	a1 93       	st	Z+, r26
 694:	00 97       	sbiw	r24, 0x00	; 0
 696:	79 f7       	brne	.-34     	; 0x676 <__utoa_common+0x4>
 698:	b1 11       	cpse	r27, r1
 69a:	b1 93       	st	Z+, r27
 69c:	11 92       	st	Z+, r1
 69e:	cb 01       	movw	r24, r22
 6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <strrev>

000006a2 <strrev>:
 6a2:	dc 01       	movw	r26, r24
 6a4:	fc 01       	movw	r30, r24
 6a6:	67 2f       	mov	r22, r23
 6a8:	71 91       	ld	r23, Z+
 6aa:	77 23       	and	r23, r23
 6ac:	e1 f7       	brne	.-8      	; 0x6a6 <strrev+0x4>
 6ae:	32 97       	sbiw	r30, 0x02	; 2
 6b0:	04 c0       	rjmp	.+8      	; 0x6ba <strrev+0x18>
 6b2:	7c 91       	ld	r23, X
 6b4:	6d 93       	st	X+, r22
 6b6:	70 83       	st	Z, r23
 6b8:	62 91       	ld	r22, -Z
 6ba:	ae 17       	cp	r26, r30
 6bc:	bf 07       	cpc	r27, r31
 6be:	c8 f3       	brcs	.-14     	; 0x6b2 <strrev+0x10>
 6c0:	08 95       	ret

000006c2 <_exit>:
 6c2:	f8 94       	cli

000006c4 <__stop_program>:
 6c4:	ff cf       	rjmp	.-2      	; 0x6c4 <__stop_program>
