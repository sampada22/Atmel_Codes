
encoderLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000007fc  00000890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000051  0080006c  0080006c  0000089c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000193d  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b18  00000000  00000000  0000237d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000be5  00000000  00000000  00002e95  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d4  00000000  00000000  00003a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000764  00000000  00000000  00003e50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013ad  00000000  00000000  000045b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  00005961  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 29 01 	jmp	0x252	; 0x252 <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 66 01 	jmp	0x2cc	; 0x2cc <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_13>
  38:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__vector_14>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 3b       	cpi	r26, 0xBD	; 189
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 0b 01 	call	0x216	; 0x216 <main>
  8a:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_ZL9lcd_writeh>:
void lcd_num( int num, int radix )
{
	char str[6];
	itoa( num, str, radix );
	lcd_puts( str );
}
  92:	95 ed       	ldi	r25, 0xD5	; 213
  94:	9a 95       	dec	r25
  96:	f1 f7       	brne	.-4      	; 0x94 <_ZL9lcd_writeh+0x2>
  98:	00 00       	nop
  9a:	88 23       	and	r24, r24
  9c:	14 f4       	brge	.+4      	; 0xa2 <_ZL9lcd_writeh+0x10>
  9e:	da 9a       	sbi	0x1b, 2	; 27
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <_ZL9lcd_writeh+0x12>
  a2:	da 98       	cbi	0x1b, 2	; 27
  a4:	86 ff       	sbrs	r24, 6
  a6:	02 c0       	rjmp	.+4      	; 0xac <_ZL9lcd_writeh+0x1a>
  a8:	db 9a       	sbi	0x1b, 3	; 27
  aa:	01 c0       	rjmp	.+2      	; 0xae <_ZL9lcd_writeh+0x1c>
  ac:	db 98       	cbi	0x1b, 3	; 27
  ae:	85 ff       	sbrs	r24, 5
  b0:	02 c0       	rjmp	.+4      	; 0xb6 <_ZL9lcd_writeh+0x24>
  b2:	dc 9a       	sbi	0x1b, 4	; 27
  b4:	01 c0       	rjmp	.+2      	; 0xb8 <_ZL9lcd_writeh+0x26>
  b6:	dc 98       	cbi	0x1b, 4	; 27
  b8:	84 ff       	sbrs	r24, 4
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <_ZL9lcd_writeh+0x2e>
  bc:	dd 9a       	sbi	0x1b, 5	; 27
  be:	01 c0       	rjmp	.+2      	; 0xc2 <_ZL9lcd_writeh+0x30>
  c0:	dd 98       	cbi	0x1b, 5	; 27
  c2:	de 9a       	sbi	0x1b, 6	; 27
  c4:	de 98       	cbi	0x1b, 6	; 27
  c6:	83 ff       	sbrs	r24, 3
  c8:	02 c0       	rjmp	.+4      	; 0xce <_ZL9lcd_writeh+0x3c>
  ca:	da 9a       	sbi	0x1b, 2	; 27
  cc:	01 c0       	rjmp	.+2      	; 0xd0 <_ZL9lcd_writeh+0x3e>
  ce:	da 98       	cbi	0x1b, 2	; 27
  d0:	82 ff       	sbrs	r24, 2
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <_ZL9lcd_writeh+0x46>
  d4:	db 9a       	sbi	0x1b, 3	; 27
  d6:	01 c0       	rjmp	.+2      	; 0xda <_ZL9lcd_writeh+0x48>
  d8:	db 98       	cbi	0x1b, 3	; 27
  da:	81 ff       	sbrs	r24, 1
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <_ZL9lcd_writeh+0x50>
  de:	dc 9a       	sbi	0x1b, 4	; 27
  e0:	01 c0       	rjmp	.+2      	; 0xe4 <_ZL9lcd_writeh+0x52>
  e2:	dc 98       	cbi	0x1b, 4	; 27
  e4:	80 ff       	sbrs	r24, 0
  e6:	02 c0       	rjmp	.+4      	; 0xec <_ZL9lcd_writeh+0x5a>
  e8:	dd 9a       	sbi	0x1b, 5	; 27
  ea:	01 c0       	rjmp	.+2      	; 0xee <_ZL9lcd_writeh+0x5c>
  ec:	dd 98       	cbi	0x1b, 5	; 27
  ee:	de 9a       	sbi	0x1b, 6	; 27
  f0:	de 98       	cbi	0x1b, 6	; 27
  f2:	08 95       	ret

000000f4 <_Z9lcd_clearv>:
  f4:	df 98       	cbi	0x1b, 7	; 27
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
  fc:	8f e3       	ldi	r24, 0x3F	; 63
  fe:	9f e1       	ldi	r25, 0x1F	; 31
 100:	01 97       	sbiw	r24, 0x01	; 1
 102:	f1 f7       	brne	.-4      	; 0x100 <_Z9lcd_clearv+0xc>
 104:	00 c0       	rjmp	.+0      	; 0x106 <_Z9lcd_clearv+0x12>
 106:	00 00       	nop
 108:	08 95       	ret

0000010a <_Z8lcd_putsPKc>:
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	ec 01       	movw	r28, r24
 110:	df 9a       	sbi	0x1b, 7	; 27
 112:	88 81       	ld	r24, Y
 114:	88 23       	and	r24, r24
 116:	31 f0       	breq	.+12     	; 0x124 <_Z8lcd_putsPKc+0x1a>
 118:	21 96       	adiw	r28, 0x01	; 1
 11a:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 11e:	89 91       	ld	r24, Y+
 120:	81 11       	cpse	r24, r1
 122:	fb cf       	rjmp	.-10     	; 0x11a <_Z8lcd_putsPKc+0x10>
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	08 95       	ret

0000012a <_Z9lcd_putchc>:
 12a:	df 9a       	sbi	0x1b, 7	; 27
 12c:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 130:	08 95       	ret

00000132 <_Z8lcd_gotoh>:
 132:	df 98       	cbi	0x1b, 7	; 27
 134:	80 68       	ori	r24, 0x80	; 128
 136:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 13a:	08 95       	ret

0000013c <_Z8lcd_initv>:
 13c:	d7 9a       	sbi	0x1a, 7	; 26
 13e:	d6 9a       	sbi	0x1a, 6	; 26
 140:	d2 9a       	sbi	0x1a, 2	; 26
 142:	d3 9a       	sbi	0x1a, 3	; 26
 144:	d4 9a       	sbi	0x1a, 4	; 26
 146:	d5 9a       	sbi	0x1a, 5	; 26
 148:	df 98       	cbi	0x1b, 7	; 27
 14a:	de 98       	cbi	0x1b, 6	; 27
 14c:	8f e5       	ldi	r24, 0x5F	; 95
 14e:	9a ee       	ldi	r25, 0xEA	; 234
 150:	01 97       	sbiw	r24, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <_Z8lcd_initv+0x14>
 154:	00 c0       	rjmp	.+0      	; 0x156 <_Z8lcd_initv+0x1a>
 156:	00 00       	nop
 158:	dd 9a       	sbi	0x1b, 5	; 27
 15a:	dc 9a       	sbi	0x1b, 4	; 27
 15c:	db 98       	cbi	0x1b, 3	; 27
 15e:	da 98       	cbi	0x1b, 2	; 27
 160:	de 9a       	sbi	0x1b, 6	; 27
 162:	de 98       	cbi	0x1b, 6	; 27
 164:	8f e1       	ldi	r24, 0x1F	; 31
 166:	9e e4       	ldi	r25, 0x4E	; 78
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <_Z8lcd_initv+0x2c>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <_Z8lcd_initv+0x32>
 16e:	00 00       	nop
 170:	de 9a       	sbi	0x1b, 6	; 27
 172:	de 98       	cbi	0x1b, 6	; 27
 174:	8f e1       	ldi	r24, 0x1F	; 31
 176:	93 e0       	ldi	r25, 0x03	; 3
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <_Z8lcd_initv+0x3c>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <_Z8lcd_initv+0x42>
 17e:	00 00       	nop
 180:	de 9a       	sbi	0x1b, 6	; 27
 182:	de 98       	cbi	0x1b, 6	; 27
 184:	8f e1       	ldi	r24, 0x1F	; 31
 186:	93 e0       	ldi	r25, 0x03	; 3
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	f1 f7       	brne	.-4      	; 0x188 <_Z8lcd_initv+0x4c>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <_Z8lcd_initv+0x52>
 18e:	00 00       	nop
 190:	dd 98       	cbi	0x1b, 5	; 27
 192:	dc 9a       	sbi	0x1b, 4	; 27
 194:	db 98       	cbi	0x1b, 3	; 27
 196:	da 98       	cbi	0x1b, 2	; 27
 198:	de 9a       	sbi	0x1b, 6	; 27
 19a:	de 98       	cbi	0x1b, 6	; 27
 19c:	88 e2       	ldi	r24, 0x28	; 40
 19e:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 1a2:	8c e0       	ldi	r24, 0x0C	; 12
 1a4:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 1a8:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_clearv>
 1ac:	86 e0       	ldi	r24, 0x06	; 6
 1ae:	0e 94 49 00 	call	0x92	; 0x92 <_ZL9lcd_writeh>
 1b2:	08 95       	ret

000001b4 <_Z10lcd_putinti>:
 1b4:	0f 93       	push	r16
 1b6:	1f 93       	push	r17
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62
 1c0:	2f 97       	sbiw	r28, 0x0f	; 15
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	f8 94       	cli
 1c6:	de bf       	out	0x3e, r29	; 62
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	cd bf       	out	0x3d, r28	; 61
 1cc:	4a e0       	ldi	r20, 0x0A	; 10
 1ce:	be 01       	movw	r22, r28
 1d0:	6f 5f       	subi	r22, 0xFF	; 255
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	0e 94 c7 03 	call	0x78e	; 0x78e <__itoa_ncheck>
 1d8:	89 81       	ldd	r24, Y+1	; 0x01
 1da:	88 23       	and	r24, r24
 1dc:	51 f0       	breq	.+20     	; 0x1f2 <_Z10lcd_putinti+0x3e>
 1de:	8e 01       	movw	r16, r28
 1e0:	0e 5f       	subi	r16, 0xFE	; 254
 1e2:	1f 4f       	sbci	r17, 0xFF	; 255
 1e4:	0e 94 95 00 	call	0x12a	; 0x12a <_Z9lcd_putchc>
 1e8:	f8 01       	movw	r30, r16
 1ea:	81 91       	ld	r24, Z+
 1ec:	8f 01       	movw	r16, r30
 1ee:	81 11       	cpse	r24, r1
 1f0:	f9 cf       	rjmp	.-14     	; 0x1e4 <_Z10lcd_putinti+0x30>
 1f2:	2f 96       	adiw	r28, 0x0f	; 15
 1f4:	0f b6       	in	r0, 0x3f	; 63
 1f6:	f8 94       	cli
 1f8:	de bf       	out	0x3e, r29	; 62
 1fa:	0f be       	out	0x3f, r0	; 63
 1fc:	cd bf       	out	0x3d, r28	; 61
 1fe:	df 91       	pop	r29
 200:	cf 91       	pop	r28
 202:	1f 91       	pop	r17
 204:	0f 91       	pop	r16
 206:	08 95       	ret

00000208 <_Z10lcd_gotoxyhh>:

void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
 208:	90 e4       	ldi	r25, 0x40	; 64
 20a:	69 9f       	mul	r22, r25
 20c:	80 0d       	add	r24, r0
 20e:	11 24       	eor	r1, r1
 210:	0e 94 99 00 	call	0x132	; 0x132 <_Z8lcd_gotoh>
 214:	08 95       	ret

00000216 <main>:


int main(void)
{	
	
	DDRD   = (0<<PIND2)|(0<<PIND3)|(1<<PIND7);
 216:	80 e8       	ldi	r24, 0x80	; 128
 218:	81 bb       	out	0x11, r24	; 17
	
    lcd_init();
 21a:	0e 94 9e 00 	call	0x13c	; 0x13c <_Z8lcd_initv>
	// Timer Clock = 1/1024 of sys clock and CTC mode
	TCCR1B|=((1<<WGM12)|(1<<CS12)|(1<<CS10));
 21e:	8e b5       	in	r24, 0x2e	; 46
 220:	8d 60       	ori	r24, 0x0D	; 13
 222:	8e bd       	out	0x2e, r24	; 46
	
	// Initialize INT0
	MCUCR |= (1<<ISC00)|(1<<ISC01);   // Rising edge on INT0 triggers interrupt.
 224:	85 b7       	in	r24, 0x35	; 53
 226:	83 60       	ori	r24, 0x03	; 3
 228:	85 bf       	out	0x35, r24	; 53
	GICR  |= (1<<INT0);               // Enable INT0 interrupt
 22a:	8b b7       	in	r24, 0x3b	; 59
 22c:	80 64       	ori	r24, 0x40	; 64
 22e:	8b bf       	out	0x3b, r24	; 59
	TIMSK |= (1<<OCIE1A);             // Output compare 1A interrupt enable
 230:	89 b7       	in	r24, 0x39	; 57
 232:	80 61       	ori	r24, 0x10	; 16
 234:	89 bf       	out	0x39, r24	; 57
	OCR1A  = (15624*SAMPLE_TIME);     // Compare value = 1 second
 236:	84 e8       	ldi	r24, 0x84	; 132
 238:	9e e1       	ldi	r25, 0x1E	; 30
 23a:	9b bd       	out	0x2b, r25	; 43
 23c:	8a bd       	out	0x2a, r24	; 42
	sei();
 23e:	78 94       	sei
	
	lcd_gotoxy(2,2);
 240:	62 e0       	ldi	r22, 0x02	; 2
 242:	82 e0       	ldi	r24, 0x02	; 2
 244:	0e 94 04 01 	call	0x208	; 0x208 <_Z10lcd_gotoxyhh>
	lcd_puts("RPM:");
 248:	80 e6       	ldi	r24, 0x60	; 96
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_putsPKc>
volatile  long signed count=0; // Pulse counter
volatile  long signed rpm=0;   // Revolution per minute
volatile  float rpt=0;         // Revolution per sample time


int main(void)
 250:	ff cf       	rjmp	.-2      	; 0x250 <main+0x3a>

00000252 <__vector_1>:
	}
	return 0;
}

ISR(INT0_vect)
{
 252:	1f 92       	push	r1
 254:	0f 92       	push	r0
 256:	0f b6       	in	r0, 0x3f	; 63
 258:	0f 92       	push	r0
 25a:	11 24       	eor	r1, r1
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	af 93       	push	r26
 262:	bf 93       	push	r27
	// INT0 on rising edge
 		if(!bit_is_set(PIND,3)){
 264:	83 99       	sbic	0x10, 3	; 16
 266:	14 c0       	rjmp	.+40     	; 0x290 <__vector_1+0x3e>
 			 count--;
 268:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <count>
 26c:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <count+0x1>
 270:	a0 91 76 00 	lds	r26, 0x0076	; 0x800076 <count+0x2>
 274:	b0 91 77 00 	lds	r27, 0x0077	; 0x800077 <count+0x3>
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	a1 09       	sbc	r26, r1
 27c:	b1 09       	sbc	r27, r1
 27e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <count>
 282:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <count+0x1>
 286:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <count+0x2>
 28a:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <count+0x3>
 28e:	15 c0       	rjmp	.+42     	; 0x2ba <__vector_1+0x68>
 		}
 	
 		else if(bit_is_set(PIND,3)){
 290:	83 9b       	sbis	0x10, 3	; 16
 292:	13 c0       	rjmp	.+38     	; 0x2ba <__vector_1+0x68>
 			 count++;
 294:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <count>
 298:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <count+0x1>
 29c:	a0 91 76 00 	lds	r26, 0x0076	; 0x800076 <count+0x2>
 2a0:	b0 91 77 00 	lds	r27, 0x0077	; 0x800077 <count+0x3>
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	a1 1d       	adc	r26, r1
 2a8:	b1 1d       	adc	r27, r1
 2aa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <count>
 2ae:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <count+0x1>
 2b2:	a0 93 76 00 	sts	0x0076, r26	; 0x800076 <count+0x2>
 2b6:	b0 93 77 00 	sts	0x0077, r27	; 0x800077 <count+0x3>
 		}

 	 	
}
 2ba:	bf 91       	pop	r27
 2bc:	af 91       	pop	r26
 2be:	9f 91       	pop	r25
 2c0:	8f 91       	pop	r24
 2c2:	0f 90       	pop	r0
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	0f 90       	pop	r0
 2c8:	1f 90       	pop	r1
 2ca:	18 95       	reti

000002cc <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
 2cc:	1f 92       	push	r1
 2ce:	0f 92       	push	r0
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	0f 92       	push	r0
 2d4:	11 24       	eor	r1, r1
 2d6:	2f 93       	push	r18
 2d8:	3f 93       	push	r19
 2da:	4f 93       	push	r20
 2dc:	5f 93       	push	r21
 2de:	6f 93       	push	r22
 2e0:	7f 93       	push	r23
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	af 93       	push	r26
 2e8:	bf 93       	push	r27
 2ea:	ef 93       	push	r30
 2ec:	ff 93       	push	r31
	// Every SAMPLE_TIME sec !
	
	rpt   = (float)count/(kppr*SAMPLE_TIME);
 2ee:	60 91 74 00 	lds	r22, 0x0074	; 0x800074 <count>
 2f2:	70 91 75 00 	lds	r23, 0x0075	; 0x800075 <count+0x1>
 2f6:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <count+0x2>
 2fa:	90 91 77 00 	lds	r25, 0x0077	; 0x800077 <count+0x3>
 2fe:	0e 94 ce 02 	call	0x59c	; 0x59c <__floatsisf>
 302:	20 e0       	ldi	r18, 0x00	; 0
 304:	30 e0       	ldi	r19, 0x00	; 0
 306:	44 eb       	ldi	r20, 0xB4	; 180
 308:	52 e4       	ldi	r21, 0x42	; 66
 30a:	0e 94 24 02 	call	0x448	; 0x448 <__divsf3>
 30e:	60 93 6c 00 	sts	0x006C, r22	; 0x80006c <__data_end>
 312:	70 93 6d 00 	sts	0x006D, r23	; 0x80006d <__data_end+0x1>
 316:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__data_end+0x2>
 31a:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <__data_end+0x3>
	rpm   = (rpt*60);
 31e:	60 91 6c 00 	lds	r22, 0x006C	; 0x80006c <__data_end>
 322:	70 91 6d 00 	lds	r23, 0x006D	; 0x80006d <__data_end+0x1>
 326:	80 91 6e 00 	lds	r24, 0x006E	; 0x80006e <__data_end+0x2>
 32a:	90 91 6f 00 	lds	r25, 0x006F	; 0x80006f <__data_end+0x3>
 32e:	20 e0       	ldi	r18, 0x00	; 0
 330:	30 e0       	ldi	r19, 0x00	; 0
 332:	40 e7       	ldi	r20, 0x70	; 112
 334:	52 e4       	ldi	r21, 0x42	; 66
 336:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__mulsf3>
 33a:	0e 94 96 02 	call	0x52c	; 0x52c <__fixsfsi>
 33e:	60 93 70 00 	sts	0x0070, r22	; 0x800070 <rpm>
 342:	70 93 71 00 	sts	0x0071, r23	; 0x800071 <rpm+0x1>
 346:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <rpm+0x2>
 34a:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <rpm+0x3>
	lcd_gotoxy(6,2);
 34e:	62 e0       	ldi	r22, 0x02	; 2
 350:	86 e0       	ldi	r24, 0x06	; 6
 352:	0e 94 04 01 	call	0x208	; 0x208 <_Z10lcd_gotoxyhh>
	lcd_puts("     ");
 356:	85 e6       	ldi	r24, 0x65	; 101
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 85 00 	call	0x10a	; 0x10a <_Z8lcd_putsPKc>
	lcd_gotoxy(6,2);
 35e:	62 e0       	ldi	r22, 0x02	; 2
 360:	86 e0       	ldi	r24, 0x06	; 6
 362:	0e 94 04 01 	call	0x208	; 0x208 <_Z10lcd_gotoxyhh>
	lcd_putint(rpm);
 366:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <rpm>
 36a:	90 91 71 00 	lds	r25, 0x0071	; 0x800071 <rpm+0x1>
 36e:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <rpm+0x2>
 372:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <rpm+0x3>
 376:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_Z10lcd_putinti>
	count = 0;
 37a:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <count>
 37e:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <count+0x1>
 382:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <count+0x2>
 386:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <count+0x3>
}
 38a:	ff 91       	pop	r31
 38c:	ef 91       	pop	r30
 38e:	bf 91       	pop	r27
 390:	af 91       	pop	r26
 392:	9f 91       	pop	r25
 394:	8f 91       	pop	r24
 396:	7f 91       	pop	r23
 398:	6f 91       	pop	r22
 39a:	5f 91       	pop	r21
 39c:	4f 91       	pop	r20
 39e:	3f 91       	pop	r19
 3a0:	2f 91       	pop	r18
 3a2:	0f 90       	pop	r0
 3a4:	0f be       	out	0x3f, r0	; 63
 3a6:	0f 90       	pop	r0
 3a8:	1f 90       	pop	r1
 3aa:	18 95       	reti

000003ac <__vector_13>:
ISR(UART_RECEIVE_INTERRUPT)
/*************************************************************************
Function: UART Receive Complete interrupt
Purpose:  called when the UART has received a character
**************************************************************************/
{
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	2f 93       	push	r18
 3b8:	8f 93       	push	r24
 3ba:	9f 93       	push	r25
 3bc:	ef 93       	push	r30
 3be:	ff 93       	push	r31
    unsigned char usr;
    unsigned char lastRxError;
 
 
    /* read UART status register and UART data register */ 
    usr  = UART_STATUS;
 3c0:	8b b1       	in	r24, 0x0b	; 11
    data = UART_DATA;
 3c2:	2c b1       	in	r18, 0x0c	; 12
    
    /* */

    lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
 3c4:	88 71       	andi	r24, 0x18	; 24

        
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 3c6:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <_ZL11UART_RxHead>
 3ca:	ef 5f       	subi	r30, 0xFF	; 255
 3cc:	ef 71       	andi	r30, 0x1F	; 31
    
    if ( tmphead == UART_RxTail ) {
 3ce:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <_ZL11UART_RxTail>
 3d2:	e9 17       	cp	r30, r25
 3d4:	39 f0       	breq	.+14     	; 0x3e4 <__vector_13+0x38>
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
    }else{
        /* store new index */
        UART_RxHead = tmphead;
 3d6:	e0 93 7a 00 	sts	0x007A, r30	; 0x80007a <_ZL11UART_RxHead>
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
 3da:	f0 e0       	ldi	r31, 0x00	; 0
 3dc:	e3 58       	subi	r30, 0x83	; 131
 3de:	ff 4f       	sbci	r31, 0xFF	; 255
 3e0:	20 83       	st	Z, r18
 3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <__vector_13+0x3a>
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
    
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
 3e4:	82 e0       	ldi	r24, 0x02	; 2
        /* store new index */
        UART_RxHead = tmphead;
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
    }
    UART_LastRxError = lastRxError;   
 3e6:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <_ZL16UART_LastRxError>
}
 3ea:	ff 91       	pop	r31
 3ec:	ef 91       	pop	r30
 3ee:	9f 91       	pop	r25
 3f0:	8f 91       	pop	r24
 3f2:	2f 91       	pop	r18
 3f4:	0f 90       	pop	r0
 3f6:	0f be       	out	0x3f, r0	; 63
 3f8:	0f 90       	pop	r0
 3fa:	1f 90       	pop	r1
 3fc:	18 95       	reti

000003fe <__vector_14>:
ISR(UART_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART Data Register Empty interrupt
Purpose:  called when the UART is ready to transmit the next byte
**************************************************************************/
{
 3fe:	1f 92       	push	r1
 400:	0f 92       	push	r0
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	0f 92       	push	r0
 406:	11 24       	eor	r1, r1
 408:	8f 93       	push	r24
 40a:	9f 93       	push	r25
 40c:	ef 93       	push	r30
 40e:	ff 93       	push	r31
    unsigned char tmptail;

    
    if ( UART_TxHead != UART_TxTail) {
 410:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <_ZL11UART_TxHead>
 414:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <_ZL11UART_TxTail>
 418:	98 17       	cp	r25, r24
 41a:	61 f0       	breq	.+24     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
        /* calculate and store new buffer index */
        tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 41c:	e0 91 7b 00 	lds	r30, 0x007B	; 0x80007b <_ZL11UART_TxTail>
 420:	ef 5f       	subi	r30, 0xFF	; 255
 422:	ef 71       	andi	r30, 0x1F	; 31
        UART_TxTail = tmptail;
 424:	e0 93 7b 00 	sts	0x007B, r30	; 0x80007b <_ZL11UART_TxTail>
        /* get one byte from buffer and write it to UART */
        UART_DATA = UART_TxBuf[tmptail];  /* start transmission */
 428:	f0 e0       	ldi	r31, 0x00	; 0
 42a:	e3 56       	subi	r30, 0x63	; 99
 42c:	ff 4f       	sbci	r31, 0xFF	; 255
 42e:	80 81       	ld	r24, Z
 430:	8c b9       	out	0x0c, r24	; 12
 432:	01 c0       	rjmp	.+2      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
    }else{
        /* tx buffer empty, disable UDRE interrupt */
        UART_CONTROL &= ~_BV(UART_UDRIE);
 434:	55 98       	cbi	0x0a, 5	; 10
    }
}
 436:	ff 91       	pop	r31
 438:	ef 91       	pop	r30
 43a:	9f 91       	pop	r25
 43c:	8f 91       	pop	r24
 43e:	0f 90       	pop	r0
 440:	0f be       	out	0x3f, r0	; 63
 442:	0f 90       	pop	r0
 444:	1f 90       	pop	r1
 446:	18 95       	reti

00000448 <__divsf3>:
 448:	0e 94 38 02 	call	0x470	; 0x470 <__divsf3x>
 44c:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_round>
 450:	0e 94 19 03 	call	0x632	; 0x632 <__fp_pscB>
 454:	58 f0       	brcs	.+22     	; 0x46c <__divsf3+0x24>
 456:	0e 94 12 03 	call	0x624	; 0x624 <__fp_pscA>
 45a:	40 f0       	brcs	.+16     	; 0x46c <__divsf3+0x24>
 45c:	29 f4       	brne	.+10     	; 0x468 <__divsf3+0x20>
 45e:	5f 3f       	cpi	r21, 0xFF	; 255
 460:	29 f0       	breq	.+10     	; 0x46c <__divsf3+0x24>
 462:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 466:	51 11       	cpse	r21, r1
 468:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 46c:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_nan>

00000470 <__divsf3x>:
 470:	0e 94 31 03 	call	0x662	; 0x662 <__fp_split3>
 474:	68 f3       	brcs	.-38     	; 0x450 <__divsf3+0x8>

00000476 <__divsf3_pse>:
 476:	99 23       	and	r25, r25
 478:	b1 f3       	breq	.-20     	; 0x466 <__divsf3+0x1e>
 47a:	55 23       	and	r21, r21
 47c:	91 f3       	breq	.-28     	; 0x462 <__divsf3+0x1a>
 47e:	95 1b       	sub	r25, r21
 480:	55 0b       	sbc	r21, r21
 482:	bb 27       	eor	r27, r27
 484:	aa 27       	eor	r26, r26
 486:	62 17       	cp	r22, r18
 488:	73 07       	cpc	r23, r19
 48a:	84 07       	cpc	r24, r20
 48c:	38 f0       	brcs	.+14     	; 0x49c <__divsf3_pse+0x26>
 48e:	9f 5f       	subi	r25, 0xFF	; 255
 490:	5f 4f       	sbci	r21, 0xFF	; 255
 492:	22 0f       	add	r18, r18
 494:	33 1f       	adc	r19, r19
 496:	44 1f       	adc	r20, r20
 498:	aa 1f       	adc	r26, r26
 49a:	a9 f3       	breq	.-22     	; 0x486 <__divsf3_pse+0x10>
 49c:	35 d0       	rcall	.+106    	; 0x508 <__divsf3_pse+0x92>
 49e:	0e 2e       	mov	r0, r30
 4a0:	3a f0       	brmi	.+14     	; 0x4b0 <__divsf3_pse+0x3a>
 4a2:	e0 e8       	ldi	r30, 0x80	; 128
 4a4:	32 d0       	rcall	.+100    	; 0x50a <__divsf3_pse+0x94>
 4a6:	91 50       	subi	r25, 0x01	; 1
 4a8:	50 40       	sbci	r21, 0x00	; 0
 4aa:	e6 95       	lsr	r30
 4ac:	00 1c       	adc	r0, r0
 4ae:	ca f7       	brpl	.-14     	; 0x4a2 <__divsf3_pse+0x2c>
 4b0:	2b d0       	rcall	.+86     	; 0x508 <__divsf3_pse+0x92>
 4b2:	fe 2f       	mov	r31, r30
 4b4:	29 d0       	rcall	.+82     	; 0x508 <__divsf3_pse+0x92>
 4b6:	66 0f       	add	r22, r22
 4b8:	77 1f       	adc	r23, r23
 4ba:	88 1f       	adc	r24, r24
 4bc:	bb 1f       	adc	r27, r27
 4be:	26 17       	cp	r18, r22
 4c0:	37 07       	cpc	r19, r23
 4c2:	48 07       	cpc	r20, r24
 4c4:	ab 07       	cpc	r26, r27
 4c6:	b0 e8       	ldi	r27, 0x80	; 128
 4c8:	09 f0       	breq	.+2      	; 0x4cc <__divsf3_pse+0x56>
 4ca:	bb 0b       	sbc	r27, r27
 4cc:	80 2d       	mov	r24, r0
 4ce:	bf 01       	movw	r22, r30
 4d0:	ff 27       	eor	r31, r31
 4d2:	93 58       	subi	r25, 0x83	; 131
 4d4:	5f 4f       	sbci	r21, 0xFF	; 255
 4d6:	3a f0       	brmi	.+14     	; 0x4e6 <__divsf3_pse+0x70>
 4d8:	9e 3f       	cpi	r25, 0xFE	; 254
 4da:	51 05       	cpc	r21, r1
 4dc:	78 f0       	brcs	.+30     	; 0x4fc <__divsf3_pse+0x86>
 4de:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 4e2:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 4e6:	5f 3f       	cpi	r21, 0xFF	; 255
 4e8:	e4 f3       	brlt	.-8      	; 0x4e2 <__divsf3_pse+0x6c>
 4ea:	98 3e       	cpi	r25, 0xE8	; 232
 4ec:	d4 f3       	brlt	.-12     	; 0x4e2 <__divsf3_pse+0x6c>
 4ee:	86 95       	lsr	r24
 4f0:	77 95       	ror	r23
 4f2:	67 95       	ror	r22
 4f4:	b7 95       	ror	r27
 4f6:	f7 95       	ror	r31
 4f8:	9f 5f       	subi	r25, 0xFF	; 255
 4fa:	c9 f7       	brne	.-14     	; 0x4ee <__divsf3_pse+0x78>
 4fc:	88 0f       	add	r24, r24
 4fe:	91 1d       	adc	r25, r1
 500:	96 95       	lsr	r25
 502:	87 95       	ror	r24
 504:	97 f9       	bld	r25, 7
 506:	08 95       	ret
 508:	e1 e0       	ldi	r30, 0x01	; 1
 50a:	66 0f       	add	r22, r22
 50c:	77 1f       	adc	r23, r23
 50e:	88 1f       	adc	r24, r24
 510:	bb 1f       	adc	r27, r27
 512:	62 17       	cp	r22, r18
 514:	73 07       	cpc	r23, r19
 516:	84 07       	cpc	r24, r20
 518:	ba 07       	cpc	r27, r26
 51a:	20 f0       	brcs	.+8      	; 0x524 <__divsf3_pse+0xae>
 51c:	62 1b       	sub	r22, r18
 51e:	73 0b       	sbc	r23, r19
 520:	84 0b       	sbc	r24, r20
 522:	ba 0b       	sbc	r27, r26
 524:	ee 1f       	adc	r30, r30
 526:	88 f7       	brcc	.-30     	; 0x50a <__divsf3_pse+0x94>
 528:	e0 95       	com	r30
 52a:	08 95       	ret

0000052c <__fixsfsi>:
 52c:	0e 94 9d 02 	call	0x53a	; 0x53a <__fixunssfsi>
 530:	68 94       	set
 532:	b1 11       	cpse	r27, r1
 534:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 538:	08 95       	ret

0000053a <__fixunssfsi>:
 53a:	0e 94 39 03 	call	0x672	; 0x672 <__fp_splitA>
 53e:	88 f0       	brcs	.+34     	; 0x562 <__fixunssfsi+0x28>
 540:	9f 57       	subi	r25, 0x7F	; 127
 542:	98 f0       	brcs	.+38     	; 0x56a <__fixunssfsi+0x30>
 544:	b9 2f       	mov	r27, r25
 546:	99 27       	eor	r25, r25
 548:	b7 51       	subi	r27, 0x17	; 23
 54a:	b0 f0       	brcs	.+44     	; 0x578 <__fixunssfsi+0x3e>
 54c:	e1 f0       	breq	.+56     	; 0x586 <__fixunssfsi+0x4c>
 54e:	66 0f       	add	r22, r22
 550:	77 1f       	adc	r23, r23
 552:	88 1f       	adc	r24, r24
 554:	99 1f       	adc	r25, r25
 556:	1a f0       	brmi	.+6      	; 0x55e <__fixunssfsi+0x24>
 558:	ba 95       	dec	r27
 55a:	c9 f7       	brne	.-14     	; 0x54e <__fixunssfsi+0x14>
 55c:	14 c0       	rjmp	.+40     	; 0x586 <__fixunssfsi+0x4c>
 55e:	b1 30       	cpi	r27, 0x01	; 1
 560:	91 f0       	breq	.+36     	; 0x586 <__fixunssfsi+0x4c>
 562:	0e 94 53 03 	call	0x6a6	; 0x6a6 <__fp_zero>
 566:	b1 e0       	ldi	r27, 0x01	; 1
 568:	08 95       	ret
 56a:	0c 94 53 03 	jmp	0x6a6	; 0x6a6 <__fp_zero>
 56e:	67 2f       	mov	r22, r23
 570:	78 2f       	mov	r23, r24
 572:	88 27       	eor	r24, r24
 574:	b8 5f       	subi	r27, 0xF8	; 248
 576:	39 f0       	breq	.+14     	; 0x586 <__fixunssfsi+0x4c>
 578:	b9 3f       	cpi	r27, 0xF9	; 249
 57a:	cc f3       	brlt	.-14     	; 0x56e <__fixunssfsi+0x34>
 57c:	86 95       	lsr	r24
 57e:	77 95       	ror	r23
 580:	67 95       	ror	r22
 582:	b3 95       	inc	r27
 584:	d9 f7       	brne	.-10     	; 0x57c <__fixunssfsi+0x42>
 586:	3e f4       	brtc	.+14     	; 0x596 <__fixunssfsi+0x5c>
 588:	90 95       	com	r25
 58a:	80 95       	com	r24
 58c:	70 95       	com	r23
 58e:	61 95       	neg	r22
 590:	7f 4f       	sbci	r23, 0xFF	; 255
 592:	8f 4f       	sbci	r24, 0xFF	; 255
 594:	9f 4f       	sbci	r25, 0xFF	; 255
 596:	08 95       	ret

00000598 <__floatunsisf>:
 598:	e8 94       	clt
 59a:	09 c0       	rjmp	.+18     	; 0x5ae <__floatsisf+0x12>

0000059c <__floatsisf>:
 59c:	97 fb       	bst	r25, 7
 59e:	3e f4       	brtc	.+14     	; 0x5ae <__floatsisf+0x12>
 5a0:	90 95       	com	r25
 5a2:	80 95       	com	r24
 5a4:	70 95       	com	r23
 5a6:	61 95       	neg	r22
 5a8:	7f 4f       	sbci	r23, 0xFF	; 255
 5aa:	8f 4f       	sbci	r24, 0xFF	; 255
 5ac:	9f 4f       	sbci	r25, 0xFF	; 255
 5ae:	99 23       	and	r25, r25
 5b0:	a9 f0       	breq	.+42     	; 0x5dc <__floatsisf+0x40>
 5b2:	f9 2f       	mov	r31, r25
 5b4:	96 e9       	ldi	r25, 0x96	; 150
 5b6:	bb 27       	eor	r27, r27
 5b8:	93 95       	inc	r25
 5ba:	f6 95       	lsr	r31
 5bc:	87 95       	ror	r24
 5be:	77 95       	ror	r23
 5c0:	67 95       	ror	r22
 5c2:	b7 95       	ror	r27
 5c4:	f1 11       	cpse	r31, r1
 5c6:	f8 cf       	rjmp	.-16     	; 0x5b8 <__floatsisf+0x1c>
 5c8:	fa f4       	brpl	.+62     	; 0x608 <__floatsisf+0x6c>
 5ca:	bb 0f       	add	r27, r27
 5cc:	11 f4       	brne	.+4      	; 0x5d2 <__floatsisf+0x36>
 5ce:	60 ff       	sbrs	r22, 0
 5d0:	1b c0       	rjmp	.+54     	; 0x608 <__floatsisf+0x6c>
 5d2:	6f 5f       	subi	r22, 0xFF	; 255
 5d4:	7f 4f       	sbci	r23, 0xFF	; 255
 5d6:	8f 4f       	sbci	r24, 0xFF	; 255
 5d8:	9f 4f       	sbci	r25, 0xFF	; 255
 5da:	16 c0       	rjmp	.+44     	; 0x608 <__floatsisf+0x6c>
 5dc:	88 23       	and	r24, r24
 5de:	11 f0       	breq	.+4      	; 0x5e4 <__floatsisf+0x48>
 5e0:	96 e9       	ldi	r25, 0x96	; 150
 5e2:	11 c0       	rjmp	.+34     	; 0x606 <__floatsisf+0x6a>
 5e4:	77 23       	and	r23, r23
 5e6:	21 f0       	breq	.+8      	; 0x5f0 <__floatsisf+0x54>
 5e8:	9e e8       	ldi	r25, 0x8E	; 142
 5ea:	87 2f       	mov	r24, r23
 5ec:	76 2f       	mov	r23, r22
 5ee:	05 c0       	rjmp	.+10     	; 0x5fa <__floatsisf+0x5e>
 5f0:	66 23       	and	r22, r22
 5f2:	71 f0       	breq	.+28     	; 0x610 <__floatsisf+0x74>
 5f4:	96 e8       	ldi	r25, 0x86	; 134
 5f6:	86 2f       	mov	r24, r22
 5f8:	70 e0       	ldi	r23, 0x00	; 0
 5fa:	60 e0       	ldi	r22, 0x00	; 0
 5fc:	2a f0       	brmi	.+10     	; 0x608 <__floatsisf+0x6c>
 5fe:	9a 95       	dec	r25
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	da f7       	brpl	.-10     	; 0x5fe <__floatsisf+0x62>
 608:	88 0f       	add	r24, r24
 60a:	96 95       	lsr	r25
 60c:	87 95       	ror	r24
 60e:	97 f9       	bld	r25, 7
 610:	08 95       	ret

00000612 <__fp_inf>:
 612:	97 f9       	bld	r25, 7
 614:	9f 67       	ori	r25, 0x7F	; 127
 616:	80 e8       	ldi	r24, 0x80	; 128
 618:	70 e0       	ldi	r23, 0x00	; 0
 61a:	60 e0       	ldi	r22, 0x00	; 0
 61c:	08 95       	ret

0000061e <__fp_nan>:
 61e:	9f ef       	ldi	r25, 0xFF	; 255
 620:	80 ec       	ldi	r24, 0xC0	; 192
 622:	08 95       	ret

00000624 <__fp_pscA>:
 624:	00 24       	eor	r0, r0
 626:	0a 94       	dec	r0
 628:	16 16       	cp	r1, r22
 62a:	17 06       	cpc	r1, r23
 62c:	18 06       	cpc	r1, r24
 62e:	09 06       	cpc	r0, r25
 630:	08 95       	ret

00000632 <__fp_pscB>:
 632:	00 24       	eor	r0, r0
 634:	0a 94       	dec	r0
 636:	12 16       	cp	r1, r18
 638:	13 06       	cpc	r1, r19
 63a:	14 06       	cpc	r1, r20
 63c:	05 06       	cpc	r0, r21
 63e:	08 95       	ret

00000640 <__fp_round>:
 640:	09 2e       	mov	r0, r25
 642:	03 94       	inc	r0
 644:	00 0c       	add	r0, r0
 646:	11 f4       	brne	.+4      	; 0x64c <__fp_round+0xc>
 648:	88 23       	and	r24, r24
 64a:	52 f0       	brmi	.+20     	; 0x660 <__fp_round+0x20>
 64c:	bb 0f       	add	r27, r27
 64e:	40 f4       	brcc	.+16     	; 0x660 <__fp_round+0x20>
 650:	bf 2b       	or	r27, r31
 652:	11 f4       	brne	.+4      	; 0x658 <__fp_round+0x18>
 654:	60 ff       	sbrs	r22, 0
 656:	04 c0       	rjmp	.+8      	; 0x660 <__fp_round+0x20>
 658:	6f 5f       	subi	r22, 0xFF	; 255
 65a:	7f 4f       	sbci	r23, 0xFF	; 255
 65c:	8f 4f       	sbci	r24, 0xFF	; 255
 65e:	9f 4f       	sbci	r25, 0xFF	; 255
 660:	08 95       	ret

00000662 <__fp_split3>:
 662:	57 fd       	sbrc	r21, 7
 664:	90 58       	subi	r25, 0x80	; 128
 666:	44 0f       	add	r20, r20
 668:	55 1f       	adc	r21, r21
 66a:	59 f0       	breq	.+22     	; 0x682 <__fp_splitA+0x10>
 66c:	5f 3f       	cpi	r21, 0xFF	; 255
 66e:	71 f0       	breq	.+28     	; 0x68c <__fp_splitA+0x1a>
 670:	47 95       	ror	r20

00000672 <__fp_splitA>:
 672:	88 0f       	add	r24, r24
 674:	97 fb       	bst	r25, 7
 676:	99 1f       	adc	r25, r25
 678:	61 f0       	breq	.+24     	; 0x692 <__fp_splitA+0x20>
 67a:	9f 3f       	cpi	r25, 0xFF	; 255
 67c:	79 f0       	breq	.+30     	; 0x69c <__fp_splitA+0x2a>
 67e:	87 95       	ror	r24
 680:	08 95       	ret
 682:	12 16       	cp	r1, r18
 684:	13 06       	cpc	r1, r19
 686:	14 06       	cpc	r1, r20
 688:	55 1f       	adc	r21, r21
 68a:	f2 cf       	rjmp	.-28     	; 0x670 <__fp_split3+0xe>
 68c:	46 95       	lsr	r20
 68e:	f1 df       	rcall	.-30     	; 0x672 <__fp_splitA>
 690:	08 c0       	rjmp	.+16     	; 0x6a2 <__fp_splitA+0x30>
 692:	16 16       	cp	r1, r22
 694:	17 06       	cpc	r1, r23
 696:	18 06       	cpc	r1, r24
 698:	99 1f       	adc	r25, r25
 69a:	f1 cf       	rjmp	.-30     	; 0x67e <__fp_splitA+0xc>
 69c:	86 95       	lsr	r24
 69e:	71 05       	cpc	r23, r1
 6a0:	61 05       	cpc	r22, r1
 6a2:	08 94       	sec
 6a4:	08 95       	ret

000006a6 <__fp_zero>:
 6a6:	e8 94       	clt

000006a8 <__fp_szero>:
 6a8:	bb 27       	eor	r27, r27
 6aa:	66 27       	eor	r22, r22
 6ac:	77 27       	eor	r23, r23
 6ae:	cb 01       	movw	r24, r22
 6b0:	97 f9       	bld	r25, 7
 6b2:	08 95       	ret

000006b4 <__mulsf3>:
 6b4:	0e 94 6d 03 	call	0x6da	; 0x6da <__mulsf3x>
 6b8:	0c 94 20 03 	jmp	0x640	; 0x640 <__fp_round>
 6bc:	0e 94 12 03 	call	0x624	; 0x624 <__fp_pscA>
 6c0:	38 f0       	brcs	.+14     	; 0x6d0 <__mulsf3+0x1c>
 6c2:	0e 94 19 03 	call	0x632	; 0x632 <__fp_pscB>
 6c6:	20 f0       	brcs	.+8      	; 0x6d0 <__mulsf3+0x1c>
 6c8:	95 23       	and	r25, r21
 6ca:	11 f0       	breq	.+4      	; 0x6d0 <__mulsf3+0x1c>
 6cc:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 6d0:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_nan>
 6d4:	11 24       	eor	r1, r1
 6d6:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>

000006da <__mulsf3x>:
 6da:	0e 94 31 03 	call	0x662	; 0x662 <__fp_split3>
 6de:	70 f3       	brcs	.-36     	; 0x6bc <__mulsf3+0x8>

000006e0 <__mulsf3_pse>:
 6e0:	95 9f       	mul	r25, r21
 6e2:	c1 f3       	breq	.-16     	; 0x6d4 <__mulsf3+0x20>
 6e4:	95 0f       	add	r25, r21
 6e6:	50 e0       	ldi	r21, 0x00	; 0
 6e8:	55 1f       	adc	r21, r21
 6ea:	62 9f       	mul	r22, r18
 6ec:	f0 01       	movw	r30, r0
 6ee:	72 9f       	mul	r23, r18
 6f0:	bb 27       	eor	r27, r27
 6f2:	f0 0d       	add	r31, r0
 6f4:	b1 1d       	adc	r27, r1
 6f6:	63 9f       	mul	r22, r19
 6f8:	aa 27       	eor	r26, r26
 6fa:	f0 0d       	add	r31, r0
 6fc:	b1 1d       	adc	r27, r1
 6fe:	aa 1f       	adc	r26, r26
 700:	64 9f       	mul	r22, r20
 702:	66 27       	eor	r22, r22
 704:	b0 0d       	add	r27, r0
 706:	a1 1d       	adc	r26, r1
 708:	66 1f       	adc	r22, r22
 70a:	82 9f       	mul	r24, r18
 70c:	22 27       	eor	r18, r18
 70e:	b0 0d       	add	r27, r0
 710:	a1 1d       	adc	r26, r1
 712:	62 1f       	adc	r22, r18
 714:	73 9f       	mul	r23, r19
 716:	b0 0d       	add	r27, r0
 718:	a1 1d       	adc	r26, r1
 71a:	62 1f       	adc	r22, r18
 71c:	83 9f       	mul	r24, r19
 71e:	a0 0d       	add	r26, r0
 720:	61 1d       	adc	r22, r1
 722:	22 1f       	adc	r18, r18
 724:	74 9f       	mul	r23, r20
 726:	33 27       	eor	r19, r19
 728:	a0 0d       	add	r26, r0
 72a:	61 1d       	adc	r22, r1
 72c:	23 1f       	adc	r18, r19
 72e:	84 9f       	mul	r24, r20
 730:	60 0d       	add	r22, r0
 732:	21 1d       	adc	r18, r1
 734:	82 2f       	mov	r24, r18
 736:	76 2f       	mov	r23, r22
 738:	6a 2f       	mov	r22, r26
 73a:	11 24       	eor	r1, r1
 73c:	9f 57       	subi	r25, 0x7F	; 127
 73e:	50 40       	sbci	r21, 0x00	; 0
 740:	9a f0       	brmi	.+38     	; 0x768 <__mulsf3_pse+0x88>
 742:	f1 f0       	breq	.+60     	; 0x780 <__mulsf3_pse+0xa0>
 744:	88 23       	and	r24, r24
 746:	4a f0       	brmi	.+18     	; 0x75a <__mulsf3_pse+0x7a>
 748:	ee 0f       	add	r30, r30
 74a:	ff 1f       	adc	r31, r31
 74c:	bb 1f       	adc	r27, r27
 74e:	66 1f       	adc	r22, r22
 750:	77 1f       	adc	r23, r23
 752:	88 1f       	adc	r24, r24
 754:	91 50       	subi	r25, 0x01	; 1
 756:	50 40       	sbci	r21, 0x00	; 0
 758:	a9 f7       	brne	.-22     	; 0x744 <__mulsf3_pse+0x64>
 75a:	9e 3f       	cpi	r25, 0xFE	; 254
 75c:	51 05       	cpc	r21, r1
 75e:	80 f0       	brcs	.+32     	; 0x780 <__mulsf3_pse+0xa0>
 760:	0c 94 09 03 	jmp	0x612	; 0x612 <__fp_inf>
 764:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <__fp_szero>
 768:	5f 3f       	cpi	r21, 0xFF	; 255
 76a:	e4 f3       	brlt	.-8      	; 0x764 <__mulsf3_pse+0x84>
 76c:	98 3e       	cpi	r25, 0xE8	; 232
 76e:	d4 f3       	brlt	.-12     	; 0x764 <__mulsf3_pse+0x84>
 770:	86 95       	lsr	r24
 772:	77 95       	ror	r23
 774:	67 95       	ror	r22
 776:	b7 95       	ror	r27
 778:	f7 95       	ror	r31
 77a:	e7 95       	ror	r30
 77c:	9f 5f       	subi	r25, 0xFF	; 255
 77e:	c1 f7       	brne	.-16     	; 0x770 <__mulsf3_pse+0x90>
 780:	fe 2b       	or	r31, r30
 782:	88 0f       	add	r24, r24
 784:	91 1d       	adc	r25, r1
 786:	96 95       	lsr	r25
 788:	87 95       	ror	r24
 78a:	97 f9       	bld	r25, 7
 78c:	08 95       	ret

0000078e <__itoa_ncheck>:
 78e:	bb 27       	eor	r27, r27
 790:	4a 30       	cpi	r20, 0x0A	; 10
 792:	31 f4       	brne	.+12     	; 0x7a0 <__itoa_ncheck+0x12>
 794:	99 23       	and	r25, r25
 796:	22 f4       	brpl	.+8      	; 0x7a0 <__itoa_ncheck+0x12>
 798:	bd e2       	ldi	r27, 0x2D	; 45
 79a:	90 95       	com	r25
 79c:	81 95       	neg	r24
 79e:	9f 4f       	sbci	r25, 0xFF	; 255
 7a0:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__utoa_common>

000007a4 <__utoa_ncheck>:
 7a4:	bb 27       	eor	r27, r27

000007a6 <__utoa_common>:
 7a6:	fb 01       	movw	r30, r22
 7a8:	55 27       	eor	r21, r21
 7aa:	aa 27       	eor	r26, r26
 7ac:	88 0f       	add	r24, r24
 7ae:	99 1f       	adc	r25, r25
 7b0:	aa 1f       	adc	r26, r26
 7b2:	a4 17       	cp	r26, r20
 7b4:	10 f0       	brcs	.+4      	; 0x7ba <__utoa_common+0x14>
 7b6:	a4 1b       	sub	r26, r20
 7b8:	83 95       	inc	r24
 7ba:	50 51       	subi	r21, 0x10	; 16
 7bc:	b9 f7       	brne	.-18     	; 0x7ac <__utoa_common+0x6>
 7be:	a0 5d       	subi	r26, 0xD0	; 208
 7c0:	aa 33       	cpi	r26, 0x3A	; 58
 7c2:	08 f0       	brcs	.+2      	; 0x7c6 <__utoa_common+0x20>
 7c4:	a9 5d       	subi	r26, 0xD9	; 217
 7c6:	a1 93       	st	Z+, r26
 7c8:	00 97       	sbiw	r24, 0x00	; 0
 7ca:	79 f7       	brne	.-34     	; 0x7aa <__utoa_common+0x4>
 7cc:	b1 11       	cpse	r27, r1
 7ce:	b1 93       	st	Z+, r27
 7d0:	11 92       	st	Z+, r1
 7d2:	cb 01       	movw	r24, r22
 7d4:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <strrev>

000007d8 <strrev>:
 7d8:	dc 01       	movw	r26, r24
 7da:	fc 01       	movw	r30, r24
 7dc:	67 2f       	mov	r22, r23
 7de:	71 91       	ld	r23, Z+
 7e0:	77 23       	and	r23, r23
 7e2:	e1 f7       	brne	.-8      	; 0x7dc <strrev+0x4>
 7e4:	32 97       	sbiw	r30, 0x02	; 2
 7e6:	04 c0       	rjmp	.+8      	; 0x7f0 <strrev+0x18>
 7e8:	7c 91       	ld	r23, X
 7ea:	6d 93       	st	X+, r22
 7ec:	70 83       	st	Z, r23
 7ee:	62 91       	ld	r22, -Z
 7f0:	ae 17       	cp	r26, r30
 7f2:	bf 07       	cpc	r27, r31
 7f4:	c8 f3       	brcs	.-14     	; 0x7e8 <strrev+0x10>
 7f6:	08 95       	ret

000007f8 <_exit>:
 7f8:	f8 94       	cli

000007fa <__stop_program>:
 7fa:	ff cf       	rjmp	.-2      	; 0x7fa <__stop_program>
