
DMTM New code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000076  00800200  00002552  000025e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002552  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000179  00800276  00800276  0000265c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000265c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000268c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000005a8  00000000  00000000  000026cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00008f44  00000000  00000000  00002c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000021ad  00000000  00000000  0000bbb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003141  00000000  00000000  0000dd65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f44  00000000  00000000  00010ea8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001d89  00000000  00000000  00011dec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003995  00000000  00000000  00013b75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000550  00000000  00000000  0001750a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ee c0       	rjmp	.+476    	; 0x1de <__dtors_end>
       2:	00 00       	nop
       4:	28 c1       	rjmp	.+592    	; 0x256 <__bad_interrupt>
       6:	00 00       	nop
       8:	9a c5       	rjmp	.+2868   	; 0xb3e <__vector_2>
       a:	00 00       	nop
       c:	62 c5       	rjmp	.+2756   	; 0xad2 <__vector_3>
       e:	00 00       	nop
      10:	da c5       	rjmp	.+2996   	; 0xbc6 <__vector_4>
      12:	00 00       	nop
      14:	66 c6       	rjmp	.+3276   	; 0xce2 <__vector_5>
      16:	00 00       	nop
      18:	2a c6       	rjmp	.+3156   	; 0xc6e <__vector_6>
      1a:	00 00       	nop
      1c:	1c c1       	rjmp	.+568    	; 0x256 <__bad_interrupt>
      1e:	00 00       	nop
      20:	1a c1       	rjmp	.+564    	; 0x256 <__bad_interrupt>
      22:	00 00       	nop
      24:	18 c1       	rjmp	.+560    	; 0x256 <__bad_interrupt>
      26:	00 00       	nop
      28:	16 c1       	rjmp	.+556    	; 0x256 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	14 c1       	rjmp	.+552    	; 0x256 <__bad_interrupt>
      2e:	00 00       	nop
      30:	12 c1       	rjmp	.+548    	; 0x256 <__bad_interrupt>
      32:	00 00       	nop
      34:	10 c1       	rjmp	.+544    	; 0x256 <__bad_interrupt>
      36:	00 00       	nop
      38:	0e c1       	rjmp	.+540    	; 0x256 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	0c c1       	rjmp	.+536    	; 0x256 <__bad_interrupt>
      3e:	00 00       	nop
      40:	0a c1       	rjmp	.+532    	; 0x256 <__bad_interrupt>
      42:	00 00       	nop
      44:	08 c1       	rjmp	.+528    	; 0x256 <__bad_interrupt>
      46:	00 00       	nop
      48:	06 c1       	rjmp	.+524    	; 0x256 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	04 c1       	rjmp	.+520    	; 0x256 <__bad_interrupt>
      4e:	00 00       	nop
      50:	ac c5       	rjmp	.+2904   	; 0xbaa <__vector_20>
      52:	00 00       	nop
      54:	00 c1       	rjmp	.+512    	; 0x256 <__bad_interrupt>
      56:	00 00       	nop
      58:	fe c0       	rjmp	.+508    	; 0x256 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	dc c5       	rjmp	.+3000   	; 0xc16 <__vector_23>
      5e:	00 00       	nop
      60:	fa c0       	rjmp	.+500    	; 0x256 <__bad_interrupt>
      62:	00 00       	nop
      64:	0c 94 67 0e 	jmp	0x1cce	; 0x1cce <__vector_25>
      68:	0c 94 96 0e 	jmp	0x1d2c	; 0x1d2c <__vector_26>
      6c:	f4 c0       	rjmp	.+488    	; 0x256 <__bad_interrupt>
      6e:	00 00       	nop
      70:	f2 c0       	rjmp	.+484    	; 0x256 <__bad_interrupt>
      72:	00 00       	nop
      74:	f0 c0       	rjmp	.+480    	; 0x256 <__bad_interrupt>
      76:	00 00       	nop
      78:	ee c0       	rjmp	.+476    	; 0x256 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	ec c0       	rjmp	.+472    	; 0x256 <__bad_interrupt>
      7e:	00 00       	nop
      80:	ea c0       	rjmp	.+468    	; 0x256 <__bad_interrupt>
      82:	00 00       	nop
      84:	e8 c0       	rjmp	.+464    	; 0x256 <__bad_interrupt>
      86:	00 00       	nop
      88:	e6 c0       	rjmp	.+460    	; 0x256 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c5       	rjmp	.+2708   	; 0xb22 <__vector_35>
      8e:	00 00       	nop
      90:	e2 c0       	rjmp	.+452    	; 0x256 <__bad_interrupt>
      92:	00 00       	nop
      94:	e0 c0       	rjmp	.+448    	; 0x256 <__bad_interrupt>
      96:	00 00       	nop
      98:	de c0       	rjmp	.+444    	; 0x256 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	dc c0       	rjmp	.+440    	; 0x256 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	da c0       	rjmp	.+436    	; 0x256 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	d8 c0       	rjmp	.+432    	; 0x256 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	d6 c0       	rjmp	.+428    	; 0x256 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	d4 c0       	rjmp	.+424    	; 0x256 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	d2 c0       	rjmp	.+420    	; 0x256 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	6c c5       	rjmp	.+2776   	; 0xb8e <__vector_45>
      b6:	00 00       	nop
      b8:	ce c0       	rjmp	.+412    	; 0x256 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	cc c0       	rjmp	.+408    	; 0x256 <__bad_interrupt>
      be:	00 00       	nop
      c0:	ca c0       	rjmp	.+404    	; 0x256 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	c8 c0       	rjmp	.+400    	; 0x256 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	c6 c0       	rjmp	.+396    	; 0x256 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	0c 94 4e 0f 	jmp	0x1e9c	; 0x1e9c <__vector_51>
      d0:	0c 94 7d 0f 	jmp	0x1efa	; 0x1efa <__vector_52>
      d4:	c0 c0       	rjmp	.+384    	; 0x256 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	0c 94 ab 0f 	jmp	0x1f56	; 0x1f56 <__vector_54>
      dc:	0c 94 da 0f 	jmp	0x1fb4	; 0x1fb4 <__vector_55>
      e0:	ba c0       	rjmp	.+372    	; 0x256 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0e 09       	sbc	r16, r14
      e6:	6b 09       	sbc	r22, r11
      e8:	6b 09       	sbc	r22, r11
      ea:	6b 09       	sbc	r22, r11
      ec:	6b 09       	sbc	r22, r11
      ee:	6b 09       	sbc	r22, r11
      f0:	6b 09       	sbc	r22, r11
      f2:	6b 09       	sbc	r22, r11
      f4:	6b 09       	sbc	r22, r11
      f6:	6b 09       	sbc	r22, r11
      f8:	6b 09       	sbc	r22, r11
      fa:	6b 09       	sbc	r22, r11
      fc:	6b 09       	sbc	r22, r11
      fe:	6b 09       	sbc	r22, r11
     100:	6b 09       	sbc	r22, r11
     102:	6b 09       	sbc	r22, r11
     104:	6b 09       	sbc	r22, r11
     106:	6b 09       	sbc	r22, r11
     108:	6b 09       	sbc	r22, r11
     10a:	6b 09       	sbc	r22, r11
     10c:	6b 09       	sbc	r22, r11
     10e:	6b 09       	sbc	r22, r11
     110:	6b 09       	sbc	r22, r11
     112:	6b 09       	sbc	r22, r11
     114:	6b 09       	sbc	r22, r11
     116:	6b 09       	sbc	r22, r11
     118:	6b 09       	sbc	r22, r11
     11a:	6b 09       	sbc	r22, r11
     11c:	6b 09       	sbc	r22, r11
     11e:	6b 09       	sbc	r22, r11
     120:	6b 09       	sbc	r22, r11
     122:	6b 09       	sbc	r22, r11
     124:	6b 09       	sbc	r22, r11
     126:	6b 09       	sbc	r22, r11
     128:	6b 09       	sbc	r22, r11
     12a:	6b 09       	sbc	r22, r11
     12c:	6b 09       	sbc	r22, r11
     12e:	0e 09       	sbc	r16, r14
     130:	6b 09       	sbc	r22, r11
     132:	6b 09       	sbc	r22, r11
     134:	6b 09       	sbc	r22, r11
     136:	6b 09       	sbc	r22, r11
     138:	6b 09       	sbc	r22, r11
     13a:	6b 09       	sbc	r22, r11
     13c:	6b 09       	sbc	r22, r11
     13e:	80 08       	sbc	r8, r0
     140:	6b 09       	sbc	r22, r11
     142:	6b 09       	sbc	r22, r11
     144:	6b 09       	sbc	r22, r11
     146:	6b 09       	sbc	r22, r11
     148:	6b 09       	sbc	r22, r11
     14a:	6b 09       	sbc	r22, r11
     14c:	6b 09       	sbc	r22, r11
     14e:	6b 09       	sbc	r22, r11
     150:	5c 08       	sbc	r5, r12
     152:	6b 09       	sbc	r22, r11
     154:	c8 08       	sbc	r12, r8
     156:	6b 09       	sbc	r22, r11
     158:	6b 09       	sbc	r22, r11
     15a:	37 08       	sbc	r3, r7
     15c:	6b 09       	sbc	r22, r11
     15e:	6b 09       	sbc	r22, r11
     160:	6b 09       	sbc	r22, r11
     162:	6b 09       	sbc	r22, r11
     164:	6b 09       	sbc	r22, r11
     166:	a4 08       	sbc	r10, r4
     168:	12 08       	sbc	r1, r2
     16a:	6b 09       	sbc	r22, r11
     16c:	17 09       	sbc	r17, r7
     16e:	0e 09       	sbc	r16, r14
     170:	ec 08       	sbc	r14, r12
     172:	6b 09       	sbc	r22, r11
     174:	21 09       	sbc	r18, r1
     176:	6b 09       	sbc	r22, r11
     178:	6b 09       	sbc	r22, r11
     17a:	fd 08       	sbc	r15, r13
     17c:	46 0c       	add	r4, r6
     17e:	9d 0c       	add	r9, r13
     180:	9d 0c       	add	r9, r13
     182:	9d 0c       	add	r9, r13
     184:	9d 0c       	add	r9, r13
     186:	9d 0c       	add	r9, r13
     188:	9d 0c       	add	r9, r13
     18a:	9d 0c       	add	r9, r13
     18c:	9d 0c       	add	r9, r13
     18e:	9d 0c       	add	r9, r13
     190:	9d 0c       	add	r9, r13
     192:	9d 0c       	add	r9, r13
     194:	9d 0c       	add	r9, r13
     196:	9d 0c       	add	r9, r13
     198:	9d 0c       	add	r9, r13
     19a:	9d 0c       	add	r9, r13
     19c:	9d 0c       	add	r9, r13
     19e:	9c 0b       	sbc	r25, r28
     1a0:	9d 0c       	add	r9, r13
     1a2:	02 0c       	add	r0, r2
     1a4:	9d 0c       	add	r9, r13
     1a6:	9d 0c       	add	r9, r13
     1a8:	7a 0b       	sbc	r23, r26
     1aa:	9d 0c       	add	r9, r13
     1ac:	9d 0c       	add	r9, r13
     1ae:	be 0b       	sbc	r27, r30
     1b0:	9d 0c       	add	r9, r13
     1b2:	9d 0c       	add	r9, r13
     1b4:	e0 0b       	sbc	r30, r16
     1b6:	58 0b       	sbc	r21, r24
     1b8:	9d 0c       	add	r9, r13
     1ba:	4f 0c       	add	r4, r15
     1bc:	46 0c       	add	r4, r6
     1be:	24 0c       	add	r2, r4
     1c0:	9d 0c       	add	r9, r13
     1c2:	5a 0c       	add	r5, r10
     1c4:	9d 0c       	add	r9, r13
     1c6:	9d 0c       	add	r9, r13
     1c8:	35 0c       	add	r3, r5

000001ca <__trampolines_end>:
     1ca:	30 31       	cpi	r19, 0x10	; 16
     1cc:	32 33       	cpi	r19, 0x32	; 50
     1ce:	34 35       	cpi	r19, 0x54	; 84
     1d0:	36 37       	cpi	r19, 0x76	; 118
     1d2:	38 39       	cpi	r19, 0x98	; 152
     1d4:	41 42       	sbci	r20, 0x21	; 33
     1d6:	43 44       	sbci	r20, 0x43	; 67
     1d8:	45 46       	sbci	r20, 0x65	; 101

000001da <__ctors_start>:
     1da:	ab 06       	cpc	r10, r27

000001dc <__ctors_end>:
     1dc:	b2 06       	cpc	r11, r18

000001de <__dtors_end>:
     1de:	11 24       	eor	r1, r1
     1e0:	1f be       	out	0x3f, r1	; 63
     1e2:	cf ef       	ldi	r28, 0xFF	; 255
     1e4:	d1 e2       	ldi	r29, 0x21	; 33
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <_Z8wdt_initv>:
 int Abs(int x)
 {
	if (x < 0)
		return 0 - x;
	return x;
 }
     1ee:	14 be       	out	0x34, r1	; 52
     1f0:	0f b6       	in	r0, 0x3f	; 63
     1f2:	f8 94       	cli
     1f4:	a8 95       	wdr
     1f6:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     1fa:	88 61       	ori	r24, 0x18	; 24
     1fc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     200:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x700060>
     204:	0f be       	out	0x3f, r0	; 63

00000206 <__do_copy_data>:
     206:	12 e0       	ldi	r17, 0x02	; 2
     208:	a0 e0       	ldi	r26, 0x00	; 0
     20a:	b2 e0       	ldi	r27, 0x02	; 2
     20c:	e2 e5       	ldi	r30, 0x52	; 82
     20e:	f5 e2       	ldi	r31, 0x25	; 37
     210:	00 e0       	ldi	r16, 0x00	; 0
     212:	0b bf       	out	0x3b, r16	; 59
     214:	02 c0       	rjmp	.+4      	; 0x21a <__do_copy_data+0x14>
     216:	07 90       	elpm	r0, Z+
     218:	0d 92       	st	X+, r0
     21a:	a6 37       	cpi	r26, 0x76	; 118
     21c:	b1 07       	cpc	r27, r17
     21e:	d9 f7       	brne	.-10     	; 0x216 <__do_copy_data+0x10>

00000220 <__do_clear_bss>:
     220:	23 e0       	ldi	r18, 0x03	; 3
     222:	a6 e7       	ldi	r26, 0x76	; 118
     224:	b2 e0       	ldi	r27, 0x02	; 2
     226:	01 c0       	rjmp	.+2      	; 0x22a <.do_clear_bss_start>

00000228 <.do_clear_bss_loop>:
     228:	1d 92       	st	X+, r1

0000022a <.do_clear_bss_start>:
     22a:	af 3e       	cpi	r26, 0xEF	; 239
     22c:	b2 07       	cpc	r27, r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <.do_clear_bss_loop>

00000230 <__do_global_ctors>:
     230:	10 e0       	ldi	r17, 0x00	; 0
     232:	ce ee       	ldi	r28, 0xEE	; 238
     234:	d0 e0       	ldi	r29, 0x00	; 0
     236:	00 e0       	ldi	r16, 0x00	; 0
     238:	06 c0       	rjmp	.+12     	; 0x246 <__do_global_ctors+0x16>
     23a:	21 97       	sbiw	r28, 0x01	; 1
     23c:	01 09       	sbc	r16, r1
     23e:	80 2f       	mov	r24, r16
     240:	fe 01       	movw	r30, r28
     242:	0e 94 49 12 	call	0x2492	; 0x2492 <__tablejump2__>
     246:	cd 3e       	cpi	r28, 0xED	; 237
     248:	d1 07       	cpc	r29, r17
     24a:	80 e0       	ldi	r24, 0x00	; 0
     24c:	08 07       	cpc	r16, r24
     24e:	a9 f7       	brne	.-22     	; 0x23a <__do_global_ctors+0xa>
     250:	3e d2       	rcall	.+1148   	; 0x6ce <main>
     252:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__do_global_dtors>

00000256 <__bad_interrupt>:
     256:	d4 ce       	rjmp	.-600    	; 0x0 <__vectors>

00000258 <_Z10initialisev>:

 void initialise()
 {
	
	uart0_init(UART_BAUD_SELECT(57600,F_CPU));
     258:	80 e1       	ldi	r24, 0x10	; 16
     25a:	90 e0       	ldi	r25, 0x00	; 0
     25c:	0e 94 c4 0e 	call	0x1d88	; 0x1d88 <_Z10uart0_initj>
	//uart2_init(UART_BAUD_SELECT(38400,F_CPU));
	uart3_init(UART_BAUD_SELECT(57600,F_CPU));
     260:	80 e1       	ldi	r24, 0x10	; 16
     262:	90 e0       	ldi	r25, 0x00	; 0
     264:	0e 94 08 10 	call	0x2010	; 0x2010 <_Z10uart3_initj>
	lcd_init();
     268:	42 c0       	rjmp	.+132    	; 0x2ee <_Z8lcd_initv>
     26a:	08 95       	ret

0000026c <_Z15bluetooth_checkv>:



 void bluetooth_check()
 {
	uart0_puts("Why so serious?\n\rLet me put a smile on that face?\n\r");
     26c:	80 e3       	ldi	r24, 0x30	; 48
     26e:	92 e0       	ldi	r25, 0x02	; 2
     270:	0c 94 35 0f 	jmp	0x1e6a	; 0x1e6a <_Z10uart0_putsPKc>
     274:	08 95       	ret

00000276 <_ZL9lcd_writeh>:
void lcd_num( int num, int radix )
{
	char str[6];
	itoa( num, str, radix );
	lcd_puts( str );
}
     276:	95 ed       	ldi	r25, 0xD5	; 213
     278:	9a 95       	dec	r25
     27a:	f1 f7       	brne	.-4      	; 0x278 <_ZL9lcd_writeh+0x2>
     27c:	00 00       	nop
     27e:	88 23       	and	r24, r24
     280:	14 f4       	brge	.+4      	; 0x286 <_ZL9lcd_writeh+0x10>
     282:	11 9a       	sbi	0x02, 1	; 2
     284:	01 c0       	rjmp	.+2      	; 0x288 <_ZL9lcd_writeh+0x12>
     286:	11 98       	cbi	0x02, 1	; 2
     288:	86 ff       	sbrs	r24, 6
     28a:	02 c0       	rjmp	.+4      	; 0x290 <_ZL9lcd_writeh+0x1a>
     28c:	13 9a       	sbi	0x02, 3	; 2
     28e:	01 c0       	rjmp	.+2      	; 0x292 <_ZL9lcd_writeh+0x1c>
     290:	13 98       	cbi	0x02, 3	; 2
     292:	85 ff       	sbrs	r24, 5
     294:	02 c0       	rjmp	.+4      	; 0x29a <_ZL9lcd_writeh+0x24>
     296:	15 9a       	sbi	0x02, 5	; 2
     298:	01 c0       	rjmp	.+2      	; 0x29c <_ZL9lcd_writeh+0x26>
     29a:	15 98       	cbi	0x02, 5	; 2
     29c:	84 ff       	sbrs	r24, 4
     29e:	02 c0       	rjmp	.+4      	; 0x2a4 <_ZL9lcd_writeh+0x2e>
     2a0:	17 9a       	sbi	0x02, 7	; 2
     2a2:	01 c0       	rjmp	.+2      	; 0x2a6 <_ZL9lcd_writeh+0x30>
     2a4:	17 98       	cbi	0x02, 7	; 2
     2a6:	46 9a       	sbi	0x08, 6	; 8
     2a8:	46 98       	cbi	0x08, 6	; 8
     2aa:	83 ff       	sbrs	r24, 3
     2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <_ZL9lcd_writeh+0x3c>
     2ae:	11 9a       	sbi	0x02, 1	; 2
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <_ZL9lcd_writeh+0x3e>
     2b2:	11 98       	cbi	0x02, 1	; 2
     2b4:	82 ff       	sbrs	r24, 2
     2b6:	02 c0       	rjmp	.+4      	; 0x2bc <_ZL9lcd_writeh+0x46>
     2b8:	13 9a       	sbi	0x02, 3	; 2
     2ba:	01 c0       	rjmp	.+2      	; 0x2be <_ZL9lcd_writeh+0x48>
     2bc:	13 98       	cbi	0x02, 3	; 2
     2be:	81 ff       	sbrs	r24, 1
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <_ZL9lcd_writeh+0x50>
     2c2:	15 9a       	sbi	0x02, 5	; 2
     2c4:	01 c0       	rjmp	.+2      	; 0x2c8 <_ZL9lcd_writeh+0x52>
     2c6:	15 98       	cbi	0x02, 5	; 2
     2c8:	80 ff       	sbrs	r24, 0
     2ca:	02 c0       	rjmp	.+4      	; 0x2d0 <_ZL9lcd_writeh+0x5a>
     2cc:	17 9a       	sbi	0x02, 7	; 2
     2ce:	01 c0       	rjmp	.+2      	; 0x2d2 <_ZL9lcd_writeh+0x5c>
     2d0:	17 98       	cbi	0x02, 7	; 2
     2d2:	46 9a       	sbi	0x08, 6	; 8
     2d4:	46 98       	cbi	0x08, 6	; 8
     2d6:	08 95       	ret

000002d8 <_Z9lcd_clearv>:
     2d8:	44 98       	cbi	0x08, 4	; 8
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	cc cf       	rjmp	.-104    	; 0x276 <_ZL9lcd_writeh>
     2de:	08 95       	ret

000002e0 <_Z9lcd_putchc>:
     2e0:	44 9a       	sbi	0x08, 4	; 8
     2e2:	c9 cf       	rjmp	.-110    	; 0x276 <_ZL9lcd_writeh>
     2e4:	08 95       	ret

000002e6 <_Z8lcd_gotoh>:
     2e6:	44 98       	cbi	0x08, 4	; 8
     2e8:	80 68       	ori	r24, 0x80	; 128
     2ea:	c5 cf       	rjmp	.-118    	; 0x276 <_ZL9lcd_writeh>
     2ec:	08 95       	ret

000002ee <_Z8lcd_initv>:
     2ee:	3c 9a       	sbi	0x07, 4	; 7
     2f0:	3e 9a       	sbi	0x07, 6	; 7
     2f2:	09 9a       	sbi	0x01, 1	; 1
     2f4:	0b 9a       	sbi	0x01, 3	; 1
     2f6:	0d 9a       	sbi	0x01, 5	; 1
     2f8:	0f 9a       	sbi	0x01, 7	; 1
     2fa:	44 98       	cbi	0x08, 4	; 8
     2fc:	46 98       	cbi	0x08, 6	; 8
     2fe:	8f e5       	ldi	r24, 0x5F	; 95
     300:	9a ee       	ldi	r25, 0xEA	; 234
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <_Z8lcd_initv+0x14>
     306:	00 c0       	rjmp	.+0      	; 0x308 <_Z8lcd_initv+0x1a>
     308:	00 00       	nop
     30a:	17 9a       	sbi	0x02, 7	; 2
     30c:	15 9a       	sbi	0x02, 5	; 2
     30e:	13 98       	cbi	0x02, 3	; 2
     310:	11 98       	cbi	0x02, 1	; 2
     312:	46 9a       	sbi	0x08, 6	; 8
     314:	46 98       	cbi	0x08, 6	; 8
     316:	8f e1       	ldi	r24, 0x1F	; 31
     318:	9e e4       	ldi	r25, 0x4E	; 78
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <_Z8lcd_initv+0x2c>
     31e:	00 c0       	rjmp	.+0      	; 0x320 <_Z8lcd_initv+0x32>
     320:	00 00       	nop
     322:	46 9a       	sbi	0x08, 6	; 8
     324:	46 98       	cbi	0x08, 6	; 8
     326:	8f e1       	ldi	r24, 0x1F	; 31
     328:	93 e0       	ldi	r25, 0x03	; 3
     32a:	01 97       	sbiw	r24, 0x01	; 1
     32c:	f1 f7       	brne	.-4      	; 0x32a <_Z8lcd_initv+0x3c>
     32e:	00 c0       	rjmp	.+0      	; 0x330 <_Z8lcd_initv+0x42>
     330:	00 00       	nop
     332:	46 9a       	sbi	0x08, 6	; 8
     334:	46 98       	cbi	0x08, 6	; 8
     336:	8f e1       	ldi	r24, 0x1F	; 31
     338:	93 e0       	ldi	r25, 0x03	; 3
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <_Z8lcd_initv+0x4c>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <_Z8lcd_initv+0x52>
     340:	00 00       	nop
     342:	17 98       	cbi	0x02, 7	; 2
     344:	15 9a       	sbi	0x02, 5	; 2
     346:	13 98       	cbi	0x02, 3	; 2
     348:	11 98       	cbi	0x02, 1	; 2
     34a:	46 9a       	sbi	0x08, 6	; 8
     34c:	46 98       	cbi	0x08, 6	; 8
     34e:	88 e2       	ldi	r24, 0x28	; 40
     350:	92 df       	rcall	.-220    	; 0x276 <_ZL9lcd_writeh>
     352:	8c e0       	ldi	r24, 0x0C	; 12
     354:	90 df       	rcall	.-224    	; 0x276 <_ZL9lcd_writeh>
     356:	c0 df       	rcall	.-128    	; 0x2d8 <_Z9lcd_clearv>
     358:	86 e0       	ldi	r24, 0x06	; 6
     35a:	8d cf       	rjmp	.-230    	; 0x276 <_ZL9lcd_writeh>
     35c:	08 95       	ret

0000035e <_Z8lcd_unumj>:
     35e:	ff 92       	push	r15
     360:	0f 93       	push	r16
     362:	1f 93       	push	r17
     364:	cf 93       	push	r28
     366:	df 93       	push	r29
     368:	dc 01       	movw	r26, r24
     36a:	6f e0       	ldi	r22, 0x0F	; 15
     36c:	70 e0       	ldi	r23, 0x00	; 0
     36e:	10 e0       	ldi	r17, 0x00	; 0
     370:	c0 e0       	ldi	r28, 0x00	; 0
     372:	d0 e0       	ldi	r29, 0x00	; 0
     374:	e1 e0       	ldi	r30, 0x01	; 1
     376:	f0 e0       	ldi	r31, 0x00	; 0
     378:	f1 2c       	mov	r15, r1
     37a:	00 e0       	ldi	r16, 0x00	; 0
     37c:	08 c0       	rjmp	.+16     	; 0x38e <_Z8lcd_unumj+0x30>
     37e:	ce 01       	movw	r24, r28
     380:	8f 70       	andi	r24, 0x0F	; 15
     382:	99 27       	eor	r25, r25
     384:	05 97       	sbiw	r24, 0x05	; 5
     386:	08 f0       	brcs	.+2      	; 0x38a <_Z8lcd_unumj+0x2c>
     388:	23 96       	adiw	r28, 0x03	; 3
     38a:	61 50       	subi	r22, 0x01	; 1
     38c:	71 09       	sbc	r23, r1
     38e:	ce 01       	movw	r24, r28
     390:	80 7f       	andi	r24, 0xF0	; 240
     392:	99 27       	eor	r25, r25
     394:	80 35       	cpi	r24, 0x50	; 80
     396:	91 05       	cpc	r25, r1
     398:	08 f0       	brcs	.+2      	; 0x39c <_Z8lcd_unumj+0x3e>
     39a:	e0 96       	adiw	r28, 0x30	; 48
     39c:	ce 01       	movw	r24, r28
     39e:	88 27       	eor	r24, r24
     3a0:	9f 70       	andi	r25, 0x0F	; 15
     3a2:	81 15       	cp	r24, r1
     3a4:	95 40       	sbci	r25, 0x05	; 5
     3a6:	08 f0       	brcs	.+2      	; 0x3aa <_Z8lcd_unumj+0x4c>
     3a8:	dd 5f       	subi	r29, 0xFD	; 253
     3aa:	ce 01       	movw	r24, r28
     3ac:	88 27       	eor	r24, r24
     3ae:	90 7f       	andi	r25, 0xF0	; 240
     3b0:	81 15       	cp	r24, r1
     3b2:	90 45       	sbci	r25, 0x50	; 80
     3b4:	08 f0       	brcs	.+2      	; 0x3b8 <_Z8lcd_unumj+0x5a>
     3b6:	d0 5d       	subi	r29, 0xD0	; 208
     3b8:	11 0f       	add	r17, r17
     3ba:	9d 2f       	mov	r25, r29
     3bc:	99 1f       	adc	r25, r25
     3be:	99 27       	eor	r25, r25
     3c0:	99 1f       	adc	r25, r25
     3c2:	19 0f       	add	r17, r25
     3c4:	cc 0f       	add	r28, r28
     3c6:	dd 1f       	adc	r29, r29
     3c8:	9f 01       	movw	r18, r30
     3ca:	06 2e       	mov	r0, r22
     3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <_Z8lcd_unumj+0x74>
     3ce:	22 0f       	add	r18, r18
     3d0:	33 1f       	adc	r19, r19
     3d2:	0a 94       	dec	r0
     3d4:	e2 f7       	brpl	.-8      	; 0x3ce <_Z8lcd_unumj+0x70>
     3d6:	2a 23       	and	r18, r26
     3d8:	3b 23       	and	r19, r27
     3da:	af 01       	movw	r20, r30
     3dc:	23 2b       	or	r18, r19
     3de:	11 f4       	brne	.+4      	; 0x3e4 <_Z8lcd_unumj+0x86>
     3e0:	4f 2d       	mov	r20, r15
     3e2:	50 2f       	mov	r21, r16
     3e4:	c4 0f       	add	r28, r20
     3e6:	d5 1f       	adc	r29, r21
     3e8:	61 15       	cp	r22, r1
     3ea:	71 05       	cpc	r23, r1
     3ec:	41 f6       	brne	.-112    	; 0x37e <_Z8lcd_unumj+0x20>
     3ee:	11 23       	and	r17, r17
     3f0:	09 f4       	brne	.+2      	; 0x3f4 <_Z8lcd_unumj+0x96>
     3f2:	39 c0       	rjmp	.+114    	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     3f4:	e1 2f       	mov	r30, r17
     3f6:	f0 e0       	ldi	r31, 0x00	; 0
     3f8:	e6 53       	subi	r30, 0x36	; 54
     3fa:	fe 4f       	sbci	r31, 0xFE	; 254
     3fc:	80 81       	ld	r24, Z
     3fe:	70 df       	rcall	.-288    	; 0x2e0 <_Z9lcd_putchc>
     400:	fe 01       	movw	r30, r28
     402:	ef 2f       	mov	r30, r31
     404:	ff 27       	eor	r31, r31
     406:	e2 95       	swap	r30
     408:	ef 70       	andi	r30, 0x0F	; 15
     40a:	e6 53       	subi	r30, 0x36	; 54
     40c:	fe 4f       	sbci	r31, 0xFE	; 254
     40e:	84 91       	lpm	r24, Z
     410:	67 df       	rcall	.-306    	; 0x2e0 <_Z9lcd_putchc>
     412:	11 11       	cpse	r17, r1
     414:	04 c0       	rjmp	.+8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
     416:	cf 3f       	cpi	r28, 0xFF	; 255
     418:	d1 05       	cpc	r29, r1
     41a:	79 f1       	breq	.+94     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     41c:	70 f1       	brcs	.+92     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
     41e:	ed 2f       	mov	r30, r29
     420:	ff 27       	eor	r31, r31
     422:	ef 70       	andi	r30, 0x0F	; 15
     424:	ff 27       	eor	r31, r31
     426:	e6 53       	subi	r30, 0x36	; 54
     428:	fe 4f       	sbci	r31, 0xFE	; 254
     42a:	84 91       	lpm	r24, Z
     42c:	59 df       	rcall	.-334    	; 0x2e0 <_Z9lcd_putchc>
     42e:	11 11       	cpse	r17, r1
     430:	03 c0       	rjmp	.+6      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
     432:	c0 31       	cpi	r28, 0x10	; 16
     434:	d1 05       	cpc	r29, r1
     436:	68 f0       	brcs	.+26     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
     438:	fe 01       	movw	r30, r28
     43a:	f2 95       	swap	r31
     43c:	e2 95       	swap	r30
     43e:	ef 70       	andi	r30, 0x0F	; 15
     440:	ef 27       	eor	r30, r31
     442:	ff 70       	andi	r31, 0x0F	; 15
     444:	ef 27       	eor	r30, r31
     446:	ef 70       	andi	r30, 0x0F	; 15
     448:	ff 27       	eor	r31, r31
     44a:	e6 53       	subi	r30, 0x36	; 54
     44c:	fe 4f       	sbci	r31, 0xFE	; 254
     44e:	84 91       	lpm	r24, Z
     450:	01 c0       	rjmp	.+2      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     452:	80 e2       	ldi	r24, 0x20	; 32
     454:	45 df       	rcall	.-374    	; 0x2e0 <_Z9lcd_putchc>
     456:	fe 01       	movw	r30, r28
     458:	ef 70       	andi	r30, 0x0F	; 15
     45a:	ff 27       	eor	r31, r31
     45c:	e6 53       	subi	r30, 0x36	; 54
     45e:	fe 4f       	sbci	r31, 0xFE	; 254
     460:	84 91       	lpm	r24, Z
     462:	3e df       	rcall	.-388    	; 0x2e0 <_Z9lcd_putchc>
     464:	0d c0       	rjmp	.+26     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
     466:	80 e2       	ldi	r24, 0x20	; 32
     468:	3b df       	rcall	.-394    	; 0x2e0 <_Z9lcd_putchc>
     46a:	c1 15       	cp	r28, r1
     46c:	80 e1       	ldi	r24, 0x10	; 16
     46e:	d8 07       	cpc	r29, r24
     470:	08 f0       	brcs	.+2      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     472:	c6 cf       	rjmp	.-116    	; 0x400 <__LOCK_REGION_LENGTH__>
     474:	80 e2       	ldi	r24, 0x20	; 32
     476:	34 df       	rcall	.-408    	; 0x2e0 <_Z9lcd_putchc>
     478:	ce cf       	rjmp	.-100    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     47a:	80 e2       	ldi	r24, 0x20	; 32
     47c:	31 df       	rcall	.-414    	; 0x2e0 <_Z9lcd_putchc>
     47e:	d9 cf       	rjmp	.-78     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	1f 91       	pop	r17
     486:	0f 91       	pop	r16
     488:	ff 90       	pop	r15
     48a:	08 95       	ret

0000048c <_Z10lcd_gotoxyhh>:

void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
     48c:	90 e4       	ldi	r25, 0x40	; 64
     48e:	69 9f       	mul	r22, r25
     490:	80 0d       	add	r24, r0
     492:	11 24       	eor	r1, r1
     494:	28 cf       	rjmp	.-432    	; 0x2e6 <_Z8lcd_gotoh>
     496:	08 95       	ret

00000498 <_ZN11EncoderBack10InitialiseEv>:

void EncoderBack::Initialise(void)
{	
	//Configure pins
	
	INPUT(ENCODERA);
     498:	6c 98       	cbi	0x0d, 4	; 13
	INPUT(ENCODERB);
     49a:	3b 98       	cbi	0x07, 3	; 7
	PULLUP_ON(ENCODERA);
     49c:	6c 98       	cbi	0x0d, 4	; 13
     49e:	74 9a       	sbi	0x0e, 4	; 14
	PULLUP_ON(ENCODERB);	
     4a0:	3b 98       	cbi	0x07, 3	; 7
     4a2:	43 9a       	sbi	0x08, 3	; 8
	//setting INT2 to falling edge sensitive
	//enabling external interrupt
	//clearing interrupt flag

	
	REGISTER_SET1(ENCODER_EICR,ENCODER_ISC1);
     4a4:	ea e6       	ldi	r30, 0x6A	; 106
     4a6:	f0 e0       	ldi	r31, 0x00	; 0
     4a8:	20 81       	ld	r18, Z
     4aa:	22 60       	ori	r18, 0x02	; 2
     4ac:	20 83       	st	Z, r18
	REGISTER_SET1(EIMSK,ENCODER_INT );
     4ae:	ec 9a       	sbi	0x1d, 4	; 29
	REGISTER_SET1(EIFR ,ENCODER_INTF);
     4b0:	e4 9a       	sbi	0x1c, 4	; 28

	UpFlag = false;
     4b2:	fc 01       	movw	r30, r24
     4b4:	14 82       	std	Z+4, r1	; 0x04
     4b6:	08 95       	ret

000004b8 <_ZN12EncoderFront10InitialiseEv>:

void EncoderFront::Initialise(void)
{	
	//Configure pins
	
	INPUT(ENCODERA);
     4b8:	6d 98       	cbi	0x0d, 5	; 13
	INPUT(ENCODERB);
     4ba:	39 98       	cbi	0x07, 1	; 7
	PULLUP_ON(ENCODERA);
     4bc:	6d 98       	cbi	0x0d, 5	; 13
     4be:	75 9a       	sbi	0x0e, 5	; 14
	PULLUP_ON(ENCODERB);	
     4c0:	39 98       	cbi	0x07, 1	; 7
     4c2:	41 9a       	sbi	0x08, 1	; 8
	//setting INT2 to falling edge sensitive
	//enabling external interrupt
	//clearing interrupt flag

	
	REGISTER_SET1(ENCODER_EICR,ENCODER_ISC1);
     4c4:	ea e6       	ldi	r30, 0x6A	; 106
     4c6:	f0 e0       	ldi	r31, 0x00	; 0
     4c8:	20 81       	ld	r18, Z
     4ca:	28 60       	ori	r18, 0x08	; 8
     4cc:	20 83       	st	Z, r18
	REGISTER_SET1(EIMSK,ENCODER_INT );
     4ce:	ed 9a       	sbi	0x1d, 5	; 29
	REGISTER_SET1(EIFR ,ENCODER_INTF);
     4d0:	e5 9a       	sbi	0x1c, 5	; 28

	UpFlag = false;
     4d2:	fc 01       	movw	r30, r24
     4d4:	14 82       	std	Z+4, r1	; 0x04
     4d6:	08 95       	ret

000004d8 <_ZN11MzMotorBack13InitInterruptEv>:


void MzMotorBack::InitInterrupt()
{
	
	PULLUP_ON(MZ_INTPIN);
     4d8:	99 98       	cbi	0x13, 1	; 19
     4da:	a1 9a       	sbi	0x14, 1	; 20
     4dc:	08 95       	ret

000004de <_ZN11MzMotorBack10InitialiseEv>:

#include "MzMotorBack.h"


void MzMotorBack::Initialise()
{
     4de:	cf 93       	push	r28
     4e0:	df 93       	push	r29
     4e2:	ec 01       	movw	r28, r24
	
	OUTPUT(DD_B);
     4e4:	81 9a       	sbi	0x10, 1	; 16
	OUTPUT(DD_F);
     4e6:	82 9a       	sbi	0x10, 2	; 16
	OUTPUT(DD_M);
     4e8:	80 9a       	sbi	0x10, 0	; 16
	CLEAR(DD_M);

	InitInterrupt();
	Encoder.Initialise();
     4ea:	88 98       	cbi	0x11, 0	; 17
     4ec:	f5 df       	rcall	.-22     	; 0x4d8 <_ZN11MzMotorBack13InitInterruptEv>
	LimitFlag = !READ(MZ_INTPIN);
     4ee:	ce 01       	movw	r24, r28
     4f0:	d3 df       	rcall	.-90     	; 0x498 <_ZN11EncoderBack10InitialiseEv>
     4f2:	82 b3       	in	r24, 0x12	; 18
     4f4:	91 e0       	ldi	r25, 0x01	; 1
     4f6:	86 95       	lsr	r24
     4f8:	81 70       	andi	r24, 0x01	; 1
	VirginityFlag = true;
     4fa:	89 27       	eor	r24, r25
}
     4fc:	8e 83       	std	Y+6, r24	; 0x06
     4fe:	9b 87       	std	Y+11, r25	; 0x0b
     500:	df 91       	pop	r29
     502:	cf 91       	pop	r28
     504:	08 95       	ret

00000506 <_ZN11MzMotorBack19SetForwardDirectionEv>:
}


void MzMotorBack::SetForwardDirection()
{
	SET(DD_F);
     506:	8a 9a       	sbi	0x11, 2	; 17
	CLEAR(DD_B);
     508:	89 98       	cbi	0x11, 1	; 17
     50a:	08 95       	ret

0000050c <_ZN11MzMotorBack19SetReverseDirectionEv>:

}
void MzMotorBack::SetReverseDirection()
{
	CLEAR(DD_F);
     50c:	8a 98       	cbi	0x11, 2	; 17
	SET(DD_B);
     50e:	89 9a       	sbi	0x11, 1	; 17
     510:	08 95       	ret

00000512 <_ZN11MzMotorBack9StopMotorEv>:
}

void MzMotorBack::StopMotor()
{

	SET(DD_F);
     512:	8a 9a       	sbi	0x11, 2	; 17
	SET(DD_B);
     514:	89 9a       	sbi	0x11, 1	; 17
	CLEAR(DD_M);
     516:	88 98       	cbi	0x11, 0	; 17
     518:	08 95       	ret

0000051a <_ZN11MzMotorBack6MoveUPEv>:
	return true;
}


void MzMotorBack::MoveUP()
{
     51a:	f5 df       	rcall	.-22     	; 0x506 <_ZN11MzMotorBack19SetForwardDirectionEv>
     51c:	88 9a       	sbi	0x11, 0	; 17
     51e:	08 95       	ret

00000520 <_ZN11MzMotorBack7OperateEb>:
     520:	cf 93       	push	r28
     522:	fc 01       	movw	r30, r24
     524:	82 b3       	in	r24, 0x12	; 18
     526:	86 95       	lsr	r24
     528:	81 70       	andi	r24, 0x01	; 1
     52a:	91 e0       	ldi	r25, 0x01	; 1
     52c:	89 27       	eor	r24, r25
     52e:	86 83       	std	Z+6, r24	; 0x06
     530:	66 23       	and	r22, r22
     532:	31 f0       	breq	.+12     	; 0x540 <_ZN11MzMotorBack7OperateEb+0x20>
     534:	87 81       	ldd	r24, Z+7	; 0x07
     536:	90 85       	ldd	r25, Z+8	; 0x08
     538:	80 5b       	subi	r24, 0xB0	; 176
     53a:	9f 4f       	sbci	r25, 0xFF	; 255
     53c:	90 87       	std	Z+8, r25	; 0x08
     53e:	87 83       	std	Z+7, r24	; 0x07
     540:	80 81       	ld	r24, Z
     542:	91 81       	ldd	r25, Z+1	; 0x01
     544:	a2 81       	ldd	r26, Z+2	; 0x02
     546:	b3 81       	ldd	r27, Z+3	; 0x03
     548:	27 81       	ldd	r18, Z+7	; 0x07
     54a:	30 85       	ldd	r19, Z+8	; 0x08
     54c:	ac 01       	movw	r20, r24
     54e:	42 1b       	sub	r20, r18
     550:	53 0b       	sbc	r21, r19
     552:	9a 01       	movw	r18, r20
     554:	52 87       	std	Z+10, r21	; 0x0a
     556:	41 87       	std	Z+9, r20	; 0x09
     558:	43 85       	ldd	r20, Z+11	; 0x0b
     55a:	41 11       	cpse	r20, r1
     55c:	03 c0       	rjmp	.+6      	; 0x564 <_ZN11MzMotorBack7OperateEb+0x44>
     55e:	2a 30       	cpi	r18, 0x0A	; 10
     560:	31 05       	cpc	r19, r1
     562:	1c f4       	brge	.+6      	; 0x56a <_ZN11MzMotorBack7OperateEb+0x4a>
     564:	c6 81       	ldd	r28, Z+6	; 0x06
     566:	cc 23       	and	r28, r28
     568:	41 f0       	breq	.+16     	; 0x57a <_ZN11MzMotorBack7OperateEb+0x5a>
     56a:	13 86       	std	Z+11, r1	; 0x0b
     56c:	0a 97       	sbiw	r24, 0x0a	; 10
     56e:	90 87       	std	Z+8, r25	; 0x08
     570:	87 83       	std	Z+7, r24	; 0x07
     572:	cf 01       	movw	r24, r30
     574:	ce df       	rcall	.-100    	; 0x512 <_ZN11MzMotorBack9StopMotorEv>
     576:	c0 e0       	ldi	r28, 0x00	; 0
     578:	0b c0       	rjmp	.+22     	; 0x590 <_ZN11MzMotorBack7OperateEb+0x70>
     57a:	83 39       	cpi	r24, 0x93	; 147
     57c:	94 40       	sbci	r25, 0x04	; 4
     57e:	a1 05       	cpc	r26, r1
     580:	b1 05       	cpc	r27, r1
     582:	1c f0       	brlt	.+6      	; 0x58a <_ZN11MzMotorBack7OperateEb+0x6a>
     584:	cf 01       	movw	r24, r30
     586:	c5 df       	rcall	.-118    	; 0x512 <_ZN11MzMotorBack9StopMotorEv>
     588:	03 c0       	rjmp	.+6      	; 0x590 <_ZN11MzMotorBack7OperateEb+0x70>
     58a:	cf 01       	movw	r24, r30
     58c:	c6 df       	rcall	.-116    	; 0x51a <_ZN11MzMotorBack6MoveUPEv>
     58e:	c1 e0       	ldi	r28, 0x01	; 1
     590:	8c 2f       	mov	r24, r28
     592:	cf 91       	pop	r28
     594:	08 95       	ret

00000596 <_ZN11MzMotorBack5MoveDEv>:
     596:	cf 93       	push	r28
     598:	df 93       	push	r29
     59a:	ec 01       	movw	r28, r24
     59c:	88 81       	ld	r24, Y
     59e:	99 81       	ldd	r25, Y+1	; 0x01
     5a0:	aa 81       	ldd	r26, Y+2	; 0x02
     5a2:	bb 81       	ldd	r27, Y+3	; 0x03
     5a4:	c3 97       	sbiw	r24, 0x33	; 51
     5a6:	a1 05       	cpc	r26, r1
     5a8:	b1 05       	cpc	r27, r1
     5aa:	24 f0       	brlt	.+8      	; 0x5b4 <_ZN11MzMotorBack5MoveDEv+0x1e>
     5ac:	ce 01       	movw	r24, r28
     5ae:	ae df       	rcall	.-164    	; 0x50c <_ZN11MzMotorBack19SetReverseDirectionEv>
     5b0:	88 9a       	sbi	0x11, 0	; 17
     5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <_ZN11MzMotorBack5MoveDEv+0x22>
     5b4:	ce 01       	movw	r24, r28
     5b6:	ad df       	rcall	.-166    	; 0x512 <_ZN11MzMotorBack9StopMotorEv>
     5b8:	88 81       	ld	r24, Y
     5ba:	99 81       	ldd	r25, Y+1	; 0x01
     5bc:	98 87       	std	Y+8, r25	; 0x08
     5be:	8f 83       	std	Y+7, r24	; 0x07
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	08 95       	ret

000005c6 <_ZN11MzMotorBack8PreMoveDEv>:
     5c6:	a2 df       	rcall	.-188    	; 0x50c <_ZN11MzMotorBack19SetReverseDirectionEv>
     5c8:	88 9a       	sbi	0x11, 0	; 17
     5ca:	08 95       	ret

000005cc <_ZN11MzMotorBackC1Ev>:
     5cc:	08 95       	ret

000005ce <_ZN11MzMotorBackD1Ev>:
     5ce:	08 95       	ret

000005d0 <_ZN12MzMotorFront13InitInterruptEv>:


void MzMotorFront::InitInterrupt()
{
	
	PULLUP_ON(MZ_INTPIN);
     5d0:	57 98       	cbi	0x0a, 7	; 10
     5d2:	5f 9a       	sbi	0x0b, 7	; 11
     5d4:	08 95       	ret

000005d6 <_ZN12MzMotorFront10InitialiseEv>:




void MzMotorFront::Initialise()
{	
     5d6:	cf 93       	push	r28
     5d8:	df 93       	push	r29
     5da:	ec 01       	movw	r28, r24
	OUTPUT(DD_B);
     5dc:	84 9a       	sbi	0x10, 4	; 16
	OUTPUT(DD_F);
     5de:	83 9a       	sbi	0x10, 3	; 16
	OUTPUT(DD_M);
     5e0:	85 9a       	sbi	0x10, 5	; 16
	CLEAR(DD_M);

	InitInterrupt();
     5e2:	8d 98       	cbi	0x11, 5	; 17
	Encoder.Initialise();
     5e4:	f5 df       	rcall	.-22     	; 0x5d0 <_ZN12MzMotorFront13InitInterruptEv>
     5e6:	ce 01       	movw	r24, r28
     5e8:	06 96       	adiw	r24, 0x06	; 6
	LimitFlag = !READ(MZ_INTPIN);
     5ea:	66 df       	rcall	.-308    	; 0x4b8 <_ZN12EncoderFront10InitialiseEv>
     5ec:	89 b1       	in	r24, 0x09	; 9
     5ee:	80 95       	com	r24
     5f0:	88 1f       	adc	r24, r24
     5f2:	88 27       	eor	r24, r24
     5f4:	88 1f       	adc	r24, r24
	VirginityFlag = true;
     5f6:	8b 83       	std	Y+3, r24	; 0x03
     5f8:	81 e0       	ldi	r24, 0x01	; 1
}
     5fa:	8b 87       	std	Y+11, r24	; 0x0b
     5fc:	df 91       	pop	r29
     5fe:	cf 91       	pop	r28
     600:	08 95       	ret

00000602 <_ZN12MzMotorFront19SetForwardDirectionEv>:
}


void MzMotorFront::SetForwardDirection()
{
	SET(DD_F);
     602:	8b 9a       	sbi	0x11, 3	; 17
	CLEAR(DD_B);
     604:	8c 98       	cbi	0x11, 4	; 17
     606:	08 95       	ret

00000608 <_ZN12MzMotorFront19SetReverseDirectionEv>:

}
void MzMotorFront::SetReverseDirection()
{
	CLEAR(DD_F);
     608:	8b 98       	cbi	0x11, 3	; 17
	SET(DD_B);
     60a:	8c 9a       	sbi	0x11, 4	; 17
     60c:	08 95       	ret

0000060e <_ZN12MzMotorFront9StopMotorEv>:
	
}

void MzMotorFront::StopMotor()
{
	SET(DD_F);
     60e:	8b 9a       	sbi	0x11, 3	; 17
	SET(DD_B);
     610:	8c 9a       	sbi	0x11, 4	; 17
	CLEAR(DD_M);
     612:	8d 98       	cbi	0x11, 5	; 17
     614:	08 95       	ret

00000616 <_ZN12MzMotorFront6MoveUPEv>:
     616:	f5 df       	rcall	.-22     	; 0x602 <_ZN12MzMotorFront19SetForwardDirectionEv>
     618:	8d 9a       	sbi	0x11, 5	; 17
     61a:	08 95       	ret

0000061c <_ZN12MzMotorFront7OperateEb>:
     61c:	cf 93       	push	r28
     61e:	fc 01       	movw	r30, r24
     620:	89 b1       	in	r24, 0x09	; 9
     622:	80 95       	com	r24
     624:	88 1f       	adc	r24, r24
     626:	88 27       	eor	r24, r24
     628:	88 1f       	adc	r24, r24
     62a:	83 83       	std	Z+3, r24	; 0x03
     62c:	66 23       	and	r22, r22
     62e:	31 f0       	breq	.+12     	; 0x63c <_ZN12MzMotorFront7OperateEb+0x20>
     630:	84 81       	ldd	r24, Z+4	; 0x04
     632:	95 81       	ldd	r25, Z+5	; 0x05
     634:	80 5b       	subi	r24, 0xB0	; 176
     636:	9f 4f       	sbci	r25, 0xFF	; 255
     638:	95 83       	std	Z+5, r25	; 0x05
     63a:	84 83       	std	Z+4, r24	; 0x04
     63c:	86 81       	ldd	r24, Z+6	; 0x06
     63e:	97 81       	ldd	r25, Z+7	; 0x07
     640:	a0 85       	ldd	r26, Z+8	; 0x08
     642:	b1 85       	ldd	r27, Z+9	; 0x09
     644:	24 81       	ldd	r18, Z+4	; 0x04
     646:	35 81       	ldd	r19, Z+5	; 0x05
     648:	ac 01       	movw	r20, r24
     64a:	42 1b       	sub	r20, r18
     64c:	53 0b       	sbc	r21, r19
     64e:	9a 01       	movw	r18, r20
     650:	52 83       	std	Z+2, r21	; 0x02
     652:	41 83       	std	Z+1, r20	; 0x01
     654:	43 85       	ldd	r20, Z+11	; 0x0b
     656:	41 11       	cpse	r20, r1
     658:	03 c0       	rjmp	.+6      	; 0x660 <_ZN12MzMotorFront7OperateEb+0x44>
     65a:	2a 30       	cpi	r18, 0x0A	; 10
     65c:	31 05       	cpc	r19, r1
     65e:	1c f4       	brge	.+6      	; 0x666 <_ZN12MzMotorFront7OperateEb+0x4a>
     660:	c3 81       	ldd	r28, Z+3	; 0x03
     662:	cc 23       	and	r28, r28
     664:	41 f0       	breq	.+16     	; 0x676 <_ZN12MzMotorFront7OperateEb+0x5a>
     666:	13 86       	std	Z+11, r1	; 0x0b
     668:	0a 97       	sbiw	r24, 0x0a	; 10
     66a:	95 83       	std	Z+5, r25	; 0x05
     66c:	84 83       	std	Z+4, r24	; 0x04
     66e:	cf 01       	movw	r24, r30
     670:	ce df       	rcall	.-100    	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     672:	c0 e0       	ldi	r28, 0x00	; 0
     674:	0b c0       	rjmp	.+22     	; 0x68c <_ZN12MzMotorFront7OperateEb+0x70>
     676:	83 39       	cpi	r24, 0x93	; 147
     678:	94 40       	sbci	r25, 0x04	; 4
     67a:	a1 05       	cpc	r26, r1
     67c:	b1 05       	cpc	r27, r1
     67e:	1c f0       	brlt	.+6      	; 0x686 <_ZN12MzMotorFront7OperateEb+0x6a>
     680:	cf 01       	movw	r24, r30
     682:	c5 df       	rcall	.-118    	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     684:	03 c0       	rjmp	.+6      	; 0x68c <_ZN12MzMotorFront7OperateEb+0x70>
     686:	cf 01       	movw	r24, r30
     688:	c6 df       	rcall	.-116    	; 0x616 <_ZN12MzMotorFront6MoveUPEv>
     68a:	c1 e0       	ldi	r28, 0x01	; 1
     68c:	8c 2f       	mov	r24, r28
     68e:	cf 91       	pop	r28
     690:	08 95       	ret

00000692 <_ZN12MzMotorFront5MoveDEv>:
     692:	cf 93       	push	r28
     694:	df 93       	push	r29
     696:	ec 01       	movw	r28, r24
     698:	8e 81       	ldd	r24, Y+6	; 0x06
     69a:	9f 81       	ldd	r25, Y+7	; 0x07
     69c:	a8 85       	ldd	r26, Y+8	; 0x08
     69e:	b9 85       	ldd	r27, Y+9	; 0x09
     6a0:	87 34       	cpi	r24, 0x47	; 71
     6a2:	91 05       	cpc	r25, r1
     6a4:	a1 05       	cpc	r26, r1
     6a6:	b1 05       	cpc	r27, r1
     6a8:	24 f0       	brlt	.+8      	; 0x6b2 <_ZN12MzMotorFront5MoveDEv+0x20>
     6aa:	ce 01       	movw	r24, r28
     6ac:	ad df       	rcall	.-166    	; 0x608 <_ZN12MzMotorFront19SetReverseDirectionEv>
     6ae:	8d 9a       	sbi	0x11, 5	; 17
     6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <_ZN12MzMotorFront5MoveDEv+0x24>
     6b2:	ce 01       	movw	r24, r28
     6b4:	ac df       	rcall	.-168    	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     6b6:	8e 81       	ldd	r24, Y+6	; 0x06
     6b8:	9f 81       	ldd	r25, Y+7	; 0x07
     6ba:	9d 83       	std	Y+5, r25	; 0x05
     6bc:	8c 83       	std	Y+4, r24	; 0x04
     6be:	df 91       	pop	r29
     6c0:	cf 91       	pop	r28
     6c2:	08 95       	ret

000006c4 <_ZN12MzMotorFront8PreMoveDEv>:
     6c4:	a1 df       	rcall	.-190    	; 0x608 <_ZN12MzMotorFront19SetReverseDirectionEv>
     6c6:	8d 9a       	sbi	0x11, 5	; 17
     6c8:	08 95       	ret

000006ca <_ZN12MzMotorFrontC1Ev>:
     6ca:	08 95       	ret

000006cc <_ZN12MzMotorFrontD1Ev>:
     6cc:	08 95       	ret

000006ce <main>:
char gStatus;
char gPostion;


int main(void)
{
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	cd b7       	in	r28, 0x3d	; 61
     6d4:	de b7       	in	r29, 0x3e	; 62
     6d6:	68 97       	sbiw	r28, 0x18	; 24
     6d8:	0f b6       	in	r0, 0x3f	; 63
     6da:	f8 94       	cli
     6dc:	de bf       	out	0x3e, r29	; 62
     6de:	0f be       	out	0x3f, r0	; 63
     6e0:	cd bf       	out	0x3d, r28	; 61
	
	PULLUP_ON(DD_MGZ_LIMIT);
     6e2:	08 98       	cbi	0x01, 0	; 1
     6e4:	10 9a       	sbi	0x02, 0	; 2


	if(1)
	{
		char Count1;
		MzMotorBack  PreBackMagazine;
     6e6:	ce 01       	movw	r24, r28
     6e8:	0d 96       	adiw	r24, 0x0d	; 13
     6ea:	70 df       	rcall	.-288    	; 0x5cc <_ZN11MzMotorBackC1Ev>
		MzMotorFront PreFrontMagazine;
     6ec:	ce 01       	movw	r24, r28
     6ee:	01 96       	adiw	r24, 0x01	; 1
		PreFrontMagazine.Initialise();
     6f0:	ec df       	rcall	.-40     	; 0x6ca <_ZN12MzMotorFrontC1Ev>
     6f2:	ce 01       	movw	r24, r28
		PreBackMagazine.Initialise();
     6f4:	01 96       	adiw	r24, 0x01	; 1
     6f6:	6f df       	rcall	.-290    	; 0x5d6 <_ZN12MzMotorFront10InitialiseEv>
     6f8:	ce 01       	movw	r24, r28
     6fa:	0d 96       	adiw	r24, 0x0d	; 13
		ThrowMotor.Initialise();
     6fc:	f0 de       	rcall	.-544    	; 0x4de <_ZN11MzMotorBack10InitialiseEv>
     6fe:	89 e9       	ldi	r24, 0x99	; 153
     700:	92 e0       	ldi	r25, 0x02	; 2


		PreFrontMagazine.PreMoveD();
     702:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <_ZN6TMotor10InitialiseEv>
     706:	ce 01       	movw	r24, r28
		PreBackMagazine.PreMoveD();
     708:	01 96       	adiw	r24, 0x01	; 1
     70a:	dc df       	rcall	.-72     	; 0x6c4 <_ZN12MzMotorFront8PreMoveDEv>
     70c:	ce 01       	movw	r24, r28
     70e:	0d 96       	adiw	r24, 0x0d	; 13
		ThrowMotor.Operate(1);
     710:	5a df       	rcall	.-332    	; 0x5c6 <_ZN11MzMotorBack8PreMoveDEv>
     712:	61 e0       	ldi	r22, 0x01	; 1
     714:	89 e9       	ldi	r24, 0x99	; 153
     716:	92 e0       	ldi	r25, 0x02	; 2
     718:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <_ZN6TMotor7OperateEh>

		while(1)
		{
			if(!READ(DD_MGZ_LIMIT))
     71c:	00 9b       	sbis	0x00, 0	; 0
     71e:	a0 c1       	rjmp	.+832    	; 0xa60 <main+0x392>
	
	while(1)
	{
	
		
		gLimitFlag = ThrowMotor.LimitFlag;
     720:	99 c1       	rjmp	.+818    	; 0xa54 <main+0x386>
     722:	f7 01       	movw	r30, r14
     724:	83 81       	ldd	r24, Z+3	; 0x03
     726:	80 93 7c 02 	sts	0x027C, r24	; 0x80027c <gLimitFlag>
		gChangeFlag = ThrowMotor.ChangeFlag;
     72a:	84 81       	ldd	r24, Z+4	; 0x04
     72c:	80 93 7b 02 	sts	0x027B, r24	; 0x80027b <gChangeFlag>
	
		gStatus = ThrowMotor.Status;
     730:	86 81       	ldd	r24, Z+6	; 0x06
     732:	80 93 77 02 	sts	0x0277, r24	; 0x800277 <gStatus>
		gPostion = ThrowMotor.Position; 
     736:	85 81       	ldd	r24, Z+5	; 0x05
     738:	80 93 76 02 	sts	0x0276, r24	; 0x800276 <__data_end>

		

		if(uart3_available())
     73c:	0e 94 3c 10 	call	0x2078	; 0x2078 <_Z15uart3_availablev>
     740:	89 2b       	or	r24, r25
		{	
			Rx_Buffer = uart3_getc();
     742:	21 f0       	breq	.+8      	; 0x74c <main+0x7e>
     744:	0e 94 21 10 	call	0x2042	; 0x2042 <_Z10uart3_getcv>
     748:	80 93 7d 02 	sts	0x027D, r24	; 0x80027d <Rx_Buffer>
		}
		
		
		if( !(++LCDClear) )
     74c:	80 91 80 02 	lds	r24, 0x0280	; 0x800280 <LCDClear>
     750:	8f 5f       	subi	r24, 0xFF	; 255
		{
			lcd_clear();	
     752:	80 93 80 02 	sts	0x0280, r24	; 0x800280 <LCDClear>
		}
			
		lcd_gotoxy(0,0);
     756:	81 11       	cpse	r24, r1
     758:	01 c0       	rjmp	.+2      	; 0x75c <main+0x8e>

		
		lcd_putch('F');
     75a:	be dd       	rcall	.-1156   	; 0x2d8 <_Z9lcd_clearv>
     75c:	60 e0       	ldi	r22, 0x00	; 0
		lcd_putch(':');
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	95 de       	rcall	.-726    	; 0x48c <_Z10lcd_gotoxyhh>
		
		
		lcd_unum(BackMotor.Controller.setpoint);
     762:	86 e4       	ldi	r24, 0x46	; 70
     764:	bd dd       	rcall	.-1158   	; 0x2e0 <_Z9lcd_putchc>
     766:	8a e3       	ldi	r24, 0x3A	; 58
		lcd_putch(' ');
     768:	bb dd       	rcall	.-1162   	; 0x2e0 <_Z9lcd_putchc>
     76a:	f8 01       	movw	r30, r16
		
		lcd_unum(BackMotor.RPM);
     76c:	80 8d       	ldd	r24, Z+24	; 0x18
     76e:	91 8d       	ldd	r25, Z+25	; 0x19
     770:	f6 dd       	rcall	.-1044   	; 0x35e <_Z8lcd_unumj>
		
		/*lcd_putch(' ');
		lcd_unum(MagazineBack.Encoder.Count);
		*/

		lcd_gotoxy(0,1);
     772:	80 e2       	ldi	r24, 0x20	; 32
     774:	b5 dd       	rcall	.-1174   	; 0x2e0 <_Z9lcd_putchc>
     776:	f8 01       	movw	r30, r16

		lcd_putch('S');
     778:	86 81       	ldd	r24, Z+6	; 0x06
     77a:	97 81       	ldd	r25, Z+7	; 0x07
     77c:	f0 dd       	rcall	.-1056   	; 0x35e <_Z8lcd_unumj>
		lcd_putch(':');
     77e:	61 e0       	ldi	r22, 0x01	; 1
     780:	80 e0       	ldi	r24, 0x00	; 0

		lcd_unum(SideMotor.OCR);
     782:	84 de       	rcall	.-760    	; 0x48c <_Z10lcd_gotoxyhh>
     784:	83 e5       	ldi	r24, 0x53	; 83
     786:	ac dd       	rcall	.-1192   	; 0x2e0 <_Z9lcd_putchc>
     788:	8a e3       	ldi	r24, 0x3A	; 58
		lcd_putch(' ');
     78a:	aa dd       	rcall	.-1196   	; 0x2e0 <_Z9lcd_putchc>
     78c:	f6 01       	movw	r30, r12
     78e:	84 85       	ldd	r24, Z+12	; 0x0c
		lcd_unum(SideMotor.RPM);
     790:	95 85       	ldd	r25, Z+13	; 0x0d
     792:	e5 dd       	rcall	.-1078   	; 0x35e <_Z8lcd_unumj>
     794:	80 e2       	ldi	r24, 0x20	; 32
     796:	a4 dd       	rcall	.-1208   	; 0x2e0 <_Z9lcd_putchc>
     798:	f6 01       	movw	r30, r12

		if(StartFlag)
     79a:	87 81       	ldd	r24, Z+7	; 0x07
     79c:	90 85       	ldd	r25, Z+8	; 0x08
     79e:	df dd       	rcall	.-1090   	; 0x35e <_Z8lcd_unumj>
     7a0:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <StartFlag>
		{
			lcd_putch( 'M' );
     7a4:	88 23       	and	r24, r24
     7a6:	19 f0       	breq	.+6      	; 0x7ae <main+0xe0>
     7a8:	8d e4       	ldi	r24, 0x4D	; 77
		}
		else
			lcd_putch( 'S' );
     7aa:	9a dd       	rcall	.-1228   	; 0x2e0 <_Z9lcd_putchc>
     7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <main+0xe4>
     7ae:	83 e5       	ldi	r24, 0x53	; 83





		if( IsNumber(Rx_Buffer ) )
     7b0:	97 dd       	rcall	.-1234   	; 0x2e0 <_Z9lcd_putchc>
     7b2:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <Rx_Buffer>
     7b6:	80 53       	subi	r24, 0x30	; 48
     7b8:	8a 30       	cpi	r24, 0x0A	; 10
		{
			Command = Rx_Buffer - 0x30;
     7ba:	10 f4       	brcc	.+4      	; 0x7c0 <main+0xf2>
     7bc:	80 93 7f 02 	sts	0x027F, r24	; 0x80027f <Command>
		}

		if(Command)
     7c0:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <Command>
     7c4:	88 23       	and	r24, r24
		{
			if( Command < 8)
     7c6:	b9 f1       	breq	.+110    	; 0x836 <main+0x168>
     7c8:	88 30       	cpi	r24, 0x08	; 8
			{
				BackMotor.Controller.Set_Setpoint(LandingData[Command].MainRPM);
     7ca:	98 f5       	brcc	.+102    	; 0x832 <main+0x164>
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	fc 01       	movw	r30, r24
     7d0:	ee 0f       	add	r30, r30
     7d2:	ff 1f       	adc	r31, r31
     7d4:	e8 0f       	add	r30, r24
     7d6:	f9 1f       	adc	r31, r25
     7d8:	ee 0f       	add	r30, r30
     7da:	ff 1f       	adc	r31, r31
     7dc:	e0 50       	subi	r30, 0x00	; 0
     7de:	fe 4f       	sbci	r31, 0xFE	; 254
     7e0:	60 81       	ld	r22, Z
     7e2:	71 81       	ldd	r23, Z+1	; 0x01
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	93 e0       	ldi	r25, 0x03	; 3
     7e8:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <_ZN3PID12Set_SetpointEi>
				SideMotor.Controller.Set_Setpoint(LandingData[Command].SpinRPM);
     7ec:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <Command>
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	fc 01       	movw	r30, r24
     7f4:	ee 0f       	add	r30, r30
     7f6:	ff 1f       	adc	r31, r31
     7f8:	e8 0f       	add	r30, r24
     7fa:	f9 1f       	adc	r31, r25
     7fc:	ee 0f       	add	r30, r30
     7fe:	ff 1f       	adc	r31, r31
     800:	e0 50       	subi	r30, 0x00	; 0
     802:	fe 4f       	sbci	r31, 0xFE	; 254
     804:	62 81       	ldd	r22, Z+2	; 0x02
     806:	73 81       	ldd	r23, Z+3	; 0x03
     808:	81 eb       	ldi	r24, 0xB1	; 177
     80a:	92 e0       	ldi	r25, 0x02	; 2
     80c:	0e 94 ca 0d 	call	0x1b94	; 0x1b94 <_ZN3PID12Set_SetpointEi>
				SideMotor.OCR = (LandingData[Command].SpinOCR);
     810:	80 91 7f 02 	lds	r24, 0x027F	; 0x80027f <Command>
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	fc 01       	movw	r30, r24
     818:	ee 0f       	add	r30, r30
     81a:	ff 1f       	adc	r31, r31
     81c:	e8 0f       	add	r30, r24
     81e:	f9 1f       	adc	r31, r25
     820:	ee 0f       	add	r30, r30
     822:	ff 1f       	adc	r31, r31
     824:	e0 50       	subi	r30, 0x00	; 0
     826:	fe 4f       	sbci	r31, 0xFE	; 254
     828:	84 81       	ldd	r24, Z+4	; 0x04
     82a:	95 81       	ldd	r25, Z+5	; 0x05
     82c:	f6 01       	movw	r30, r12
     82e:	95 87       	std	Z+13, r25	; 0x0d
			}
			
			Command = 0;
     830:	84 87       	std	Z+12, r24	; 0x0c
     832:	10 92 7f 02 	sts	0x027F, r1	; 0x80027f <Command>

		}
		
			
		if( Rx_Buffer == 'g')
     836:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <Rx_Buffer>
		{
			if(!StartFlag &&  ( ThrowMotor.Position == HOMEPOSITION ) )
     83a:	87 36       	cpi	r24, 0x67	; 103
     83c:	e9 f4       	brne	.+58     	; 0x878 <main+0x1aa>
     83e:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <StartFlag>
     842:	81 11       	cpse	r24, r1
     844:	05 c0       	rjmp	.+10     	; 0x850 <main+0x182>
     846:	f7 01       	movw	r30, r14
			{
				MagazineBack.VirginityFlag = true;
				MagazineFront.VirginityFlag = true;
			}
			StartFlag = true;
     848:	85 81       	ldd	r24, Z+5	; 0x05
     84a:	86 30       	cpi	r24, 0x06	; 6
     84c:	09 f4       	brne	.+2      	; 0x850 <main+0x182>


			if( ThrowMotor.Position == HOMEPOSITION )
     84e:	fc c0       	rjmp	.+504    	; 0xa48 <main+0x37a>
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	80 93 78 02 	sts	0x0278, r24	; 0x800278 <StartFlag>
			{
				TempReturn1 = MagazineFront.Operate(true);
     856:	f7 01       	movw	r30, r14
     858:	85 81       	ldd	r24, Z+5	; 0x05
     85a:	86 30       	cpi	r24, 0x06	; 6
     85c:	d9 f4       	brne	.+54     	; 0x894 <main+0x1c6>
     85e:	61 e0       	ldi	r22, 0x01	; 1
				TempReturn2 = MagazineBack.Operate(true);
     860:	8d e8       	ldi	r24, 0x8D	; 141
     862:	92 e0       	ldi	r25, 0x02	; 2
     864:	db de       	rcall	.-586    	; 0x61c <_ZN12MzMotorFront7OperateEb>
     866:	80 93 7a 02 	sts	0x027A, r24	; 0x80027a <TempReturn1>
     86a:	61 e0       	ldi	r22, 0x01	; 1
     86c:	81 e8       	ldi	r24, 0x81	; 129
     86e:	92 e0       	ldi	r25, 0x02	; 2
			}
			

		}
		else if( Rx_Buffer == 's' || rx == 'S')
     870:	57 de       	rcall	.-850    	; 0x520 <_ZN11MzMotorBack7OperateEb>
     872:	80 93 79 02 	sts	0x0279, r24	; 0x800279 <TempReturn2>
     876:	0e c0       	rjmp	.+28     	; 0x894 <main+0x1c6>
     878:	83 37       	cpi	r24, 0x73	; 115
     87a:	21 f0       	breq	.+8      	; 0x884 <main+0x1b6>
		{

			StartFlag = false;
     87c:	80 91 7e 02 	lds	r24, 0x027E	; 0x80027e <rx>
			MagazineBack.StopMotor();
     880:	83 35       	cpi	r24, 0x53	; 83
     882:	41 f4       	brne	.+16     	; 0x894 <main+0x1c6>
     884:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <StartFlag>
			MagazineFront.StopMotor();
     888:	81 e8       	ldi	r24, 0x81	; 129
     88a:	92 e0       	ldi	r25, 0x02	; 2
     88c:	42 de       	rcall	.-892    	; 0x512 <_ZN11MzMotorBack9StopMotorEv>

		}
		
	

		if(StartFlag == true)
     88e:	8d e8       	ldi	r24, 0x8D	; 141
     890:	92 e0       	ldi	r25, 0x02	; 2
     892:	bd de       	rcall	.-646    	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     894:	80 91 78 02 	lds	r24, 0x0278	; 0x800278 <StartFlag>
		{
	
			if(uart0_available())
     898:	88 23       	and	r24, r24
     89a:	09 f4       	brne	.+2      	; 0x89e <main+0x1d0>
			{
				rx = uart0_getc();
     89c:	6f c0       	rjmp	.+222    	; 0x97c <main+0x2ae>
     89e:	0e 94 43 0f 	call	0x1e86	; 0x1e86 <_Z15uart0_availablev>
				if(rx == '.')
				{
					StartFlag = false;
     8a2:	89 2b       	or	r24, r25
				}
			}

			MotorA_Return = BackMotor.Operate(rx, Rx_Buffer);
     8a4:	41 f0       	breq	.+16     	; 0x8b6 <main+0x1e8>
     8a6:	0e 94 dd 0e 	call	0x1dba	; 0x1dba <_Z10uart0_getcv>
     8aa:	80 93 7e 02 	sts	0x027E, r24	; 0x80027e <rx>
     8ae:	8e 32       	cpi	r24, 0x2E	; 46
			FrontMotor.SetOcrValue(BackMotor.Ocr);
     8b0:	11 f4       	brne	.+4      	; 0x8b6 <main+0x1e8>
     8b2:	10 92 78 02 	sts	0x0278, r1	; 0x800278 <StartFlag>
     8b6:	4d e7       	ldi	r20, 0x7D	; 125
     8b8:	52 e0       	ldi	r21, 0x02	; 2
     8ba:	6e e7       	ldi	r22, 0x7E	; 126
     8bc:	72 e0       	ldi	r23, 0x02	; 2

			
			
			MotorS_Return = SideMotor.Operate(rx, Rx_Buffer);
     8be:	c8 01       	movw	r24, r16
     8c0:	08 d3       	rcall	.+1552   	; 0xed2 <_ZN9MotorBack7OperateERhS0_>
     8c2:	f8 01       	movw	r30, r16
     8c4:	60 81       	ld	r22, Z
     8c6:	71 81       	ldd	r23, Z+1	; 0x01
     8c8:	8e ec       	ldi	r24, 0xCE	; 206
     8ca:	92 e0       	ldi	r25, 0x02	; 2


			MagazineFront.Operate(false);
     8cc:	50 d5       	rcall	.+2720   	; 0x136e <_ZN10MotorFront11SetOcrValueEi>
     8ce:	4d e7       	ldi	r20, 0x7D	; 125
     8d0:	52 e0       	ldi	r21, 0x02	; 2
     8d2:	6e e7       	ldi	r22, 0x7E	; 126
     8d4:	72 e0       	ldi	r23, 0x02	; 2
			MagazineBack.Operate(false);
     8d6:	c6 01       	movw	r24, r12
     8d8:	73 d6       	rcall	.+3302   	; 0x15c0 <_ZN9MotorSide7OperateERhS0_>
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	8d e8       	ldi	r24, 0x8D	; 141
     8de:	92 e0       	ldi	r25, 0x02	; 2

			ThrowMotor.Operate( Rx_Buffer );
     8e0:	9d de       	rcall	.-710    	; 0x61c <_ZN12MzMotorFront7OperateEb>
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	81 e8       	ldi	r24, 0x81	; 129
     8e6:	92 e0       	ldi	r25, 0x02	; 2
     8e8:	1b de       	rcall	.-970    	; 0x520 <_ZN11MzMotorBack7OperateEb>
			
			Rx_Buffer = 0;
     8ea:	60 91 7d 02 	lds	r22, 0x027D	; 0x80027d <Rx_Buffer>
			rx = 0;
     8ee:	c7 01       	movw	r24, r14
     8f0:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <_ZN6TMotor7OperateEh>
			
			uart0_putc('2');
     8f4:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <Rx_Buffer>
			uart0_putc(' ');
     8f8:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <rx>
     8fc:	82 e3       	ldi	r24, 0x32	; 50
			uart0_putint(BackMotor.RPM);
     8fe:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     902:	80 e2       	ldi	r24, 0x20	; 32
     904:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			uart0_putc(' ');
     908:	f8 01       	movw	r30, r16
     90a:	86 81       	ldd	r24, Z+6	; 0x06
     90c:	97 81       	ldd	r25, Z+7	; 0x07
			uart0_putint(BackMotor.Controller.setpoint);
     90e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     912:	80 e2       	ldi	r24, 0x20	; 32
     914:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>

			uart0_putc(' ');
     918:	f8 01       	movw	r30, r16
     91a:	80 8d       	ldd	r24, Z+24	; 0x18
     91c:	91 8d       	ldd	r25, Z+25	; 0x19
			uart0_putint(BackMotor.Ocr);
     91e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     922:	80 e2       	ldi	r24, 0x20	; 32
     924:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>

			
			uart0_putc(' ');
     928:	f8 01       	movw	r30, r16
     92a:	80 81       	ld	r24, Z
     92c:	91 81       	ldd	r25, Z+1	; 0x01
			uart0_putint(FrontMotor.RPM);
     92e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     932:	80 e2       	ldi	r24, 0x20	; 32
     934:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     938:	0f 2e       	mov	r0, r31
     93a:	fe ec       	ldi	r31, 0xCE	; 206
     93c:	af 2e       	mov	r10, r31
			uart0_putc(' ');
     93e:	f2 e0       	ldi	r31, 0x02	; 2
     940:	bf 2e       	mov	r11, r31
     942:	f0 2d       	mov	r31, r0
			uart0_putint(FrontMotor.Controller.setpoint);
     944:	f5 01       	movw	r30, r10
     946:	86 81       	ldd	r24, Z+6	; 0x06
     948:	97 81       	ldd	r25, Z+7	; 0x07
     94a:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
			
			uart0_putc(' ');
     94e:	80 e2       	ldi	r24, 0x20	; 32
     950:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			uart0_putint(FrontMotor.Ocr);
     954:	f5 01       	movw	r30, r10
     956:	80 8d       	ldd	r24, Z+24	; 0x18
     958:	91 8d       	ldd	r25, Z+25	; 0x19


			uart0_putc('\n');
     95a:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
			uart0_putc('\r');
     95e:	80 e2       	ldi	r24, 0x20	; 32
     960:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
		
		}
		else
		{
				
			BackMotor.StopMotor();
     964:	f5 01       	movw	r30, r10
     966:	80 81       	ld	r24, Z
			FrontMotor.StopMotor();
     968:	91 81       	ldd	r25, Z+1	; 0x01
     96a:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     96e:	8a e0       	ldi	r24, 0x0A	; 10
			SideMotor.StopMotor();
     970:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     974:	8d e0       	ldi	r24, 0x0D	; 13

			
			ThrowMotor.Operate( 0 );
     976:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     97a:	61 c0       	rjmp	.+194    	; 0xa3e <main+0x370>
     97c:	c8 01       	movw	r24, r16
			

			if(Rx_Buffer ==  'd')
     97e:	5c d2       	rcall	.+1208   	; 0xe38 <_ZN9MotorBack9StopMotorEv>
     980:	8e ec       	ldi	r24, 0xCE	; 206
     982:	92 e0       	ldi	r25, 0x02	; 2
     984:	1b d5       	rcall	.+2614   	; 0x13bc <_ZN10MotorFront9StopMotorEv>
			{
				
				MagazineBack.StopMotor();
     986:	c6 01       	movw	r24, r12
     988:	0f d6       	rcall	.+3102   	; 0x15a8 <_ZN9MotorSide9StopMotorEv>
     98a:	60 e0       	ldi	r22, 0x00	; 0
     98c:	c7 01       	movw	r24, r14
				MagazineFront.StopMotor();
     98e:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <_ZN6TMotor7OperateEh>
     992:	80 91 7d 02 	lds	r24, 0x027D	; 0x80027d <Rx_Buffer>
     996:	84 36       	cpi	r24, 0x64	; 100

			}
			else if(Rx_Buffer == 'D')			
     998:	39 f4       	brne	.+14     	; 0x9a8 <main+0x2da>
     99a:	81 e8       	ldi	r24, 0x81	; 129
			{
				MagazineBack.MoveD();
     99c:	92 e0       	ldi	r25, 0x02	; 2
     99e:	b9 dd       	rcall	.-1166   	; 0x512 <_ZN11MzMotorBack9StopMotorEv>
     9a0:	8d e8       	ldi	r24, 0x8D	; 141
     9a2:	92 e0       	ldi	r25, 0x02	; 2
				MagazineFront.MoveD();
     9a4:	34 de       	rcall	.-920    	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     9a6:	08 c0       	rjmp	.+16     	; 0x9b8 <main+0x2ea>
     9a8:	84 34       	cpi	r24, 0x44	; 68
     9aa:	31 f4       	brne	.+12     	; 0x9b8 <main+0x2ea>

			}
			
			Rx_Buffer = 0;
     9ac:	81 e8       	ldi	r24, 0x81	; 129
     9ae:	92 e0       	ldi	r25, 0x02	; 2
			rx = 0;
     9b0:	f2 dd       	rcall	.-1052   	; 0x596 <_ZN11MzMotorBack5MoveDEv>
     9b2:	8d e8       	ldi	r24, 0x8D	; 141
			
			uart0_putc('1');
     9b4:	92 e0       	ldi	r25, 0x02	; 2
     9b6:	6d de       	rcall	.-806    	; 0x692 <_ZN12MzMotorFront5MoveDEv>
     9b8:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <Rx_Buffer>
			uart0_putc(' ');
     9bc:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <rx>
			uart0_putint(BackMotor.RPM);
     9c0:	81 e3       	ldi	r24, 0x31	; 49
     9c2:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     9c6:	80 e2       	ldi	r24, 0x20	; 32
     9c8:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			uart0_putc(' ');
     9cc:	f8 01       	movw	r30, r16
     9ce:	86 81       	ldd	r24, Z+6	; 0x06
			uart0_putint(BackMotor.Controller.setpoint);
     9d0:	97 81       	ldd	r25, Z+7	; 0x07
     9d2:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     9d6:	80 e2       	ldi	r24, 0x20	; 32
     9d8:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>

			uart0_putc(' ');
     9dc:	f8 01       	movw	r30, r16
     9de:	80 8d       	ldd	r24, Z+24	; 0x18
			uart0_putint(BackMotor.Ocr);
     9e0:	91 8d       	ldd	r25, Z+25	; 0x19
     9e2:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     9e6:	80 e2       	ldi	r24, 0x20	; 32
     9e8:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>

			
			uart0_putc(' ');
     9ec:	f8 01       	movw	r30, r16
     9ee:	80 81       	ld	r24, Z
			uart0_putint(FrontMotor.RPM);
     9f0:	91 81       	ldd	r25, Z+1	; 0x01
     9f2:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
     9f6:	80 e2       	ldi	r24, 0x20	; 32
     9f8:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
     9fc:	0f 2e       	mov	r0, r31
     9fe:	fe ec       	ldi	r31, 0xCE	; 206
     a00:	af 2e       	mov	r10, r31
     a02:	f2 e0       	ldi	r31, 0x02	; 2
     a04:	bf 2e       	mov	r11, r31
			uart0_putc(' ');
     a06:	f0 2d       	mov	r31, r0
     a08:	f5 01       	movw	r30, r10
     a0a:	86 81       	ldd	r24, Z+6	; 0x06
			uart0_putint(FrontMotor.Controller.setpoint);
     a0c:	97 81       	ldd	r25, Z+7	; 0x07
     a0e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
			
			uart0_putc(' ');
     a12:	80 e2       	ldi	r24, 0x20	; 32
     a14:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			uart0_putint(FrontMotor.Ocr);
     a18:	f5 01       	movw	r30, r10
     a1a:	80 8d       	ldd	r24, Z+24	; 0x18


			uart0_putc('\n');
     a1c:	91 8d       	ldd	r25, Z+25	; 0x19
     a1e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
			uart0_putc('\r');
     a22:	80 e2       	ldi	r24, 0x20	; 32

			
		}

		Rx_Buffer = 0;		
     a24:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			
		if( Rx_Buffer == 'g')
		{
			if(!StartFlag &&  ( ThrowMotor.Position == HOMEPOSITION ) )
			{
				MagazineBack.VirginityFlag = true;
     a28:	f5 01       	movw	r30, r10
     a2a:	80 81       	ld	r24, Z
				MagazineFront.VirginityFlag = true;
     a2c:	91 81       	ldd	r25, Z+1	; 0x01
     a2e:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <_Z12uart0_putinti>
			{
				PreBackMagazine.StopMotor();
				PreFrontMagazine.StopMotor();
				break;
			}
			ThrowMotor.Operate(0);
     a32:	8a e0       	ldi	r24, 0x0A	; 10
     a34:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
			{
				++Count1;
			}
			if(Count1)
			{
				PreBackMagazine.StopMotor();
     a38:	8d e0       	ldi	r24, 0x0D	; 13
     a3a:	0e 94 f8 0e 	call	0x1df0	; 0x1df0 <_Z10uart0_putch>
				PreFrontMagazine.StopMotor();
     a3e:	10 92 7d 02 	sts	0x027D, r1	; 0x80027d <Rx_Buffer>

	if(1)
	{
		char Count1;
		MzMotorBack  PreBackMagazine;
		MzMotorFront PreFrontMagazine;
     a42:	10 92 7e 02 	sts	0x027E, r1	; 0x80027e <rx>
     a46:	6d ce       	rjmp	.-806    	; 0x722 <main+0x54>
     a48:	81 e0       	ldi	r24, 0x01	; 1


	if(1)
	{
		char Count1;
		MzMotorBack  PreBackMagazine;
     a4a:	80 93 8c 02 	sts	0x028C, r24	; 0x80028c <MagazineBack+0xb>
     a4e:	80 93 98 02 	sts	0x0298, r24	; 0x800298 <MagazineFront+0xb>
	bool MotorA_Return = false;
	bool MotorB_Return = false;
	bool MotorS_Return = false;

	
	initialise();
     a52:	fe ce       	rjmp	.-516    	; 0x850 <main+0x182>
     a54:	60 e0       	ldi	r22, 0x00	; 0

	BackMotor.Initialise();
     a56:	89 e9       	ldi	r24, 0x99	; 153
     a58:	92 e0       	ldi	r25, 0x02	; 2
     a5a:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <_ZN6TMotor7OperateEh>
	FrontMotor.Initialise();
     a5e:	5e ce       	rjmp	.-836    	; 0x71c <main+0x4e>
     a60:	ce 01       	movw	r24, r28
     a62:	0d 96       	adiw	r24, 0x0d	; 13
     a64:	56 dd       	rcall	.-1364   	; 0x512 <_ZN11MzMotorBack9StopMotorEv>


	

	
	MagazineFront.Initialise();
     a66:	ce 01       	movw	r24, r28
     a68:	01 96       	adiw	r24, 0x01	; 1
     a6a:	d1 dd       	rcall	.-1118   	; 0x60e <_ZN12MzMotorFront9StopMotorEv>
     a6c:	ce 01       	movw	r24, r28
	MagazineBack.Initialise();
     a6e:	01 96       	adiw	r24, 0x01	; 1
     a70:	2d de       	rcall	.-934    	; 0x6cc <_ZN12MzMotorFrontD1Ev>
     a72:	ce 01       	movw	r24, r28
     a74:	0d 96       	adiw	r24, 0x0d	; 13
	SideMotor.Initialise();
     a76:	ab dd       	rcall	.-1194   	; 0x5ce <_ZN11MzMotorBackD1Ev>
     a78:	ef db       	rcall	.-2082   	; 0x258 <_Z10initialisev>
     a7a:	86 ef       	ldi	r24, 0xF6	; 246
     a7c:	92 e0       	ldi	r25, 0x02	; 2

	BackMotor.StopMotor();
     a7e:	e8 d1       	rcall	.+976    	; 0xe50 <_ZN9MotorBack10InitialiseEv>
     a80:	8e ec       	ldi	r24, 0xCE	; 206
     a82:	92 e0       	ldi	r25, 0x02	; 2
     a84:	a7 d4       	rcall	.+2382   	; 0x13d4 <_ZN10MotorFront10InitialiseEv>
	FrontMotor.StopMotor();
     a86:	8d e8       	ldi	r24, 0x8D	; 141
     a88:	92 e0       	ldi	r25, 0x02	; 2
     a8a:	a5 dd       	rcall	.-1206   	; 0x5d6 <_ZN12MzMotorFront10InitialiseEv>
     a8c:	81 e8       	ldi	r24, 0x81	; 129
	SideMotor.StopMotor();
     a8e:	92 e0       	ldi	r25, 0x02	; 2
     a90:	26 dd       	rcall	.-1460   	; 0x4de <_ZN11MzMotorBack10InitialiseEv>
     a92:	83 ea       	ldi	r24, 0xA3	; 163
     a94:	92 e0       	ldi	r25, 0x02	; 2

	

	ThrowMotor.StopMotor();
     a96:	1b d5       	rcall	.+2614   	; 0x14ce <_ZN9MotorSide10InitialiseEv>
     a98:	86 ef       	ldi	r24, 0xF6	; 246
     a9a:	92 e0       	ldi	r25, 0x02	; 2
     a9c:	cd d1       	rcall	.+922    	; 0xe38 <_ZN9MotorBack9StopMotorEv>

	sei();
     a9e:	8e ec       	ldi	r24, 0xCE	; 206
	bluetooth_check();
     aa0:	92 e0       	ldi	r25, 0x02	; 2
     aa2:	8c d4       	rcall	.+2328   	; 0x13bc <_ZN10MotorFront9StopMotorEv>
	
	while(1)
	{
	
		
		gLimitFlag = ThrowMotor.LimitFlag;
     aa4:	83 ea       	ldi	r24, 0xA3	; 163
     aa6:	92 e0       	ldi	r25, 0x02	; 2
     aa8:	7f d5       	rcall	.+2814   	; 0x15a8 <_ZN9MotorSide9StopMotorEv>
     aaa:	89 e9       	ldi	r24, 0x99	; 153
     aac:	92 e0       	ldi	r25, 0x02	; 2
     aae:	66 d7       	rcall	.+3788   	; 0x197c <_ZN6TMotor9StopMotorEv>
		
		lcd_putch('F');
		lcd_putch(':');
		
		
		lcd_unum(BackMotor.Controller.setpoint);
     ab0:	78 94       	sei
     ab2:	dc db       	rcall	.-2120   	; 0x26c <_Z15bluetooth_checkv>
		lcd_gotoxy(0,1);

		lcd_putch('S');
		lcd_putch(':');

		lcd_unum(SideMotor.OCR);
     ab4:	0f 2e       	mov	r0, r31
     ab6:	f9 e9       	ldi	r31, 0x99	; 153
     ab8:	ef 2e       	mov	r14, r31
     aba:	f2 e0       	ldi	r31, 0x02	; 2
     abc:	ff 2e       	mov	r15, r31
     abe:	f0 2d       	mov	r31, r0
     ac0:	06 ef       	ldi	r16, 0xF6	; 246
     ac2:	12 e0       	ldi	r17, 0x02	; 2
     ac4:	0f 2e       	mov	r0, r31
     ac6:	f3 ea       	ldi	r31, 0xA3	; 163
     ac8:	cf 2e       	mov	r12, r31
     aca:	f2 e0       	ldi	r31, 0x02	; 2
     acc:	df 2e       	mov	r13, r31
     ace:	f0 2d       	mov	r31, r0
     ad0:	28 ce       	rjmp	.-944    	; 0x722 <main+0x54>

00000ad2 <__vector_3>:




ISR(MOTORBACK_INT_vect)
{
     ad2:	1f 92       	push	r1
     ad4:	0f 92       	push	r0
     ad6:	0f b6       	in	r0, 0x3f	; 63
     ad8:	0f 92       	push	r0
     ada:	11 24       	eor	r1, r1
     adc:	0b b6       	in	r0, 0x3b	; 59
     ade:	0f 92       	push	r0
     ae0:	8f 93       	push	r24
     ae2:	9f 93       	push	r25
     ae4:	af 93       	push	r26
     ae6:	bf 93       	push	r27
     ae8:	ef 93       	push	r30
     aea:	ff 93       	push	r31
	BackMotor.Count   = READVALUE(MOTORBACK_TCNT);
     aec:	a4 e9       	ldi	r26, 0x94	; 148
     aee:	b0 e0       	ldi	r27, 0x00	; 0
     af0:	8d 91       	ld	r24, X+
     af2:	9c 91       	ld	r25, X
     af4:	11 97       	sbiw	r26, 0x01	; 1
     af6:	e6 ef       	ldi	r30, 0xF6	; 246
     af8:	f2 e0       	ldi	r31, 0x02	; 2
     afa:	95 83       	std	Z+5, r25	; 0x05
     afc:	84 83       	std	Z+4, r24	; 0x04
	MOTORBACK_TCNT = 0;
     afe:	11 96       	adiw	r26, 0x01	; 1
     b00:	1c 92       	st	X, r1
     b02:	1e 92       	st	-X, r1
	BackMotor.IntFlag = true;
     b04:	81 e0       	ldi	r24, 0x01	; 1
     b06:	82 83       	std	Z+2, r24	; 0x02
}
     b08:	ff 91       	pop	r31
     b0a:	ef 91       	pop	r30
     b0c:	bf 91       	pop	r27
     b0e:	af 91       	pop	r26
     b10:	9f 91       	pop	r25
     b12:	8f 91       	pop	r24
     b14:	0f 90       	pop	r0
     b16:	0b be       	out	0x3b, r0	; 59
     b18:	0f 90       	pop	r0
     b1a:	0f be       	out	0x3f, r0	; 63
     b1c:	0f 90       	pop	r0
     b1e:	1f 90       	pop	r1
     b20:	18 95       	reti

00000b22 <__vector_35>:


ISR(MOTORBACK_TIMER_OVERFLOW_VECT)
{
     b22:	1f 92       	push	r1
     b24:	0f 92       	push	r0
     b26:	0f b6       	in	r0, 0x3f	; 63
     b28:	0f 92       	push	r0
     b2a:	11 24       	eor	r1, r1
	BackMotor.RPM = 0;
     b2c:	10 92 fd 02 	sts	0x02FD, r1	; 0x8002fd <BackMotor+0x7>
     b30:	10 92 fc 02 	sts	0x02FC, r1	; 0x8002fc <BackMotor+0x6>
}
     b34:	0f 90       	pop	r0
     b36:	0f be       	out	0x3f, r0	; 63
     b38:	0f 90       	pop	r0
     b3a:	1f 90       	pop	r1
     b3c:	18 95       	reti

00000b3e <__vector_2>:

ISR(SIDEMOTOR_INT_vect)
{
     b3e:	1f 92       	push	r1
     b40:	0f 92       	push	r0
     b42:	0f b6       	in	r0, 0x3f	; 63
     b44:	0f 92       	push	r0
     b46:	11 24       	eor	r1, r1
     b48:	0b b6       	in	r0, 0x3b	; 59
     b4a:	0f 92       	push	r0
     b4c:	8f 93       	push	r24
     b4e:	9f 93       	push	r25
     b50:	af 93       	push	r26
     b52:	bf 93       	push	r27
     b54:	ef 93       	push	r30
     b56:	ff 93       	push	r31
	SideMotor.Count   = READVALUE(SIDEMOTOR_TCNT);
     b58:	a4 ea       	ldi	r26, 0xA4	; 164
     b5a:	b0 e0       	ldi	r27, 0x00	; 0
     b5c:	8d 91       	ld	r24, X+
     b5e:	9c 91       	ld	r25, X
     b60:	11 97       	sbiw	r26, 0x01	; 1
     b62:	e3 ea       	ldi	r30, 0xA3	; 163
     b64:	f2 e0       	ldi	r31, 0x02	; 2
     b66:	96 83       	std	Z+6, r25	; 0x06
     b68:	85 83       	std	Z+5, r24	; 0x05
	SIDEMOTOR_TCNT = 0;
     b6a:	11 96       	adiw	r26, 0x01	; 1
     b6c:	1c 92       	st	X, r1
     b6e:	1e 92       	st	-X, r1
	SideMotor.IntFlag = true;
     b70:	81 e0       	ldi	r24, 0x01	; 1
     b72:	82 83       	std	Z+2, r24	; 0x02
}
     b74:	ff 91       	pop	r31
     b76:	ef 91       	pop	r30
     b78:	bf 91       	pop	r27
     b7a:	af 91       	pop	r26
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	0f 90       	pop	r0
     b82:	0b be       	out	0x3b, r0	; 59
     b84:	0f 90       	pop	r0
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	0f 90       	pop	r0
     b8a:	1f 90       	pop	r1
     b8c:	18 95       	reti

00000b8e <__vector_45>:


ISR(SIDEMOTOR_TIMER_OVERFLOW_VECT)
{
     b8e:	1f 92       	push	r1
     b90:	0f 92       	push	r0
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	0f 92       	push	r0
     b96:	11 24       	eor	r1, r1
	SideMotor.RPM = 0;
     b98:	10 92 ab 02 	sts	0x02AB, r1	; 0x8002ab <SideMotor+0x8>
     b9c:	10 92 aa 02 	sts	0x02AA, r1	; 0x8002aa <SideMotor+0x7>
}
     ba0:	0f 90       	pop	r0
     ba2:	0f be       	out	0x3f, r0	; 63
     ba4:	0f 90       	pop	r0
     ba6:	1f 90       	pop	r1
     ba8:	18 95       	reti

00000baa <__vector_20>:



ISR(MOTORFRONT_TIMER_OVERFLOW_VECT)
{
     baa:	1f 92       	push	r1
     bac:	0f 92       	push	r0
     bae:	0f b6       	in	r0, 0x3f	; 63
     bb0:	0f 92       	push	r0
     bb2:	11 24       	eor	r1, r1
	FrontMotor.RPM = 0;
     bb4:	10 92 d5 02 	sts	0x02D5, r1	; 0x8002d5 <FrontMotor+0x7>
     bb8:	10 92 d4 02 	sts	0x02D4, r1	; 0x8002d4 <FrontMotor+0x6>
}
     bbc:	0f 90       	pop	r0
     bbe:	0f be       	out	0x3f, r0	; 63
     bc0:	0f 90       	pop	r0
     bc2:	1f 90       	pop	r1
     bc4:	18 95       	reti

00000bc6 <__vector_4>:


ISR(MOTORFRONT_INT_vect)
{
     bc6:	1f 92       	push	r1
     bc8:	0f 92       	push	r0
     bca:	0f b6       	in	r0, 0x3f	; 63
     bcc:	0f 92       	push	r0
     bce:	11 24       	eor	r1, r1
     bd0:	0b b6       	in	r0, 0x3b	; 59
     bd2:	0f 92       	push	r0
     bd4:	8f 93       	push	r24
     bd6:	9f 93       	push	r25
     bd8:	af 93       	push	r26
     bda:	bf 93       	push	r27
     bdc:	ef 93       	push	r30
     bde:	ff 93       	push	r31
	FrontMotor.Count   = READVALUE(MOTORFRONT_TCNT);
     be0:	a4 e8       	ldi	r26, 0x84	; 132
     be2:	b0 e0       	ldi	r27, 0x00	; 0
     be4:	8d 91       	ld	r24, X+
     be6:	9c 91       	ld	r25, X
     be8:	11 97       	sbiw	r26, 0x01	; 1
     bea:	ee ec       	ldi	r30, 0xCE	; 206
     bec:	f2 e0       	ldi	r31, 0x02	; 2
     bee:	95 83       	std	Z+5, r25	; 0x05
     bf0:	84 83       	std	Z+4, r24	; 0x04
	MOTORFRONT_TCNT = 0;
     bf2:	11 96       	adiw	r26, 0x01	; 1
     bf4:	1c 92       	st	X, r1
     bf6:	1e 92       	st	-X, r1
	FrontMotor.IntFlag = true;
     bf8:	81 e0       	ldi	r24, 0x01	; 1
     bfa:	82 83       	std	Z+2, r24	; 0x02
}
     bfc:	ff 91       	pop	r31
     bfe:	ef 91       	pop	r30
     c00:	bf 91       	pop	r27
     c02:	af 91       	pop	r26
     c04:	9f 91       	pop	r25
     c06:	8f 91       	pop	r24
     c08:	0f 90       	pop	r0
     c0a:	0b be       	out	0x3b, r0	; 59
     c0c:	0f 90       	pop	r0
     c0e:	0f be       	out	0x3f, r0	; 63
     c10:	0f 90       	pop	r0
     c12:	1f 90       	pop	r1
     c14:	18 95       	reti

00000c16 <__vector_23>:


ISR(PID_TIMER_OVERFLOW_vect)
{
     c16:	1f 92       	push	r1
     c18:	0f 92       	push	r0
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	0f 92       	push	r0
     c1e:	11 24       	eor	r1, r1
     c20:	0b b6       	in	r0, 0x3b	; 59
     c22:	0f 92       	push	r0
     c24:	8f 93       	push	r24
     c26:	ef 93       	push	r30
     c28:	ff 93       	push	r31
	++BackMotor.Controller.timer;
     c2a:	e6 ef       	ldi	r30, 0xF6	; 246
     c2c:	f2 e0       	ldi	r31, 0x02	; 2
     c2e:	87 89       	ldd	r24, Z+23	; 0x17
     c30:	8f 5f       	subi	r24, 0xFF	; 255
     c32:	87 8b       	std	Z+23, r24	; 0x17
	++FrontMotor.Controller.timer;
     c34:	ee ec       	ldi	r30, 0xCE	; 206
     c36:	f2 e0       	ldi	r31, 0x02	; 2
     c38:	87 89       	ldd	r24, Z+23	; 0x17
     c3a:	8f 5f       	subi	r24, 0xFF	; 255
     c3c:	87 8b       	std	Z+23, r24	; 0x17
	if(++SideMotor.TimerPrescalar > 5)
     c3e:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <SideMotor+0x4>
     c42:	8f 5f       	subi	r24, 0xFF	; 255
     c44:	86 30       	cpi	r24, 0x06	; 6
     c46:	18 f4       	brcc	.+6      	; 0xc4e <__vector_23+0x38>
     c48:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <SideMotor+0x4>
     c4c:	06 c0       	rjmp	.+12     	; 0xc5a <__vector_23+0x44>
	{
		SideMotor.TimerPrescalar = 0;
     c4e:	e3 ea       	ldi	r30, 0xA3	; 163
     c50:	f2 e0       	ldi	r31, 0x02	; 2
     c52:	14 82       	std	Z+4, r1	; 0x04
		++SideMotor.Controller.timer;
     c54:	82 8d       	ldd	r24, Z+26	; 0x1a
     c56:	8f 5f       	subi	r24, 0xFF	; 255
     c58:	82 8f       	std	Z+26, r24	; 0x1a
	}
}
     c5a:	ff 91       	pop	r31
     c5c:	ef 91       	pop	r30
     c5e:	8f 91       	pop	r24
     c60:	0f 90       	pop	r0
     c62:	0b be       	out	0x3b, r0	; 59
     c64:	0f 90       	pop	r0
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	0f 90       	pop	r0
     c6a:	1f 90       	pop	r1
     c6c:	18 95       	reti

00000c6e <__vector_6>:


ISR(EN_FRONT_INT_vect)
{
     c6e:	1f 92       	push	r1
     c70:	0f 92       	push	r0
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	0f 92       	push	r0
     c76:	11 24       	eor	r1, r1
     c78:	0b b6       	in	r0, 0x3b	; 59
     c7a:	0f 92       	push	r0
     c7c:	8f 93       	push	r24
     c7e:	9f 93       	push	r25
     c80:	af 93       	push	r26
     c82:	bf 93       	push	r27
     c84:	ef 93       	push	r30
     c86:	ff 93       	push	r31
	
	if(!READ(ENCODERFRONTB))
     c88:	31 99       	sbic	0x06, 1	; 6
     c8a:	10 c0       	rjmp	.+32     	; 0xcac <__vector_6+0x3e>
	{
		MagazineFront.Encoder.UpFlag = true;
     c8c:	ed e8       	ldi	r30, 0x8D	; 141
     c8e:	f2 e0       	ldi	r31, 0x02	; 2
     c90:	81 e0       	ldi	r24, 0x01	; 1
     c92:	82 87       	std	Z+10, r24	; 0x0a
		++MagazineFront.Encoder.Count;
     c94:	86 81       	ldd	r24, Z+6	; 0x06
     c96:	97 81       	ldd	r25, Z+7	; 0x07
     c98:	a0 85       	ldd	r26, Z+8	; 0x08
     c9a:	b1 85       	ldd	r27, Z+9	; 0x09
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	a1 1d       	adc	r26, r1
     ca0:	b1 1d       	adc	r27, r1
     ca2:	86 83       	std	Z+6, r24	; 0x06
     ca4:	97 83       	std	Z+7, r25	; 0x07
     ca6:	a0 87       	std	Z+8, r26	; 0x08
     ca8:	b1 87       	std	Z+9, r27	; 0x09
     caa:	0e c0       	rjmp	.+28     	; 0xcc8 <__vector_6+0x5a>
	}
	else
	{
		MagazineFront.Encoder.UpFlag = false;
     cac:	ed e8       	ldi	r30, 0x8D	; 141
     cae:	f2 e0       	ldi	r31, 0x02	; 2
     cb0:	12 86       	std	Z+10, r1	; 0x0a
		--MagazineFront.Encoder.Count;
     cb2:	86 81       	ldd	r24, Z+6	; 0x06
     cb4:	97 81       	ldd	r25, Z+7	; 0x07
     cb6:	a0 85       	ldd	r26, Z+8	; 0x08
     cb8:	b1 85       	ldd	r27, Z+9	; 0x09
     cba:	01 97       	sbiw	r24, 0x01	; 1
     cbc:	a1 09       	sbc	r26, r1
     cbe:	b1 09       	sbc	r27, r1
     cc0:	86 83       	std	Z+6, r24	; 0x06
     cc2:	97 83       	std	Z+7, r25	; 0x07
     cc4:	a0 87       	std	Z+8, r26	; 0x08
     cc6:	b1 87       	std	Z+9, r27	; 0x09
	}


}
     cc8:	ff 91       	pop	r31
     cca:	ef 91       	pop	r30
     ccc:	bf 91       	pop	r27
     cce:	af 91       	pop	r26
     cd0:	9f 91       	pop	r25
     cd2:	8f 91       	pop	r24
     cd4:	0f 90       	pop	r0
     cd6:	0b be       	out	0x3b, r0	; 59
     cd8:	0f 90       	pop	r0
     cda:	0f be       	out	0x3f, r0	; 63
     cdc:	0f 90       	pop	r0
     cde:	1f 90       	pop	r1
     ce0:	18 95       	reti

00000ce2 <__vector_5>:


ISR(EN_BACK_INT_vect)
{	
     ce2:	1f 92       	push	r1
     ce4:	0f 92       	push	r0
     ce6:	0f b6       	in	r0, 0x3f	; 63
     ce8:	0f 92       	push	r0
     cea:	11 24       	eor	r1, r1
     cec:	0b b6       	in	r0, 0x3b	; 59
     cee:	0f 92       	push	r0
     cf0:	8f 93       	push	r24
     cf2:	9f 93       	push	r25
     cf4:	af 93       	push	r26
     cf6:	bf 93       	push	r27
     cf8:	ef 93       	push	r30
     cfa:	ff 93       	push	r31
	if(READ(ENCODERBACKB))
     cfc:	33 9b       	sbis	0x06, 3	; 6
     cfe:	10 c0       	rjmp	.+32     	; 0xd20 <__vector_5+0x3e>
	{
		MagazineBack.Encoder.UpFlag = true;
     d00:	e1 e8       	ldi	r30, 0x81	; 129
     d02:	f2 e0       	ldi	r31, 0x02	; 2
     d04:	81 e0       	ldi	r24, 0x01	; 1
     d06:	84 83       	std	Z+4, r24	; 0x04
		++MagazineBack.Encoder.Count;
     d08:	80 81       	ld	r24, Z
     d0a:	91 81       	ldd	r25, Z+1	; 0x01
     d0c:	a2 81       	ldd	r26, Z+2	; 0x02
     d0e:	b3 81       	ldd	r27, Z+3	; 0x03
     d10:	01 96       	adiw	r24, 0x01	; 1
     d12:	a1 1d       	adc	r26, r1
     d14:	b1 1d       	adc	r27, r1
     d16:	80 83       	st	Z, r24
     d18:	91 83       	std	Z+1, r25	; 0x01
     d1a:	a2 83       	std	Z+2, r26	; 0x02
     d1c:	b3 83       	std	Z+3, r27	; 0x03
     d1e:	0e c0       	rjmp	.+28     	; 0xd3c <__vector_5+0x5a>
	}
	else
	{
		MagazineBack.Encoder.UpFlag = false;
     d20:	e1 e8       	ldi	r30, 0x81	; 129
     d22:	f2 e0       	ldi	r31, 0x02	; 2
     d24:	14 82       	std	Z+4, r1	; 0x04
		--MagazineBack.Encoder.Count;
     d26:	80 81       	ld	r24, Z
     d28:	91 81       	ldd	r25, Z+1	; 0x01
     d2a:	a2 81       	ldd	r26, Z+2	; 0x02
     d2c:	b3 81       	ldd	r27, Z+3	; 0x03
     d2e:	01 97       	sbiw	r24, 0x01	; 1
     d30:	a1 09       	sbc	r26, r1
     d32:	b1 09       	sbc	r27, r1
     d34:	80 83       	st	Z, r24
     d36:	91 83       	std	Z+1, r25	; 0x01
     d38:	a2 83       	std	Z+2, r26	; 0x02
     d3a:	b3 83       	std	Z+3, r27	; 0x03
	}

	

}
     d3c:	ff 91       	pop	r31
     d3e:	ef 91       	pop	r30
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	0f 90       	pop	r0
     d4a:	0b be       	out	0x3b, r0	; 59
     d4c:	0f 90       	pop	r0
     d4e:	0f be       	out	0x3f, r0	; 63
     d50:	0f 90       	pop	r0
     d52:	1f 90       	pop	r1
     d54:	18 95       	reti

00000d56 <_GLOBAL__sub_I_LandingData>:
MotorBack		BackMotor;
MotorFront		FrontMotor;
MotorSide		SideMotor;

TMotor			ThrowMotor;
MzMotorFront	MagazineFront;
     d56:	8d e8       	ldi	r24, 0x8D	; 141
     d58:	92 e0       	ldi	r25, 0x02	; 2
     d5a:	b7 dc       	rcall	.-1682   	; 0x6ca <_ZN12MzMotorFrontC1Ev>
MzMotorBack		MagazineBack;
     d5c:	81 e8       	ldi	r24, 0x81	; 129
     d5e:	92 e0       	ldi	r25, 0x02	; 2
     d60:	35 cc       	rjmp	.-1942   	; 0x5cc <_ZN11MzMotorBackC1Ev>
     d62:	08 95       	ret

00000d64 <_GLOBAL__sub_D_LandingData>:
     d64:	81 e8       	ldi	r24, 0x81	; 129
     d66:	92 e0       	ldi	r25, 0x02	; 2
     d68:	32 dc       	rcall	.-1948   	; 0x5ce <_ZN11MzMotorBackD1Ev>
MotorBack		BackMotor;
MotorFront		FrontMotor;
MotorSide		SideMotor;

TMotor			ThrowMotor;
MzMotorFront	MagazineFront;
     d6a:	8d e8       	ldi	r24, 0x8D	; 141
     d6c:	92 e0       	ldi	r25, 0x02	; 2
     d6e:	ae cc       	rjmp	.-1700   	; 0x6cc <_ZN12MzMotorFrontD1Ev>
     d70:	08 95       	ret

00000d72 <_ZN9MotorBack11InitCounterEv>:
	SetOcrValue(Ocr - 40);
}

void MotorBack::ClearCounter()
{
	REGISTER_CLEAR(M_TCNT);
     d72:	e1 e7       	ldi	r30, 0x71	; 113
     d74:	f0 e0       	ldi	r31, 0x00	; 0
     d76:	80 81       	ld	r24, Z
     d78:	81 60       	ori	r24, 0x01	; 1
     d7a:	80 83       	st	Z, r24
     d7c:	e1 e9       	ldi	r30, 0x91	; 145
     d7e:	f0 e0       	ldi	r31, 0x00	; 0
     d80:	80 81       	ld	r24, Z
     d82:	83 60       	ori	r24, 0x03	; 3
     d84:	80 83       	st	Z, r24
     d86:	08 95       	ret

00000d88 <_ZN9MotorBack7InitPWMEv>:
     d88:	e7 e0       	ldi	r30, 0x07	; 7
     d8a:	f1 e0       	ldi	r31, 0x01	; 1
     d8c:	80 81       	ld	r24, Z
     d8e:	80 64       	ori	r24, 0x40	; 64
     d90:	80 83       	st	Z, r24
     d92:	80 81       	ld	r24, Z
     d94:	80 68       	ori	r24, 0x80	; 128
     d96:	80 83       	st	Z, r24
     d98:	ea e0       	ldi	r30, 0x0A	; 10
     d9a:	f1 e0       	ldi	r31, 0x01	; 1
     d9c:	80 81       	ld	r24, Z
     d9e:	80 62       	ori	r24, 0x20	; 32
     da0:	80 83       	st	Z, r24
     da2:	e0 e2       	ldi	r30, 0x20	; 32
     da4:	f1 e0       	ldi	r31, 0x01	; 1
     da6:	80 81       	ld	r24, Z
     da8:	8a 60       	ori	r24, 0x0A	; 10
     daa:	80 83       	st	Z, r24
     dac:	e1 e2       	ldi	r30, 0x21	; 33
     dae:	f1 e0       	ldi	r31, 0x01	; 1
     db0:	80 81       	ld	r24, Z
     db2:	89 61       	ori	r24, 0x19	; 25
     db4:	80 83       	st	Z, r24
     db6:	8f e9       	ldi	r24, 0x9F	; 159
     db8:	9f e0       	ldi	r25, 0x0F	; 15
     dba:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
     dbe:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
     dc2:	08 95       	ret

00000dc4 <_ZN9MotorBack13InitInterruptEv>:
     dc4:	52 98       	cbi	0x0a, 2	; 10
     dc6:	5a 9a       	sbi	0x0b, 2	; 11
     dc8:	e9 e6       	ldi	r30, 0x69	; 105
     dca:	f0 e0       	ldi	r31, 0x00	; 0
     dcc:	80 81       	ld	r24, Z
     dce:	80 63       	ori	r24, 0x30	; 48
     dd0:	80 83       	st	Z, r24
     dd2:	ea 9a       	sbi	0x1d, 2	; 29
     dd4:	e2 9a       	sbi	0x1c, 2	; 28
     dd6:	08 95       	ret

00000dd8 <_ZN9MotorBack19SetForwardDirectionEv>:
     dd8:	e8 e0       	ldi	r30, 0x08	; 8
     dda:	f1 e0       	ldi	r31, 0x01	; 1
     ddc:	80 81       	ld	r24, Z
     dde:	80 64       	ori	r24, 0x40	; 64
     de0:	80 83       	st	Z, r24
     de2:	80 81       	ld	r24, Z
     de4:	8f 77       	andi	r24, 0x7F	; 127
     de6:	80 83       	st	Z, r24
     de8:	08 95       	ret

00000dea <_ZN9MotorBack11SetOcrValueEi>:
     dea:	0f 93       	push	r16
     dec:	1f 93       	push	r17
     dee:	cf 93       	push	r28
     df0:	df 93       	push	r29
     df2:	ec 01       	movw	r28, r24
     df4:	8b 01       	movw	r16, r22
     df6:	77 23       	and	r23, r23
     df8:	84 f0       	brlt	.+32     	; 0xe1a <_ZN9MotorBack11SetOcrValueEi+0x30>
     dfa:	ee df       	rcall	.-36     	; 0xdd8 <_ZN9MotorBack19SetForwardDirectionEv>
     dfc:	19 83       	std	Y+1, r17	; 0x01
     dfe:	08 83       	st	Y, r16
     e00:	00 3f       	cpi	r16, 0xF0	; 240
     e02:	1a 40       	sbci	r17, 0x0A	; 10
     e04:	2c f0       	brlt	.+10     	; 0xe10 <_ZN9MotorBack11SetOcrValueEi+0x26>
     e06:	80 ef       	ldi	r24, 0xF0	; 240
     e08:	9a e0       	ldi	r25, 0x0A	; 10
     e0a:	99 83       	std	Y+1, r25	; 0x01
     e0c:	88 83       	st	Y, r24
     e0e:	09 c0       	rjmp	.+18     	; 0xe22 <_ZN9MotorBack11SetOcrValueEi+0x38>
     e10:	88 81       	ld	r24, Y
     e12:	99 81       	ldd	r25, Y+1	; 0x01
     e14:	89 37       	cpi	r24, 0x79	; 121
     e16:	91 05       	cpc	r25, r1
     e18:	24 f4       	brge	.+8      	; 0xe22 <_ZN9MotorBack11SetOcrValueEi+0x38>
     e1a:	88 e7       	ldi	r24, 0x78	; 120
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	99 83       	std	Y+1, r25	; 0x01
     e20:	88 83       	st	Y, r24
     e22:	88 81       	ld	r24, Y
     e24:	99 81       	ldd	r25, Y+1	; 0x01
     e26:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__TEXT_REGION_LENGTH__+0x70012d>
     e2a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__TEXT_REGION_LENGTH__+0x70012c>
     e2e:	df 91       	pop	r29
     e30:	cf 91       	pop	r28
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	08 95       	ret

00000e38 <_ZN9MotorBack9StopMotorEv>:
     e38:	e8 e0       	ldi	r30, 0x08	; 8
     e3a:	f1 e0       	ldi	r31, 0x01	; 1
     e3c:	20 81       	ld	r18, Z
     e3e:	20 64       	ori	r18, 0x40	; 64
     e40:	20 83       	st	Z, r18
     e42:	20 81       	ld	r18, Z
     e44:	20 68       	ori	r18, 0x80	; 128
     e46:	20 83       	st	Z, r18
     e48:	68 e7       	ldi	r22, 0x78	; 120
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	ce cf       	rjmp	.-100    	; 0xdea <_ZN9MotorBack11SetOcrValueEi>
     e4e:	08 95       	ret

00000e50 <_ZN9MotorBack10InitialiseEv>:
     e50:	af 92       	push	r10
     e52:	bf 92       	push	r11
     e54:	cf 92       	push	r12
     e56:	df 92       	push	r13
     e58:	ef 92       	push	r14
     e5a:	ff 92       	push	r15
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	ec 01       	movw	r28, r24
     e66:	90 df       	rcall	.-224    	; 0xd88 <_ZN9MotorBack7InitPWMEv>
     e68:	ce 01       	movw	r24, r28
     e6a:	83 df       	rcall	.-250    	; 0xd72 <_ZN9MotorBack11InitCounterEv>
     e6c:	ce 01       	movw	r24, r28
     e6e:	aa df       	rcall	.-172    	; 0xdc4 <_ZN9MotorBack13InitInterruptEv>
     e70:	5e 01       	movw	r10, r28
     e72:	8b e0       	ldi	r24, 0x0B	; 11
     e74:	a8 0e       	add	r10, r24
     e76:	b1 1c       	adc	r11, r1
     e78:	c5 01       	movw	r24, r10
     e7a:	7c d6       	rcall	.+3320   	; 0x1b74 <_ZN3PID10InitialiseEv>
     e7c:	1b 82       	std	Y+3, r1	; 0x03
     e7e:	0f 2e       	mov	r0, r31
     e80:	fa e0       	ldi	r31, 0x0A	; 10
     e82:	cf 2e       	mov	r12, r31
     e84:	f7 ed       	ldi	r31, 0xD7	; 215
     e86:	df 2e       	mov	r13, r31
     e88:	f3 ee       	ldi	r31, 0xE3	; 227
     e8a:	ef 2e       	mov	r14, r31
     e8c:	ff e3       	ldi	r31, 0x3F	; 63
     e8e:	ff 2e       	mov	r15, r31
     e90:	f0 2d       	mov	r31, r0
     e92:	00 e0       	ldi	r16, 0x00	; 0
     e94:	10 e0       	ldi	r17, 0x00	; 0
     e96:	98 01       	movw	r18, r16
     e98:	49 e2       	ldi	r20, 0x29	; 41
     e9a:	5c e5       	ldi	r21, 0x5C	; 92
     e9c:	6f e0       	ldi	r22, 0x0F	; 15
     e9e:	7e e3       	ldi	r23, 0x3E	; 62
     ea0:	c5 01       	movw	r24, r10
     ea2:	7c d6       	rcall	.+3320   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
     ea4:	ce 01       	movw	r24, r28
     ea6:	98 df       	rcall	.-208    	; 0xdd8 <_ZN9MotorBack19SetForwardDirectionEv>
     ea8:	64 e1       	ldi	r22, 0x14	; 20
     eaa:	70 e0       	ldi	r23, 0x00	; 0
     eac:	ce 01       	movw	r24, r28
     eae:	9d df       	rcall	.-198    	; 0xdea <_ZN9MotorBack11SetOcrValueEi>
     eb0:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     eb4:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     eb8:	19 86       	std	Y+9, r1	; 0x09
     eba:	18 86       	std	Y+8, r1	; 0x08
     ebc:	df 91       	pop	r29
     ebe:	cf 91       	pop	r28
     ec0:	1f 91       	pop	r17
     ec2:	0f 91       	pop	r16
     ec4:	ff 90       	pop	r15
     ec6:	ef 90       	pop	r14
     ec8:	df 90       	pop	r13
     eca:	cf 90       	pop	r12
     ecc:	bf 90       	pop	r11
     ece:	af 90       	pop	r10
     ed0:	08 95       	ret

00000ed2 <_ZN9MotorBack7OperateERhS0_>:
}


bool MotorBack::Operate(unsigned char &rx, unsigned char &Command)
{
     ed2:	6f 92       	push	r6
     ed4:	7f 92       	push	r7
     ed6:	8f 92       	push	r8
     ed8:	9f 92       	push	r9
     eda:	af 92       	push	r10
     edc:	bf 92       	push	r11
     ede:	cf 92       	push	r12
     ee0:	df 92       	push	r13
     ee2:	ef 92       	push	r14
     ee4:	ff 92       	push	r15
     ee6:	0f 93       	push	r16
     ee8:	1f 93       	push	r17
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	ec 01       	movw	r28, r24
     ef0:	3b 01       	movw	r6, r22
     ef2:	4a 01       	movw	r8, r20
	
	if(IntFlag)
     ef4:	8a 81       	ldd	r24, Y+2	; 0x02
     ef6:	88 23       	and	r24, r24
     ef8:	51 f1       	breq	.+84     	; 0xf4e <_ZN9MotorBack7OperateERhS0_+0x7c>
	{
		Overflow = 0;
     efa:	1a 86       	std	Y+10, r1	; 0x0a

		LastRPM = RPM;
     efc:	0e 81       	ldd	r16, Y+6	; 0x06
     efe:	1f 81       	ldd	r17, Y+7	; 0x07
     f00:	19 87       	std	Y+9, r17	; 0x09
     f02:	08 87       	std	Y+8, r16	; 0x08
		if(Count != 0)
     f04:	6c 81       	ldd	r22, Y+4	; 0x04
     f06:	7d 81       	ldd	r23, Y+5	; 0x05
     f08:	61 15       	cp	r22, r1
     f0a:	71 05       	cpc	r23, r1
     f0c:	f9 f0       	breq	.+62     	; 0xf4c <_ZN9MotorBack7OperateERhS0_+0x7a>
		{
			RPM = float(15000000.f)/float(Count);
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	0e 94 45 11 	call	0x228a	; 0x228a <__floatunsisf>
     f16:	9b 01       	movw	r18, r22
     f18:	ac 01       	movw	r20, r24
     f1a:	60 ec       	ldi	r22, 0xC0	; 192
     f1c:	71 ee       	ldi	r23, 0xE1	; 225
     f1e:	84 e6       	ldi	r24, 0x64	; 100
     f20:	9b e4       	ldi	r25, 0x4B	; 75
     f22:	0e 94 ac 10 	call	0x2158	; 0x2158 <__divsf3>
     f26:	0e 94 19 11 	call	0x2232	; 0x2232 <__fixunssfsi>
     f2a:	7f 83       	std	Y+7, r23	; 0x07
     f2c:	6e 83       	std	Y+6, r22	; 0x06
		}
		
		if( abs(LastRPM - RPM) > 1000 )
     f2e:	98 01       	movw	r18, r16
     f30:	26 1b       	sub	r18, r22
     f32:	37 0b       	sbc	r19, r23
     f34:	c9 01       	movw	r24, r18
     f36:	99 23       	and	r25, r25
     f38:	24 f4       	brge	.+8      	; 0xf42 <_ZN9MotorBack7OperateERhS0_+0x70>
     f3a:	88 27       	eor	r24, r24
     f3c:	99 27       	eor	r25, r25
     f3e:	82 1b       	sub	r24, r18
     f40:	93 0b       	sbc	r25, r19
     f42:	89 3e       	cpi	r24, 0xE9	; 233
     f44:	93 40       	sbci	r25, 0x03	; 3
     f46:	14 f0       	brlt	.+4      	; 0xf4c <_ZN9MotorBack7OperateERhS0_+0x7a>
		{
			RPM = LastRPM;
     f48:	1f 83       	std	Y+7, r17	; 0x07
     f4a:	0e 83       	std	Y+6, r16	; 0x06
		}

		
		IntFlag = false;
     f4c:	1a 82       	std	Y+2, r1	; 0x02
	}
	
	if(LowSpeedFlag)
     f4e:	8b 81       	ldd	r24, Y+3	; 0x03
     f50:	88 23       	and	r24, r24
     f52:	d9 f0       	breq	.+54     	; 0xf8a <_ZN9MotorBack7OperateERhS0_+0xb8>
	{
		if(Controller.setpoint > UTP)
     f54:	88 8d       	ldd	r24, Y+24	; 0x18
     f56:	99 8d       	ldd	r25, Y+25	; 0x19
     f58:	8d 3f       	cpi	r24, 0xFD	; 253
     f5a:	98 40       	sbci	r25, 0x08	; 8
     f5c:	8c f1       	brlt	.+98     	; 0xfc0 <_ZN9MotorBack7OperateERhS0_+0xee>
		{
			LowSpeedFlag = false;
     f5e:	1b 82       	std	Y+3, r1	; 0x03
			Controller.Set_PID(.24, 0, 8.74);
     f60:	0f 2e       	mov	r0, r31
     f62:	fa e0       	ldi	r31, 0x0A	; 10
     f64:	cf 2e       	mov	r12, r31
     f66:	f7 ed       	ldi	r31, 0xD7	; 215
     f68:	df 2e       	mov	r13, r31
     f6a:	fb e0       	ldi	r31, 0x0B	; 11
     f6c:	ef 2e       	mov	r14, r31
     f6e:	f1 e4       	ldi	r31, 0x41	; 65
     f70:	ff 2e       	mov	r15, r31
     f72:	f0 2d       	mov	r31, r0
     f74:	00 e0       	ldi	r16, 0x00	; 0
     f76:	10 e0       	ldi	r17, 0x00	; 0
     f78:	98 01       	movw	r18, r16
     f7a:	4f e8       	ldi	r20, 0x8F	; 143
     f7c:	52 ec       	ldi	r21, 0xC2	; 194
     f7e:	65 e7       	ldi	r22, 0x75	; 117
     f80:	7e e3       	ldi	r23, 0x3E	; 62
     f82:	ce 01       	movw	r24, r28
     f84:	0b 96       	adiw	r24, 0x0b	; 11
     f86:	0a d6       	rcall	.+3092   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
     f88:	1b c0       	rjmp	.+54     	; 0xfc0 <_ZN9MotorBack7OperateERhS0_+0xee>
		}
	}
	else
	{
		if(Controller.setpoint < LTP)
     f8a:	88 8d       	ldd	r24, Y+24	; 0x18
     f8c:	99 8d       	ldd	r25, Y+25	; 0x19
     f8e:	80 3d       	cpi	r24, 0xD0	; 208
     f90:	97 40       	sbci	r25, 0x07	; 7
     f92:	b4 f4       	brge	.+44     	; 0xfc0 <_ZN9MotorBack7OperateERhS0_+0xee>
		{
			LowSpeedFlag = true;
     f94:	81 e0       	ldi	r24, 0x01	; 1
     f96:	8b 83       	std	Y+3, r24	; 0x03
			Controller.Set_PID(0.14, 0, 1.78);
     f98:	0f 2e       	mov	r0, r31
     f9a:	fa e0       	ldi	r31, 0x0A	; 10
     f9c:	cf 2e       	mov	r12, r31
     f9e:	f7 ed       	ldi	r31, 0xD7	; 215
     fa0:	df 2e       	mov	r13, r31
     fa2:	f3 ee       	ldi	r31, 0xE3	; 227
     fa4:	ef 2e       	mov	r14, r31
     fa6:	ff e3       	ldi	r31, 0x3F	; 63
     fa8:	ff 2e       	mov	r15, r31
     faa:	f0 2d       	mov	r31, r0
     fac:	00 e0       	ldi	r16, 0x00	; 0
     fae:	10 e0       	ldi	r17, 0x00	; 0
     fb0:	98 01       	movw	r18, r16
     fb2:	49 e2       	ldi	r20, 0x29	; 41
     fb4:	5c e5       	ldi	r21, 0x5C	; 92
     fb6:	6f e0       	ldi	r22, 0x0F	; 15
     fb8:	7e e3       	ldi	r23, 0x3E	; 62
     fba:	ce 01       	movw	r24, r28
     fbc:	0b 96       	adiw	r24, 0x0b	; 11
     fbe:	ee d5       	rcall	.+3036   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
		}
	}


	SetOcrValue(Ocr + Controller.Compute_PID(RPM, LowSpeedFlag));
     fc0:	08 81       	ld	r16, Y
     fc2:	19 81       	ldd	r17, Y+1	; 0x01
     fc4:	5e 01       	movw	r10, r28
     fc6:	eb e0       	ldi	r30, 0x0B	; 11
     fc8:	ae 0e       	add	r10, r30
     fca:	b1 1c       	adc	r11, r1
     fcc:	6e 81       	ldd	r22, Y+6	; 0x06
     fce:	7f 81       	ldd	r23, Y+7	; 0x07
     fd0:	4b 81       	ldd	r20, Y+3	; 0x03
     fd2:	c5 01       	movw	r24, r10
     fd4:	fd d5       	rcall	.+3066   	; 0x1bd0 <_ZN3PID11Compute_PIDEib>
     fd6:	b8 01       	movw	r22, r16
     fd8:	68 0f       	add	r22, r24
     fda:	79 1f       	adc	r23, r25
     fdc:	ce 01       	movw	r24, r28
     fde:	05 df       	rcall	.-502    	; 0xdea <_ZN9MotorBack11SetOcrValueEi>
	}

*/


	switch(Command)
     fe0:	d4 01       	movw	r26, r8
     fe2:	8c 91       	ld	r24, X
     fe4:	88 37       	cpi	r24, 0x78	; 120
     fe6:	19 f0       	breq	.+6      	; 0xfee <_ZN9MotorBack7OperateERhS0_+0x11c>
     fe8:	8a 37       	cpi	r24, 0x7A	; 122
     fea:	39 f0       	breq	.+14     	; 0xffa <_ZN9MotorBack7OperateERhS0_+0x128>
     fec:	0b c0       	rjmp	.+22     	; 0x1004 <_ZN9MotorBack7OperateERhS0_+0x132>
	void Dcr_KP(void){kp-=0.01;};
	void Inc_KI(void){ki+=0.0001;};
	void Dcr_KI(void){ki-=0.0001;};
	void Inc_KD(void){kd+=0.05;};
	void Dcr_KD(void){kd-=0.05;};
	void Inc_Setpoint(void){setpoint += SETPOINTSTEPPING;};
     fee:	88 8d       	ldd	r24, Y+24	; 0x18
     ff0:	99 8d       	ldd	r25, Y+25	; 0x19
     ff2:	0a 96       	adiw	r24, 0x0a	; 10
     ff4:	99 8f       	std	Y+25, r25	; 0x19
     ff6:	88 8f       	std	Y+24, r24	; 0x18
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <_ZN9MotorBack7OperateERhS0_+0x132>
	void Dcr_Setpoint(void){setpoint -= SETPOINTSTEPPING;};
     ffa:	88 8d       	ldd	r24, Y+24	; 0x18
     ffc:	99 8d       	ldd	r25, Y+25	; 0x19
     ffe:	0a 97       	sbiw	r24, 0x0a	; 10
    1000:	99 8f       	std	Y+25, r25	; 0x19
    1002:	88 8f       	std	Y+24, r24	; 0x18
			Controller.Dcr_Setpoint();
			break;
	}


	switch(rx)
    1004:	d3 01       	movw	r26, r6
    1006:	ec 91       	ld	r30, X
    1008:	8e 2f       	mov	r24, r30
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	fc 01       	movw	r30, r24
    100e:	be 97       	sbiw	r30, 0x2e	; 46
    1010:	ec 34       	cpi	r30, 0x4C	; 76
    1012:	f1 05       	cpc	r31, r1
    1014:	08 f0       	brcs	.+2      	; 0x1018 <_ZN9MotorBack7OperateERhS0_+0x146>
    1016:	5f c1       	rjmp	.+702    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    1018:	88 27       	eor	r24, r24
    101a:	ee 58       	subi	r30, 0x8E	; 142
    101c:	ff 4f       	sbci	r31, 0xFF	; 255
    101e:	8f 4f       	sbci	r24, 0xFF	; 255
    1020:	0c 94 49 12 	jmp	0x2492	; 0x2492 <__tablejump2__>
	public:
	uint8_t timer;
	int setpoint,lastOutput;
	float kp,ki,kd;
	void Initialise(void);
	void Inc_KP(void){kp+=0.01;};
    1024:	2a e0       	ldi	r18, 0x0A	; 10
    1026:	37 ed       	ldi	r19, 0xD7	; 215
    1028:	43 e2       	ldi	r20, 0x23	; 35
    102a:	5c e3       	ldi	r21, 0x3C	; 60
    102c:	6c 8d       	ldd	r22, Y+28	; 0x1c
    102e:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1030:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1032:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1034:	0e 94 48 10 	call	0x2090	; 0x2090 <__addsf3>
    1038:	6c 8f       	std	Y+28, r22	; 0x1c
    103a:	7d 8f       	std	Y+29, r23	; 0x1d
	{
		
 		case 'p':
		Controller.Inc_KP();
		
		uart0_putc('P');
    103c:	8e 8f       	std	Y+30, r24	; 0x1e
    103e:	9f 8f       	std	Y+31, r25	; 0x1f
    1040:	80 e5       	ldi	r24, 0x50	; 80
		uart0_putc(':');
    1042:	d6 d6       	rcall	.+3500   	; 0x1df0 <_Z10uart0_putch>
    1044:	8a e3       	ldi	r24, 0x3A	; 58
    1046:	d4 d6       	rcall	.+3496   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Controller.kp*100);
    1048:	20 e0       	ldi	r18, 0x00	; 0
    104a:	30 e0       	ldi	r19, 0x00	; 0
    104c:	48 ec       	ldi	r20, 0xC8	; 200
    104e:	52 e4       	ldi	r21, 0x42	; 66
    1050:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1052:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1054:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1056:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1058:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    105c:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
		uart0_putc('\n');
    1060:	cb 01       	movw	r24, r22
    1062:	db d6       	rcall	.+3510   	; 0x1e1a <_Z12uart0_putinti>
    1064:	8a e0       	ldi	r24, 0x0A	; 10
		uart0_putc('\r');
    1066:	c4 d6       	rcall	.+3464   	; 0x1df0 <_Z10uart0_putch>
    1068:	8d e0       	ldi	r24, 0x0D	; 13
    106a:	c2 d6       	rcall	.+3460   	; 0x1df0 <_Z10uart0_putch>
		break;
    106c:	34 c1       	rjmp	.+616    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
	void Dcr_KP(void){kp-=0.01;};
	void Inc_KI(void){ki+=0.0001;};
    106e:	27 e1       	ldi	r18, 0x17	; 23
    1070:	37 eb       	ldi	r19, 0xB7	; 183
    1072:	41 ed       	ldi	r20, 0xD1	; 209
    1074:	58 e3       	ldi	r21, 0x38	; 56
    1076:	68 a1       	ldd	r22, Y+32	; 0x20
    1078:	79 a1       	ldd	r23, Y+33	; 0x21
    107a:	8a a1       	ldd	r24, Y+34	; 0x22
    107c:	9b a1       	ldd	r25, Y+35	; 0x23
    107e:	0e 94 48 10 	call	0x2090	; 0x2090 <__addsf3>
    1082:	68 a3       	std	Y+32, r22	; 0x20
    1084:	79 a3       	std	Y+33, r23	; 0x21
		
		case 'i':
		Controller.Inc_KI();
		
		uart0_putc('I');
    1086:	8a a3       	std	Y+34, r24	; 0x22
    1088:	9b a3       	std	Y+35, r25	; 0x23
    108a:	89 e4       	ldi	r24, 0x49	; 73
		uart0_putc(':');
    108c:	b1 d6       	rcall	.+3426   	; 0x1df0 <_Z10uart0_putch>
    108e:	8a e3       	ldi	r24, 0x3A	; 58
    1090:	af d6       	rcall	.+3422   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Controller.ki*1000);
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	4a e7       	ldi	r20, 0x7A	; 122
    1098:	54 e4       	ldi	r21, 0x44	; 68
    109a:	68 a1       	ldd	r22, Y+32	; 0x20
    109c:	79 a1       	ldd	r23, Y+33	; 0x21
    109e:	8a a1       	ldd	r24, Y+34	; 0x22
    10a0:	9b a1       	ldd	r25, Y+35	; 0x23
    10a2:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    10a6:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
		uart0_putc('\n');
    10aa:	cb 01       	movw	r24, r22
    10ac:	b6 d6       	rcall	.+3436   	; 0x1e1a <_Z12uart0_putinti>
		uart0_putc('\r');
    10ae:	8a e0       	ldi	r24, 0x0A	; 10
    10b0:	9f d6       	rcall	.+3390   	; 0x1df0 <_Z10uart0_putch>
    10b2:	8d e0       	ldi	r24, 0x0D	; 13
		break;
    10b4:	9d d6       	rcall	.+3386   	; 0x1df0 <_Z10uart0_putch>
	void Dcr_KI(void){ki-=0.0001;};
	void Inc_KD(void){kd+=0.05;};
    10b6:	0f c1       	rjmp	.+542    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    10b8:	2d ec       	ldi	r18, 0xCD	; 205
    10ba:	3c ec       	ldi	r19, 0xCC	; 204
    10bc:	4c e4       	ldi	r20, 0x4C	; 76
    10be:	5d e3       	ldi	r21, 0x3D	; 61
    10c0:	6c a1       	ldd	r22, Y+36	; 0x24
    10c2:	7d a1       	ldd	r23, Y+37	; 0x25
    10c4:	8e a1       	ldd	r24, Y+38	; 0x26
    10c6:	9f a1       	ldd	r25, Y+39	; 0x27
    10c8:	e3 d7       	rcall	.+4038   	; 0x2090 <__addsf3>
    10ca:	6c a3       	std	Y+36, r22	; 0x24
    10cc:	7d a3       	std	Y+37, r23	; 0x25

		case 'd':
		Controller.Inc_KD();
		
		uart0_putc('D');
    10ce:	8e a3       	std	Y+38, r24	; 0x26
    10d0:	9f a3       	std	Y+39, r25	; 0x27
		uart0_putc(':');
    10d2:	84 e4       	ldi	r24, 0x44	; 68
		uart0_putint(Controller.kd*100);
    10d4:	8d d6       	rcall	.+3354   	; 0x1df0 <_Z10uart0_putch>
    10d6:	8a e3       	ldi	r24, 0x3A	; 58
    10d8:	8b d6       	rcall	.+3350   	; 0x1df0 <_Z10uart0_putch>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	48 ec       	ldi	r20, 0xC8	; 200
    10e0:	52 e4       	ldi	r21, 0x42	; 66
    10e2:	6c a1       	ldd	r22, Y+36	; 0x24
    10e4:	7d a1       	ldd	r23, Y+37	; 0x25
    10e6:	8e a1       	ldd	r24, Y+38	; 0x26
    10e8:	9f a1       	ldd	r25, Y+39	; 0x27
    10ea:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
		uart0_putc('\n');
    10ee:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
		uart0_putc('\r');
    10f2:	cb 01       	movw	r24, r22
		break;
    10f4:	92 d6       	rcall	.+3364   	; 0x1e1a <_Z12uart0_putinti>
	uint8_t timer;
	int setpoint,lastOutput;
	float kp,ki,kd;
	void Initialise(void);
	void Inc_KP(void){kp+=0.01;};
	void Dcr_KP(void){kp-=0.01;};
    10f6:	8a e0       	ldi	r24, 0x0A	; 10
    10f8:	7b d6       	rcall	.+3318   	; 0x1df0 <_Z10uart0_putch>
    10fa:	8d e0       	ldi	r24, 0x0D	; 13
    10fc:	79 d6       	rcall	.+3314   	; 0x1df0 <_Z10uart0_putch>
    10fe:	eb c0       	rjmp	.+470    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    1100:	2a e0       	ldi	r18, 0x0A	; 10
    1102:	37 ed       	ldi	r19, 0xD7	; 215
    1104:	43 e2       	ldi	r20, 0x23	; 35
    1106:	5c e3       	ldi	r21, 0x3C	; 60
    1108:	6c 8d       	ldd	r22, Y+28	; 0x1c
    110a:	7d 8d       	ldd	r23, Y+29	; 0x1d
    110c:	8e 8d       	ldd	r24, Y+30	; 0x1e

		case '[':
		Controller.Dcr_KP();
		
		uart0_putc('P');
    110e:	9f 8d       	ldd	r25, Y+31	; 0x1f
		uart0_putc(':');
    1110:	be d7       	rcall	.+3964   	; 0x208e <__subsf3>
    1112:	6c 8f       	std	Y+28, r22	; 0x1c
    1114:	7d 8f       	std	Y+29, r23	; 0x1d
		uart0_putint(Controller.kp*100);
    1116:	8e 8f       	std	Y+30, r24	; 0x1e
    1118:	9f 8f       	std	Y+31, r25	; 0x1f
    111a:	80 e5       	ldi	r24, 0x50	; 80
    111c:	69 d6       	rcall	.+3282   	; 0x1df0 <_Z10uart0_putch>
    111e:	8a e3       	ldi	r24, 0x3A	; 58
    1120:	67 d6       	rcall	.+3278   	; 0x1df0 <_Z10uart0_putch>
    1122:	20 e0       	ldi	r18, 0x00	; 0
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	48 ec       	ldi	r20, 0xC8	; 200
    1128:	52 e4       	ldi	r21, 0x42	; 66
    112a:	6c 8d       	ldd	r22, Y+28	; 0x1c
    112c:	7d 8d       	ldd	r23, Y+29	; 0x1d
		uart0_putc('\n');
    112e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1130:	9f 8d       	ldd	r25, Y+31	; 0x1f
		uart0_putc('\r');
    1132:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    1136:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
	void Inc_KI(void){ki+=0.0001;};
	void Dcr_KI(void){ki-=0.0001;};
    113a:	cb 01       	movw	r24, r22
    113c:	6e d6       	rcall	.+3292   	; 0x1e1a <_Z12uart0_putinti>
    113e:	8a e0       	ldi	r24, 0x0A	; 10
    1140:	57 d6       	rcall	.+3246   	; 0x1df0 <_Z10uart0_putch>
    1142:	8d e0       	ldi	r24, 0x0D	; 13
    1144:	55 d6       	rcall	.+3242   	; 0x1df0 <_Z10uart0_putch>
    1146:	c7 c0       	rjmp	.+398    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    1148:	27 e1       	ldi	r18, 0x17	; 23
    114a:	37 eb       	ldi	r19, 0xB7	; 183
    114c:	41 ed       	ldi	r20, 0xD1	; 209
    114e:	58 e3       	ldi	r21, 0x38	; 56


		case 'o':
		Controller.Dcr_KI();
		
		uart0_putc('I');
    1150:	68 a1       	ldd	r22, Y+32	; 0x20
    1152:	79 a1       	ldd	r23, Y+33	; 0x21
    1154:	8a a1       	ldd	r24, Y+34	; 0x22
		uart0_putc(':');
    1156:	9b a1       	ldd	r25, Y+35	; 0x23
    1158:	9a d7       	rcall	.+3892   	; 0x208e <__subsf3>
		uart0_putint(Controller.ki*1000);
    115a:	68 a3       	std	Y+32, r22	; 0x20
    115c:	79 a3       	std	Y+33, r23	; 0x21
    115e:	8a a3       	std	Y+34, r24	; 0x22
    1160:	9b a3       	std	Y+35, r25	; 0x23
    1162:	89 e4       	ldi	r24, 0x49	; 73
    1164:	45 d6       	rcall	.+3210   	; 0x1df0 <_Z10uart0_putch>
    1166:	8a e3       	ldi	r24, 0x3A	; 58
    1168:	43 d6       	rcall	.+3206   	; 0x1df0 <_Z10uart0_putch>
    116a:	20 e0       	ldi	r18, 0x00	; 0
    116c:	30 e0       	ldi	r19, 0x00	; 0
    116e:	4a e7       	ldi	r20, 0x7A	; 122
    1170:	54 e4       	ldi	r21, 0x44	; 68
    1172:	68 a1       	ldd	r22, Y+32	; 0x20
		uart0_putc('\n');
    1174:	79 a1       	ldd	r23, Y+33	; 0x21
    1176:	8a a1       	ldd	r24, Y+34	; 0x22
    1178:	9b a1       	ldd	r25, Y+35	; 0x23
		uart0_putc('\r');
    117a:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    117e:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
	void Inc_KD(void){kd+=0.05;};
	void Dcr_KD(void){kd-=0.05;};
    1182:	cb 01       	movw	r24, r22
    1184:	4a d6       	rcall	.+3220   	; 0x1e1a <_Z12uart0_putinti>
    1186:	8a e0       	ldi	r24, 0x0A	; 10
    1188:	33 d6       	rcall	.+3174   	; 0x1df0 <_Z10uart0_putch>
    118a:	8d e0       	ldi	r24, 0x0D	; 13
    118c:	31 d6       	rcall	.+3170   	; 0x1df0 <_Z10uart0_putch>
    118e:	a3 c0       	rjmp	.+326    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    1190:	2d ec       	ldi	r18, 0xCD	; 205
    1192:	3c ec       	ldi	r19, 0xCC	; 204
    1194:	4c e4       	ldi	r20, 0x4C	; 76
		break;

		case 'f':
		Controller.Dcr_KD();
		
		uart0_putc('D');
    1196:	5d e3       	ldi	r21, 0x3D	; 61
		uart0_putc(':');
    1198:	6c a1       	ldd	r22, Y+36	; 0x24
    119a:	7d a1       	ldd	r23, Y+37	; 0x25
		uart0_putint(Controller.kd*100);
    119c:	8e a1       	ldd	r24, Y+38	; 0x26
    119e:	9f a1       	ldd	r25, Y+39	; 0x27
    11a0:	76 d7       	rcall	.+3820   	; 0x208e <__subsf3>
    11a2:	6c a3       	std	Y+36, r22	; 0x24
    11a4:	7d a3       	std	Y+37, r23	; 0x25
    11a6:	8e a3       	std	Y+38, r24	; 0x26
    11a8:	9f a3       	std	Y+39, r25	; 0x27
    11aa:	84 e4       	ldi	r24, 0x44	; 68
    11ac:	21 d6       	rcall	.+3138   	; 0x1df0 <_Z10uart0_putch>
    11ae:	8a e3       	ldi	r24, 0x3A	; 58
    11b0:	1f d6       	rcall	.+3134   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc('\n');
    11b2:	20 e0       	ldi	r18, 0x00	; 0
		uart0_putc('\r');
    11b4:	30 e0       	ldi	r19, 0x00	; 0
		break;
    11b6:	48 ec       	ldi	r20, 0xC8	; 200
	void Inc_Setpoint(void){setpoint += SETPOINTSTEPPING;};
    11b8:	52 e4       	ldi	r21, 0x42	; 66
    11ba:	6c a1       	ldd	r22, Y+36	; 0x24
    11bc:	7d a1       	ldd	r23, Y+37	; 0x25

		case 't':
		Controller.Inc_Setpoint();
		
		uart0_putc('S');
    11be:	8e a1       	ldd	r24, Y+38	; 0x26
    11c0:	9f a1       	ldd	r25, Y+39	; 0x27
		uart0_putc(':');
    11c2:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    11c6:	0e 94 14 11 	call	0x2228	; 0x2228 <__fixsfsi>
		uart0_putint(Controller.setpoint);
    11ca:	cb 01       	movw	r24, r22
    11cc:	26 d6       	rcall	.+3148   	; 0x1e1a <_Z12uart0_putinti>
    11ce:	8a e0       	ldi	r24, 0x0A	; 10
		uart0_putc('\n');
    11d0:	0f d6       	rcall	.+3102   	; 0x1df0 <_Z10uart0_putch>
    11d2:	8d e0       	ldi	r24, 0x0D	; 13
		uart0_putc('\r');
    11d4:	0d d6       	rcall	.+3098   	; 0x1df0 <_Z10uart0_putch>
    11d6:	7f c0       	rjmp	.+254    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
	void Dcr_Setpoint(void){setpoint -= SETPOINTSTEPPING;};
    11d8:	88 8d       	ldd	r24, Y+24	; 0x18
    11da:	99 8d       	ldd	r25, Y+25	; 0x19
    11dc:	0a 96       	adiw	r24, 0x0a	; 10
		break;

		case 'y':
		Controller.Dcr_Setpoint();
		
		uart0_putc('S');
    11de:	99 8f       	std	Y+25, r25	; 0x19
		uart0_putc(':');
    11e0:	88 8f       	std	Y+24, r24	; 0x18
    11e2:	83 e5       	ldi	r24, 0x53	; 83
		uart0_putint(Controller.setpoint);
    11e4:	05 d6       	rcall	.+3082   	; 0x1df0 <_Z10uart0_putch>
    11e6:	8a e3       	ldi	r24, 0x3A	; 58
    11e8:	03 d6       	rcall	.+3078   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc('\n');
    11ea:	88 8d       	ldd	r24, Y+24	; 0x18
    11ec:	99 8d       	ldd	r25, Y+25	; 0x19
		uart0_putc('\r');
    11ee:	15 d6       	rcall	.+3114   	; 0x1e1a <_Z12uart0_putinti>
    11f0:	8a e0       	ldi	r24, 0x0A	; 10
    11f2:	fe d5       	rcall	.+3068   	; 0x1df0 <_Z10uart0_putch>
		
		
		case 's':
		case 'S':
		case '.':
		StopMotor();
    11f4:	8d e0       	ldi	r24, 0x0D	; 13
		
		uart0_puts(" A:");
    11f6:	fc d5       	rcall	.+3064   	; 0x1df0 <_Z10uart0_putch>
    11f8:	6e c0       	rjmp	.+220    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
		uart0_putint(Ocr);
    11fa:	88 8d       	ldd	r24, Y+24	; 0x18
    11fc:	99 8d       	ldd	r25, Y+25	; 0x19
    11fe:	0a 97       	sbiw	r24, 0x0a	; 10
    1200:	99 8f       	std	Y+25, r25	; 0x19

		break;


		case 'r':
		Controller.Set_PID(0,0,0);
    1202:	88 8f       	std	Y+24, r24	; 0x18
    1204:	83 e5       	ldi	r24, 0x53	; 83
    1206:	f4 d5       	rcall	.+3048   	; 0x1df0 <_Z10uart0_putch>
    1208:	8a e3       	ldi	r24, 0x3A	; 58
    120a:	f2 d5       	rcall	.+3044   	; 0x1df0 <_Z10uart0_putch>
    120c:	88 8d       	ldd	r24, Y+24	; 0x18
    120e:	99 8d       	ldd	r25, Y+25	; 0x19
    1210:	04 d6       	rcall	.+3080   	; 0x1e1a <_Z12uart0_putinti>
		break;

		case 'v':
	//	uart0_puts(" R:");
	//	uart0_putint(RPM);
		uart0_puts("OCR:");
    1212:	8a e0       	ldi	r24, 0x0A	; 10
    1214:	ed d5       	rcall	.+3034   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Ocr);
    1216:	8d e0       	ldi	r24, 0x0D	; 13
    1218:	eb d5       	rcall	.+3030   	; 0x1df0 <_Z10uart0_putch>
    121a:	5d c0       	rjmp	.+186    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
		uart0_putc(' ');
    121c:	ce 01       	movw	r24, r28
    121e:	0c de       	rcall	.-1000   	; 0xe38 <_ZN9MotorBack9StopMotorEv>
		uart0_putc('P');
    1220:	84 e6       	ldi	r24, 0x64	; 100
    1222:	92 e0       	ldi	r25, 0x02	; 2
    1224:	22 d6       	rcall	.+3140   	; 0x1e6a <_Z10uart0_putsPKc>
		uart0_putc(':');
    1226:	88 81       	ld	r24, Y
    1228:	99 81       	ldd	r25, Y+1	; 0x01
		uart0_putint(Controller.kp*100);
    122a:	f7 d5       	rcall	.+3054   	; 0x1e1a <_Z12uart0_putinti>
    122c:	54 c0       	rjmp	.+168    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    122e:	c1 2c       	mov	r12, r1
    1230:	d1 2c       	mov	r13, r1
    1232:	76 01       	movw	r14, r12
    1234:	97 01       	movw	r18, r14
    1236:	86 01       	movw	r16, r12
    1238:	b7 01       	movw	r22, r14
    123a:	a6 01       	movw	r20, r12
    123c:	c5 01       	movw	r24, r10
		uart0_putc(' ');
    123e:	ae d4       	rcall	.+2396   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
    1240:	4a c0       	rjmp	.+148    	; 0x12d6 <_ZN9MotorBack7OperateERhS0_+0x404>
    1242:	88 e6       	ldi	r24, 0x68	; 104
		uart0_putc('I');
    1244:	92 e0       	ldi	r25, 0x02	; 2
    1246:	11 d6       	rcall	.+3106   	; 0x1e6a <_Z10uart0_putsPKc>
    1248:	88 81       	ld	r24, Y
		uart0_putc(':');
    124a:	99 81       	ldd	r25, Y+1	; 0x01
    124c:	e6 d5       	rcall	.+3020   	; 0x1e1a <_Z12uart0_putinti>
    124e:	80 e2       	ldi	r24, 0x20	; 32
		uart0_putint(Controller.ki*10000);
    1250:	cf d5       	rcall	.+2974   	; 0x1df0 <_Z10uart0_putch>
    1252:	80 e5       	ldi	r24, 0x50	; 80
    1254:	cd d5       	rcall	.+2970   	; 0x1df0 <_Z10uart0_putch>
    1256:	8a e3       	ldi	r24, 0x3A	; 58
    1258:	cb d5       	rcall	.+2966   	; 0x1df0 <_Z10uart0_putch>
    125a:	20 e0       	ldi	r18, 0x00	; 0
    125c:	30 e0       	ldi	r19, 0x00	; 0
    125e:	48 ec       	ldi	r20, 0xC8	; 200
    1260:	52 e4       	ldi	r21, 0x42	; 66
    1262:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1264:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1266:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1268:	9f 8d       	ldd	r25, Y+31	; 0x1f
    126a:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
		uart0_putc(' ');
    126e:	dc d7       	rcall	.+4024   	; 0x2228 <__fixsfsi>
    1270:	cb 01       	movw	r24, r22
    1272:	d3 d5       	rcall	.+2982   	; 0x1e1a <_Z12uart0_putinti>
		uart0_putc('D');
    1274:	80 e2       	ldi	r24, 0x20	; 32
    1276:	bc d5       	rcall	.+2936   	; 0x1df0 <_Z10uart0_putch>
    1278:	89 e4       	ldi	r24, 0x49	; 73
		uart0_putc(':');
    127a:	ba d5       	rcall	.+2932   	; 0x1df0 <_Z10uart0_putch>
    127c:	8a e3       	ldi	r24, 0x3A	; 58
    127e:	b8 d5       	rcall	.+2928   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Controller.kd*100);
    1280:	20 e0       	ldi	r18, 0x00	; 0
    1282:	30 e4       	ldi	r19, 0x40	; 64
    1284:	4c e1       	ldi	r20, 0x1C	; 28
    1286:	56 e4       	ldi	r21, 0x46	; 70
    1288:	68 a1       	ldd	r22, Y+32	; 0x20
    128a:	79 a1       	ldd	r23, Y+33	; 0x21
    128c:	8a a1       	ldd	r24, Y+34	; 0x22
    128e:	9b a1       	ldd	r25, Y+35	; 0x23
    1290:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    1294:	c9 d7       	rcall	.+3986   	; 0x2228 <__fixsfsi>
    1296:	cb 01       	movw	r24, r22
    1298:	c0 d5       	rcall	.+2944   	; 0x1e1a <_Z12uart0_putinti>
    129a:	80 e2       	ldi	r24, 0x20	; 32
    129c:	a9 d5       	rcall	.+2898   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc(' ');
    129e:	84 e4       	ldi	r24, 0x44	; 68
    12a0:	a7 d5       	rcall	.+2894   	; 0x1df0 <_Z10uart0_putch>
    12a2:	8a e3       	ldi	r24, 0x3A	; 58
		uart0_puts(" S:");
    12a4:	a5 d5       	rcall	.+2890   	; 0x1df0 <_Z10uart0_putch>
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	30 e0       	ldi	r19, 0x00	; 0
    12aa:	48 ec       	ldi	r20, 0xC8	; 200
		uart0_putint(Controller.setpoint);
    12ac:	52 e4       	ldi	r21, 0x42	; 66
    12ae:	6c a1       	ldd	r22, Y+36	; 0x24
    12b0:	7d a1       	ldd	r23, Y+37	; 0x25
    12b2:	8e a1       	ldd	r24, Y+38	; 0x26
		uart0_puts("\n\r");
    12b4:	9f a1       	ldd	r25, Y+39	; 0x27
    12b6:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <__mulsf3>
    12ba:	b6 d7       	rcall	.+3948   	; 0x2228 <__fixsfsi>
		break;
	}	
	return false;

}
    12bc:	cb 01       	movw	r24, r22
    12be:	ad d5       	rcall	.+2906   	; 0x1e1a <_Z12uart0_putinti>
    12c0:	80 e2       	ldi	r24, 0x20	; 32
    12c2:	96 d5       	rcall	.+2860   	; 0x1df0 <_Z10uart0_putch>
    12c4:	8d e6       	ldi	r24, 0x6D	; 109
    12c6:	92 e0       	ldi	r25, 0x02	; 2
    12c8:	d0 d5       	rcall	.+2976   	; 0x1e6a <_Z10uart0_putsPKc>
    12ca:	88 8d       	ldd	r24, Y+24	; 0x18
    12cc:	99 8d       	ldd	r25, Y+25	; 0x19
    12ce:	a5 d5       	rcall	.+2890   	; 0x1e1a <_Z12uart0_putinti>
    12d0:	81 e6       	ldi	r24, 0x61	; 97
    12d2:	92 e0       	ldi	r25, 0x02	; 2
    12d4:	ca d5       	rcall	.+2964   	; 0x1e6a <_Z10uart0_putsPKc>
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	1f 91       	pop	r17
    12de:	0f 91       	pop	r16
    12e0:	ff 90       	pop	r15
    12e2:	ef 90       	pop	r14
    12e4:	df 90       	pop	r13
    12e6:	cf 90       	pop	r12
    12e8:	bf 90       	pop	r11
    12ea:	af 90       	pop	r10
    12ec:	9f 90       	pop	r9
    12ee:	8f 90       	pop	r8
    12f0:	7f 90       	pop	r7
    12f2:	6f 90       	pop	r6
    12f4:	08 95       	ret

000012f6 <_ZN10MotorFront11InitCounterEv>:

}
void MotorFront::SetReverseDirection()
{
	CLEAR(DD_F);
	SET(DD_B);
    12f6:	ef e6       	ldi	r30, 0x6F	; 111
    12f8:	f0 e0       	ldi	r31, 0x00	; 0
    12fa:	80 81       	ld	r24, Z
    12fc:	81 60       	ori	r24, 0x01	; 1
    12fe:	80 83       	st	Z, r24
    1300:	e1 e8       	ldi	r30, 0x81	; 129
    1302:	f0 e0       	ldi	r31, 0x00	; 0
    1304:	80 81       	ld	r24, Z
    1306:	83 60       	ori	r24, 0x03	; 3
    1308:	80 83       	st	Z, r24
    130a:	08 95       	ret

0000130c <_ZN10MotorFront7InitPWMEv>:
    130c:	e7 e0       	ldi	r30, 0x07	; 7
    130e:	f1 e0       	ldi	r31, 0x01	; 1
    1310:	80 81       	ld	r24, Z
    1312:	80 61       	ori	r24, 0x10	; 16
    1314:	80 83       	st	Z, r24
    1316:	80 81       	ld	r24, Z
    1318:	80 62       	ori	r24, 0x20	; 32
    131a:	80 83       	st	Z, r24
    131c:	ea e0       	ldi	r30, 0x0A	; 10
    131e:	f1 e0       	ldi	r31, 0x01	; 1
    1320:	80 81       	ld	r24, Z
    1322:	80 61       	ori	r24, 0x10	; 16
    1324:	80 83       	st	Z, r24
    1326:	e0 e2       	ldi	r30, 0x20	; 32
    1328:	f1 e0       	ldi	r31, 0x01	; 1
    132a:	80 81       	ld	r24, Z
    132c:	82 62       	ori	r24, 0x22	; 34
    132e:	80 83       	st	Z, r24
    1330:	e1 e2       	ldi	r30, 0x21	; 33
    1332:	f1 e0       	ldi	r31, 0x01	; 1
    1334:	80 81       	ld	r24, Z
    1336:	89 61       	ori	r24, 0x19	; 25
    1338:	80 83       	st	Z, r24
    133a:	8f e9       	ldi	r24, 0x9F	; 159
    133c:	9f e0       	ldi	r25, 0x0F	; 15
    133e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
    1342:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    1346:	08 95       	ret

00001348 <_ZN10MotorFront13InitInterruptEv>:
    1348:	53 98       	cbi	0x0a, 3	; 10
    134a:	5b 9a       	sbi	0x0b, 3	; 11
    134c:	e9 e6       	ldi	r30, 0x69	; 105
    134e:	f0 e0       	ldi	r31, 0x00	; 0
    1350:	80 81       	ld	r24, Z
    1352:	80 6c       	ori	r24, 0xC0	; 192
    1354:	80 83       	st	Z, r24
    1356:	eb 9a       	sbi	0x1d, 3	; 29
    1358:	e3 9a       	sbi	0x1c, 3	; 28
    135a:	08 95       	ret

0000135c <_ZN10MotorFront19SetForwardDirectionEv>:
    135c:	e8 e0       	ldi	r30, 0x08	; 8
    135e:	f1 e0       	ldi	r31, 0x01	; 1
    1360:	80 81       	ld	r24, Z
    1362:	80 61       	ori	r24, 0x10	; 16
    1364:	80 83       	st	Z, r24
    1366:	80 81       	ld	r24, Z
    1368:	8f 7d       	andi	r24, 0xDF	; 223
    136a:	80 83       	st	Z, r24
    136c:	08 95       	ret

0000136e <_ZN10MotorFront11SetOcrValueEi>:
	SetOcrValue(MIN_VALUE);
}


void MotorFront::SetOcrValue(int x)
{
    136e:	0f 93       	push	r16
    1370:	1f 93       	push	r17
    1372:	cf 93       	push	r28
    1374:	df 93       	push	r29
    1376:	ec 01       	movw	r28, r24
    1378:	8b 01       	movw	r16, r22
	if(x < 0)
    137a:	77 23       	and	r23, r23
		//Ocr = 0 - x;
		Ocr = 0;
	}
	else
	{
		SetForwardDirection();
    137c:	84 f0       	brlt	.+32     	; 0x139e <_ZN10MotorFront11SetOcrValueEi+0x30>
		Ocr	= x;
    137e:	ee df       	rcall	.-36     	; 0x135c <_ZN10MotorFront19SetForwardDirectionEv>
    1380:	19 83       	std	Y+1, r17	; 0x01
	}
	
	if(Ocr >= MAX_VALUE)
    1382:	08 83       	st	Y, r16
    1384:	00 3f       	cpi	r16, 0xF0	; 240
    1386:	1a 40       	sbci	r17, 0x0A	; 10
		Ocr = MAX_VALUE;
    1388:	2c f0       	brlt	.+10     	; 0x1394 <_ZN10MotorFront11SetOcrValueEi+0x26>
    138a:	80 ef       	ldi	r24, 0xF0	; 240
    138c:	9a e0       	ldi	r25, 0x0A	; 10
    138e:	99 83       	std	Y+1, r25	; 0x01
    1390:	88 83       	st	Y, r24
	if(Ocr <= MIN_VALUE)
    1392:	09 c0       	rjmp	.+18     	; 0x13a6 <_ZN10MotorFront11SetOcrValueEi+0x38>
    1394:	88 81       	ld	r24, Y
    1396:	99 81       	ldd	r25, Y+1	; 0x01
    1398:	89 37       	cpi	r24, 0x79	; 121
    139a:	91 05       	cpc	r25, r1
		Ocr = MIN_VALUE;
    139c:	24 f4       	brge	.+8      	; 0x13a6 <_ZN10MotorFront11SetOcrValueEi+0x38>
    139e:	88 e7       	ldi	r24, 0x78	; 120
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	99 83       	std	Y+1, r25	; 0x01

	PWM_OCR		= Ocr;
    13a4:	88 83       	st	Y, r24
    13a6:	88 81       	ld	r24, Y
    13a8:	99 81       	ldd	r25, Y+1	; 0x01
    13aa:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
    13ae:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>
}
    13b2:	df 91       	pop	r29
    13b4:	cf 91       	pop	r28
    13b6:	1f 91       	pop	r17
    13b8:	0f 91       	pop	r16
    13ba:	08 95       	ret

000013bc <_ZN10MotorFront9StopMotorEv>:
	
}

void MotorFront::StopMotor()
{
	SET(DD_F);
    13bc:	e8 e0       	ldi	r30, 0x08	; 8
    13be:	f1 e0       	ldi	r31, 0x01	; 1
    13c0:	20 81       	ld	r18, Z
    13c2:	20 61       	ori	r18, 0x10	; 16
    13c4:	20 83       	st	Z, r18
	SET(DD_B);
    13c6:	20 81       	ld	r18, Z
    13c8:	20 62       	ori	r18, 0x20	; 32
    13ca:	20 83       	st	Z, r18
	
	SetOcrValue(MIN_VALUE);
    13cc:	68 e7       	ldi	r22, 0x78	; 120
    13ce:	70 e0       	ldi	r23, 0x00	; 0
    13d0:	ce cf       	rjmp	.-100    	; 0x136e <_ZN10MotorFront11SetOcrValueEi>
    13d2:	08 95       	ret

000013d4 <_ZN10MotorFront10InitialiseEv>:
#include "MotorFront.h"



void MotorFront::Initialise()
{
    13d4:	af 92       	push	r10
    13d6:	bf 92       	push	r11
    13d8:	cf 92       	push	r12
    13da:	df 92       	push	r13
    13dc:	ef 92       	push	r14
    13de:	ff 92       	push	r15
    13e0:	0f 93       	push	r16
    13e2:	1f 93       	push	r17
    13e4:	cf 93       	push	r28
    13e6:	df 93       	push	r29
	InitPWM();
	InitCounter();
    13e8:	ec 01       	movw	r28, r24
	InitInterrupt();
    13ea:	90 df       	rcall	.-224    	; 0x130c <_ZN10MotorFront7InitPWMEv>
    13ec:	ce 01       	movw	r24, r28
    13ee:	83 df       	rcall	.-250    	; 0x12f6 <_ZN10MotorFront11InitCounterEv>
	Controller.Initialise();
    13f0:	ce 01       	movw	r24, r28
    13f2:	aa df       	rcall	.-172    	; 0x1348 <_ZN10MotorFront13InitInterruptEv>
    13f4:	5e 01       	movw	r10, r28
    13f6:	8b e0       	ldi	r24, 0x0B	; 11
    13f8:	a8 0e       	add	r10, r24
    13fa:	b1 1c       	adc	r11, r1
	LowSpeedFlag = false;
    13fc:	c5 01       	movw	r24, r10
	Controller.Set_PID(0.14, 0, 2.39);
    13fe:	ba d3       	rcall	.+1908   	; 0x1b74 <_ZN3PID10InitialiseEv>
    1400:	1b 82       	std	Y+3, r1	; 0x03
    1402:	0f 2e       	mov	r0, r31
    1404:	f3 ec       	ldi	r31, 0xC3	; 195
    1406:	cf 2e       	mov	r12, r31
    1408:	f5 ef       	ldi	r31, 0xF5	; 245
    140a:	df 2e       	mov	r13, r31
    140c:	f8 e1       	ldi	r31, 0x18	; 24
    140e:	ef 2e       	mov	r14, r31
    1410:	f0 e4       	ldi	r31, 0x40	; 64
    1412:	ff 2e       	mov	r15, r31
    1414:	f0 2d       	mov	r31, r0
    1416:	00 e0       	ldi	r16, 0x00	; 0
    1418:	10 e0       	ldi	r17, 0x00	; 0
    141a:	98 01       	movw	r18, r16
    141c:	49 e2       	ldi	r20, 0x29	; 41
    141e:	5c e5       	ldi	r21, 0x5C	; 92
	SetForwardDirection();
    1420:	6f e0       	ldi	r22, 0x0F	; 15
    1422:	7e e3       	ldi	r23, 0x3E	; 62
	SetOcrValue(20);
    1424:	c5 01       	movw	r24, r10
    1426:	ba d3       	rcall	.+1908   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
    1428:	ce 01       	movw	r24, r28
    142a:	98 df       	rcall	.-208    	; 0x135c <_ZN10MotorFront19SetForwardDirectionEv>
    142c:	64 e1       	ldi	r22, 0x14	; 20
	SetOcrValue(Ocr - 40);
}

void MotorFront::ClearCounter()
{
	REGISTER_CLEAR(M_TCNT);
    142e:	70 e0       	ldi	r23, 0x00	; 0
    1430:	ce 01       	movw	r24, r28
    1432:	9d df       	rcall	.-198    	; 0x136e <_ZN10MotorFront11SetOcrValueEi>
    1434:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	LowSpeedFlag = false;
	Controller.Set_PID(0.14, 0, 2.39);
	SetForwardDirection();
	SetOcrValue(20);
	ClearCounter();
	LastRPM = 0;
    1438:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
}
    143c:	19 86       	std	Y+9, r1	; 0x09
    143e:	18 86       	std	Y+8, r1	; 0x08
    1440:	df 91       	pop	r29
    1442:	cf 91       	pop	r28
    1444:	1f 91       	pop	r17
    1446:	0f 91       	pop	r16
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	bf 90       	pop	r11
    1452:	af 90       	pop	r10
    1454:	08 95       	ret

00001456 <_ZN9MotorSide11InitCounterEv>:
	SetOcrValue(Ocr - 40);
}

void MotorSide::ClearCounter()
{
	REGISTER_CLEAR(M_TCNT);
    1456:	e2 e7       	ldi	r30, 0x72	; 114
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	80 81       	ld	r24, Z
    145c:	81 60       	ori	r24, 0x01	; 1
    145e:	80 83       	st	Z, r24
    1460:	e1 ea       	ldi	r30, 0xA1	; 161
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	83 60       	ori	r24, 0x03	; 3
    1468:	80 83       	st	Z, r24
    146a:	08 95       	ret

0000146c <_ZN9MotorSide7InitPWMEv>:
    146c:	e7 e0       	ldi	r30, 0x07	; 7
    146e:	f1 e0       	ldi	r31, 0x01	; 1
    1470:	80 81       	ld	r24, Z
    1472:	88 60       	ori	r24, 0x08	; 8
    1474:	80 83       	st	Z, r24
    1476:	80 81       	ld	r24, Z
    1478:	84 60       	ori	r24, 0x04	; 4
    147a:	80 83       	st	Z, r24
    147c:	ea e0       	ldi	r30, 0x0A	; 10
    147e:	f1 e0       	ldi	r31, 0x01	; 1
    1480:	80 81       	ld	r24, Z
    1482:	88 60       	ori	r24, 0x08	; 8
    1484:	80 83       	st	Z, r24
    1486:	e0 e2       	ldi	r30, 0x20	; 32
    1488:	f1 e0       	ldi	r31, 0x01	; 1
    148a:	80 81       	ld	r24, Z
    148c:	82 68       	ori	r24, 0x82	; 130
    148e:	80 83       	st	Z, r24
    1490:	e1 e2       	ldi	r30, 0x21	; 33
    1492:	f1 e0       	ldi	r31, 0x01	; 1
    1494:	80 81       	ld	r24, Z
    1496:	89 61       	ori	r24, 0x19	; 25
    1498:	80 83       	st	Z, r24
    149a:	8f e9       	ldi	r24, 0x9F	; 159
    149c:	9f e0       	ldi	r25, 0x0F	; 15
    149e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
    14a2:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
    14a6:	08 95       	ret

000014a8 <_ZN9MotorSide13InitInterruptEv>:
    14a8:	52 98       	cbi	0x0a, 2	; 10
    14aa:	5a 9a       	sbi	0x0b, 2	; 11
    14ac:	e9 e6       	ldi	r30, 0x69	; 105
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	80 81       	ld	r24, Z
    14b2:	8c 60       	ori	r24, 0x0C	; 12
    14b4:	80 83       	st	Z, r24
    14b6:	e9 9a       	sbi	0x1d, 1	; 29
    14b8:	e1 9a       	sbi	0x1c, 1	; 28
    14ba:	08 95       	ret

000014bc <_ZN9MotorSide19SetForwardDirectionEv>:
    14bc:	e8 e0       	ldi	r30, 0x08	; 8
    14be:	f1 e0       	ldi	r31, 0x01	; 1
    14c0:	80 81       	ld	r24, Z
    14c2:	88 60       	ori	r24, 0x08	; 8
    14c4:	80 83       	st	Z, r24
    14c6:	80 81       	ld	r24, Z
    14c8:	8b 7f       	andi	r24, 0xFB	; 251
    14ca:	80 83       	st	Z, r24
    14cc:	08 95       	ret

000014ce <_ZN9MotorSide10InitialiseEv>:
    14ce:	af 92       	push	r10
    14d0:	bf 92       	push	r11
    14d2:	cf 92       	push	r12
    14d4:	df 92       	push	r13
    14d6:	ef 92       	push	r14
    14d8:	ff 92       	push	r15
    14da:	0f 93       	push	r16
    14dc:	1f 93       	push	r17
    14de:	cf 93       	push	r28
    14e0:	df 93       	push	r29
    14e2:	ec 01       	movw	r28, r24
    14e4:	c3 df       	rcall	.-122    	; 0x146c <_ZN9MotorSide7InitPWMEv>
    14e6:	ce 01       	movw	r24, r28
    14e8:	b6 df       	rcall	.-148    	; 0x1456 <_ZN9MotorSide11InitCounterEv>
    14ea:	ce 01       	movw	r24, r28
    14ec:	dd df       	rcall	.-70     	; 0x14a8 <_ZN9MotorSide13InitInterruptEv>
    14ee:	5e 01       	movw	r10, r28
    14f0:	8e e0       	ldi	r24, 0x0E	; 14
    14f2:	a8 0e       	add	r10, r24
    14f4:	b1 1c       	adc	r11, r1
    14f6:	c5 01       	movw	r24, r10
    14f8:	3d d3       	rcall	.+1658   	; 0x1b74 <_ZN3PID10InitialiseEv>
    14fa:	1b 82       	std	Y+3, r1	; 0x03
    14fc:	0f 2e       	mov	r0, r31
    14fe:	fd ec       	ldi	r31, 0xCD	; 205
    1500:	cf 2e       	mov	r12, r31
    1502:	fc ec       	ldi	r31, 0xCC	; 204
    1504:	df 2e       	mov	r13, r31
    1506:	fc e4       	ldi	r31, 0x4C	; 76
    1508:	ef 2e       	mov	r14, r31
    150a:	fd e3       	ldi	r31, 0x3D	; 61
    150c:	ff 2e       	mov	r15, r31
    150e:	f0 2d       	mov	r31, r0
    1510:	0c e6       	ldi	r16, 0x6C	; 108
    1512:	19 e0       	ldi	r17, 0x09	; 9
    1514:	29 ef       	ldi	r18, 0xF9	; 249
    1516:	3b e3       	ldi	r19, 0x3B	; 59
    1518:	4f e8       	ldi	r20, 0x8F	; 143
    151a:	52 ec       	ldi	r21, 0xC2	; 194
    151c:	65 e7       	ldi	r22, 0x75	; 117
    151e:	7d e3       	ldi	r23, 0x3D	; 61
    1520:	c5 01       	movw	r24, r10
    1522:	3c d3       	rcall	.+1656   	; 0x1b9c <_ZN3PID7Set_PIDEfff>
    1524:	6c e2       	ldi	r22, 0x2C	; 44
    1526:	71 e0       	ldi	r23, 0x01	; 1
    1528:	c5 01       	movw	r24, r10
    152a:	34 d3       	rcall	.+1640   	; 0x1b94 <_ZN3PID12Set_SetpointEi>
    152c:	ce 01       	movw	r24, r28
    152e:	c6 df       	rcall	.-116    	; 0x14bc <_ZN9MotorSide19SetForwardDirectionEv>
    1530:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
    1534:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
    1538:	1a 86       	std	Y+10, r1	; 0x0a
    153a:	19 86       	std	Y+9, r1	; 0x09
    153c:	88 e7       	ldi	r24, 0x78	; 120
    153e:	90 e0       	ldi	r25, 0x00	; 0
    1540:	9d 87       	std	Y+13, r25	; 0x0d
    1542:	8c 87       	std	Y+12, r24	; 0x0c
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	ff 90       	pop	r15
    154e:	ef 90       	pop	r14
    1550:	df 90       	pop	r13
    1552:	cf 90       	pop	r12
    1554:	bf 90       	pop	r11
    1556:	af 90       	pop	r10
    1558:	08 95       	ret

0000155a <_ZN9MotorSide11SetOcrValueEi>:
    155a:	0f 93       	push	r16
    155c:	1f 93       	push	r17
    155e:	cf 93       	push	r28
    1560:	df 93       	push	r29
    1562:	ec 01       	movw	r28, r24
    1564:	8b 01       	movw	r16, r22
    1566:	77 23       	and	r23, r23
    1568:	84 f0       	brlt	.+32     	; 0x158a <_ZN9MotorSide11SetOcrValueEi+0x30>
    156a:	a8 df       	rcall	.-176    	; 0x14bc <_ZN9MotorSide19SetForwardDirectionEv>
    156c:	19 83       	std	Y+1, r17	; 0x01
    156e:	08 83       	st	Y, r16
    1570:	00 3f       	cpi	r16, 0xF0	; 240
    1572:	1a 40       	sbci	r17, 0x0A	; 10
    1574:	2c f0       	brlt	.+10     	; 0x1580 <_ZN9MotorSide11SetOcrValueEi+0x26>
    1576:	80 ef       	ldi	r24, 0xF0	; 240
    1578:	9a e0       	ldi	r25, 0x0A	; 10
    157a:	99 83       	std	Y+1, r25	; 0x01
    157c:	88 83       	st	Y, r24
    157e:	09 c0       	rjmp	.+18     	; 0x1592 <_ZN9MotorSide11SetOcrValueEi+0x38>
    1580:	88 81       	ld	r24, Y
    1582:	99 81       	ldd	r25, Y+1	; 0x01
    1584:	89 37       	cpi	r24, 0x79	; 121
    1586:	91 05       	cpc	r25, r1
    1588:	24 f4       	brge	.+8      	; 0x1592 <_ZN9MotorSide11SetOcrValueEi+0x38>
    158a:	88 e7       	ldi	r24, 0x78	; 120
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	99 83       	std	Y+1, r25	; 0x01
    1590:	88 83       	st	Y, r24
    1592:	88 81       	ld	r24, Y
    1594:	99 81       	ldd	r25, Y+1	; 0x01
    1596:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    159a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
    159e:	df 91       	pop	r29
    15a0:	cf 91       	pop	r28
    15a2:	1f 91       	pop	r17
    15a4:	0f 91       	pop	r16
    15a6:	08 95       	ret

000015a8 <_ZN9MotorSide9StopMotorEv>:
    15a8:	e8 e0       	ldi	r30, 0x08	; 8
    15aa:	f1 e0       	ldi	r31, 0x01	; 1
    15ac:	20 81       	ld	r18, Z
    15ae:	28 60       	ori	r18, 0x08	; 8
    15b0:	20 83       	st	Z, r18
    15b2:	20 81       	ld	r18, Z
    15b4:	24 60       	ori	r18, 0x04	; 4
    15b6:	20 83       	st	Z, r18
    15b8:	68 e7       	ldi	r22, 0x78	; 120
    15ba:	70 e0       	ldi	r23, 0x00	; 0
    15bc:	ce cf       	rjmp	.-100    	; 0x155a <_ZN9MotorSide11SetOcrValueEi>
    15be:	08 95       	ret

000015c0 <_ZN9MotorSide7OperateERhS0_>:
}


bool MotorSide::Operate(unsigned char &rx, unsigned char &Command)
{
    15c0:	cf 92       	push	r12
    15c2:	df 92       	push	r13
    15c4:	ef 92       	push	r14
    15c6:	ff 92       	push	r15
    15c8:	0f 93       	push	r16
    15ca:	1f 93       	push	r17
    15cc:	cf 93       	push	r28
    15ce:	df 93       	push	r29
    15d0:	ec 01       	movw	r28, r24
    15d2:	7b 01       	movw	r14, r22
    15d4:	8a 01       	movw	r16, r20
	
	if(IntFlag)
    15d6:	8a 81       	ldd	r24, Y+2	; 0x02
    15d8:	88 23       	and	r24, r24
    15da:	39 f1       	breq	.+78     	; 0x162a <_ZN9MotorSide7OperateERhS0_+0x6a>
	{
		Overflow = 0;
    15dc:	1b 86       	std	Y+11, r1	; 0x0b

		LastRPM = RPM;
    15de:	cf 80       	ldd	r12, Y+7	; 0x07
    15e0:	d8 84       	ldd	r13, Y+8	; 0x08
    15e2:	da 86       	std	Y+10, r13	; 0x0a
    15e4:	c9 86       	std	Y+9, r12	; 0x09

		if(Count != 0)
    15e6:	6d 81       	ldd	r22, Y+5	; 0x05
    15e8:	7e 81       	ldd	r23, Y+6	; 0x06
    15ea:	61 15       	cp	r22, r1
    15ec:	71 05       	cpc	r23, r1
    15ee:	e1 f0       	breq	.+56     	; 0x1628 <_ZN9MotorSide7OperateERhS0_+0x68>
		{
			RPM = float(3750000.f)/float(Count);
    15f0:	80 e0       	ldi	r24, 0x00	; 0
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	4a d6       	rcall	.+3220   	; 0x228a <__floatunsisf>
    15f6:	9b 01       	movw	r18, r22
    15f8:	ac 01       	movw	r20, r24
    15fa:	60 ec       	ldi	r22, 0xC0	; 192
    15fc:	71 ee       	ldi	r23, 0xE1	; 225
    15fe:	84 e6       	ldi	r24, 0x64	; 100
    1600:	9a e4       	ldi	r25, 0x4A	; 74
    1602:	aa d5       	rcall	.+2900   	; 0x2158 <__divsf3>
    1604:	16 d6       	rcall	.+3116   	; 0x2232 <__fixunssfsi>
    1606:	78 87       	std	Y+8, r23	; 0x08
    1608:	6f 83       	std	Y+7, r22	; 0x07
		}
		

		if( abs(LastRPM - RPM) > 1000 )
    160a:	96 01       	movw	r18, r12
    160c:	26 1b       	sub	r18, r22
    160e:	37 0b       	sbc	r19, r23
    1610:	c9 01       	movw	r24, r18
    1612:	99 23       	and	r25, r25
    1614:	24 f4       	brge	.+8      	; 0x161e <_ZN9MotorSide7OperateERhS0_+0x5e>
    1616:	88 27       	eor	r24, r24
    1618:	99 27       	eor	r25, r25
    161a:	82 1b       	sub	r24, r18
    161c:	93 0b       	sbc	r25, r19
    161e:	89 3e       	cpi	r24, 0xE9	; 233
    1620:	93 40       	sbci	r25, 0x03	; 3
    1622:	14 f0       	brlt	.+4      	; 0x1628 <_ZN9MotorSide7OperateERhS0_+0x68>
		{
			RPM = LastRPM;
    1624:	d8 86       	std	Y+8, r13	; 0x08
    1626:	cf 82       	std	Y+7, r12	; 0x07
		}

		IntFlag = false;
    1628:	1a 82       	std	Y+2, r1	; 0x02
 
	}

	//SetOcrValue(Ocr + Controller.Compute_PID(RPM, true));
	PWM_OCR = OCR;
    162a:	8c 85       	ldd	r24, Y+12	; 0x0c
    162c:	9d 85       	ldd	r25, Y+13	; 0x0d
    162e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
    1632:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>

*/


	
	switch(Command)
    1636:	d8 01       	movw	r26, r16
    1638:	8c 91       	ld	r24, X
    163a:	83 36       	cpi	r24, 0x63	; 99
    163c:	19 f0       	breq	.+6      	; 0x1644 <_ZN9MotorSide7OperateERhS0_+0x84>
    163e:	86 37       	cpi	r24, 0x76	; 118
    1640:	a9 f0       	breq	.+42     	; 0x166c <_ZN9MotorSide7OperateERhS0_+0xac>
    1642:	26 c0       	rjmp	.+76     	; 0x1690 <_ZN9MotorSide7OperateERhS0_+0xd0>
	void Dcr_KP(void){kp-=0.01;};
	void Inc_KI(void){ki+=0.0001;};
	void Dcr_KI(void){ki-=0.0001;};
	void Inc_KD(void){kd+=0.05;};
	void Dcr_KD(void){kd-=0.05;};
	void Inc_Setpoint(void){setpoint += SETPOINTSTEPPING;};
    1644:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1646:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1648:	0a 96       	adiw	r24, 0x0a	; 10
    164a:	9c 8f       	std	Y+28, r25	; 0x1c
    164c:	8b 8f       	std	Y+27, r24	; 0x1b
	{
		case 'c':
		Controller.Inc_Setpoint();
		OCR += 10;
    164e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1650:	9d 85       	ldd	r25, Y+13	; 0x0d
    1652:	0a 96       	adiw	r24, 0x0a	; 10
		if(OCR >  MAX_VALUE)
    1654:	81 3f       	cpi	r24, 0xF1	; 241
    1656:	ba e0       	ldi	r27, 0x0A	; 10
    1658:	9b 07       	cpc	r25, r27
    165a:	1c f4       	brge	.+6      	; 0x1662 <_ZN9MotorSide7OperateERhS0_+0xa2>
	
	switch(Command)
	{
		case 'c':
		Controller.Inc_Setpoint();
		OCR += 10;
    165c:	9d 87       	std	Y+13, r25	; 0x0d
    165e:	8c 87       	std	Y+12, r24	; 0x0c
    1660:	17 c0       	rjmp	.+46     	; 0x1690 <_ZN9MotorSide7OperateERhS0_+0xd0>
		if(OCR >  MAX_VALUE)
		{
			OCR = MAX_VALUE;
    1662:	80 ef       	ldi	r24, 0xF0	; 240
    1664:	9a e0       	ldi	r25, 0x0A	; 10
    1666:	9d 87       	std	Y+13, r25	; 0x0d
    1668:	8c 87       	std	Y+12, r24	; 0x0c
    166a:	12 c0       	rjmp	.+36     	; 0x1690 <_ZN9MotorSide7OperateERhS0_+0xd0>
	void Dcr_Setpoint(void){setpoint -= SETPOINTSTEPPING;};
    166c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    166e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1670:	0a 97       	sbiw	r24, 0x0a	; 10
    1672:	9c 8f       	std	Y+28, r25	; 0x1c
    1674:	8b 8f       	std	Y+27, r24	; 0x1b
		}
		
		break;
		case 'v':
		Controller.Dcr_Setpoint();
		OCR -= 10;
    1676:	8c 85       	ldd	r24, Y+12	; 0x0c
    1678:	9d 85       	ldd	r25, Y+13	; 0x0d
    167a:	0a 97       	sbiw	r24, 0x0a	; 10
		if(OCR < MIN_VALUE)
    167c:	88 37       	cpi	r24, 0x78	; 120
    167e:	91 05       	cpc	r25, r1
    1680:	1c f0       	brlt	.+6      	; 0x1688 <_ZN9MotorSide7OperateERhS0_+0xc8>
		}
		
		break;
		case 'v':
		Controller.Dcr_Setpoint();
		OCR -= 10;
    1682:	9d 87       	std	Y+13, r25	; 0x0d
    1684:	8c 87       	std	Y+12, r24	; 0x0c
    1686:	04 c0       	rjmp	.+8      	; 0x1690 <_ZN9MotorSide7OperateERhS0_+0xd0>
		if(OCR < MIN_VALUE)
		{
			OCR = MIN_VALUE;
    1688:	88 e7       	ldi	r24, 0x78	; 120
    168a:	90 e0       	ldi	r25, 0x00	; 0
    168c:	9d 87       	std	Y+13, r25	; 0x0d
    168e:	8c 87       	std	Y+12, r24	; 0x0c
	}
	



	switch(rx)
    1690:	d7 01       	movw	r26, r14
    1692:	ec 91       	ld	r30, X
    1694:	8e 2f       	mov	r24, r30
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	fc 01       	movw	r30, r24
    169a:	e3 55       	subi	r30, 0x53	; 83
    169c:	f1 09       	sbc	r31, r1
    169e:	e7 32       	cpi	r30, 0x27	; 39
    16a0:	f1 05       	cpc	r31, r1
    16a2:	08 f0       	brcs	.+2      	; 0x16a6 <_ZN9MotorSide7OperateERhS0_+0xe6>
    16a4:	4a c1       	rjmp	.+660    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    16a6:	88 27       	eor	r24, r24
    16a8:	e2 54       	subi	r30, 0x42	; 66
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	8f 4f       	sbci	r24, 0xFF	; 255
    16ae:	f1 c6       	rjmp	.+3554   	; 0x2492 <__tablejump2__>
	public:
	uint8_t timer;
	int setpoint,lastOutput;
	float kp,ki,kd;
	void Initialise(void);
	void Inc_KP(void){kp+=0.01;};
    16b0:	2a e0       	ldi	r18, 0x0A	; 10
    16b2:	37 ed       	ldi	r19, 0xD7	; 215
    16b4:	43 e2       	ldi	r20, 0x23	; 35
    16b6:	5c e3       	ldi	r21, 0x3C	; 60
    16b8:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16ba:	78 a1       	ldd	r23, Y+32	; 0x20
    16bc:	89 a1       	ldd	r24, Y+33	; 0x21
    16be:	9a a1       	ldd	r25, Y+34	; 0x22
    16c0:	e7 d4       	rcall	.+2510   	; 0x2090 <__addsf3>
    16c2:	6f 8f       	std	Y+31, r22	; 0x1f
    16c4:	78 a3       	std	Y+32, r23	; 0x20
	{
		
		case 'p':
		Controller.Inc_KP();
		
		uart0_putc('P');
    16c6:	89 a3       	std	Y+33, r24	; 0x21
    16c8:	9a a3       	std	Y+34, r25	; 0x22
    16ca:	80 e5       	ldi	r24, 0x50	; 80
		uart0_putc(':');
    16cc:	91 d3       	rcall	.+1826   	; 0x1df0 <_Z10uart0_putch>
    16ce:	8a e3       	ldi	r24, 0x3A	; 58
    16d0:	8f d3       	rcall	.+1822   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Controller.kp*100);
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	48 ec       	ldi	r20, 0xC8	; 200
    16d8:	52 e4       	ldi	r21, 0x42	; 66
    16da:	6f 8d       	ldd	r22, Y+31	; 0x1f
    16dc:	78 a1       	ldd	r23, Y+32	; 0x20
    16de:	89 a1       	ldd	r24, Y+33	; 0x21
    16e0:	9a a1       	ldd	r25, Y+34	; 0x22
    16e2:	61 d6       	rcall	.+3266   	; 0x23a6 <__mulsf3>
    16e4:	a1 d5       	rcall	.+2882   	; 0x2228 <__fixsfsi>
		uart0_putc('\n');
    16e6:	cb 01       	movw	r24, r22
    16e8:	98 d3       	rcall	.+1840   	; 0x1e1a <_Z12uart0_putinti>
		uart0_putc('\r');
    16ea:	8a e0       	ldi	r24, 0x0A	; 10
    16ec:	81 d3       	rcall	.+1794   	; 0x1df0 <_Z10uart0_putch>
		
		break;
    16ee:	8d e0       	ldi	r24, 0x0D	; 13
	void Dcr_KP(void){kp-=0.01;};
	void Inc_KI(void){ki+=0.0001;};
    16f0:	7f d3       	rcall	.+1790   	; 0x1df0 <_Z10uart0_putch>
    16f2:	23 c1       	rjmp	.+582    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    16f4:	27 e1       	ldi	r18, 0x17	; 23
    16f6:	37 eb       	ldi	r19, 0xB7	; 183
    16f8:	41 ed       	ldi	r20, 0xD1	; 209
    16fa:	58 e3       	ldi	r21, 0x38	; 56
    16fc:	6b a1       	ldd	r22, Y+35	; 0x23
    16fe:	7c a1       	ldd	r23, Y+36	; 0x24
    1700:	8d a1       	ldd	r24, Y+37	; 0x25
    1702:	9e a1       	ldd	r25, Y+38	; 0x26
		
		case 'i':
		Controller.Inc_KI();
		
		uart0_putc('I');
    1704:	c5 d4       	rcall	.+2442   	; 0x2090 <__addsf3>
		uart0_putc(':');
    1706:	6b a3       	std	Y+35, r22	; 0x23
		uart0_putint(Controller.ki*1000);
    1708:	7c a3       	std	Y+36, r23	; 0x24
    170a:	8d a3       	std	Y+37, r24	; 0x25
    170c:	9e a3       	std	Y+38, r25	; 0x26
    170e:	89 e4       	ldi	r24, 0x49	; 73
    1710:	6f d3       	rcall	.+1758   	; 0x1df0 <_Z10uart0_putch>
    1712:	8a e3       	ldi	r24, 0x3A	; 58
    1714:	6d d3       	rcall	.+1754   	; 0x1df0 <_Z10uart0_putch>
    1716:	20 e0       	ldi	r18, 0x00	; 0
    1718:	30 e0       	ldi	r19, 0x00	; 0
    171a:	4a e7       	ldi	r20, 0x7A	; 122
    171c:	54 e4       	ldi	r21, 0x44	; 68
    171e:	6b a1       	ldd	r22, Y+35	; 0x23
    1720:	7c a1       	ldd	r23, Y+36	; 0x24
		uart0_putc('\n');
    1722:	8d a1       	ldd	r24, Y+37	; 0x25
		uart0_putc('\r');
    1724:	9e a1       	ldd	r25, Y+38	; 0x26
    1726:	3f d6       	rcall	.+3198   	; 0x23a6 <__mulsf3>
		break;
    1728:	7f d5       	rcall	.+2814   	; 0x2228 <__fixsfsi>
	void Dcr_KI(void){ki-=0.0001;};
	void Inc_KD(void){kd+=0.05;};
    172a:	cb 01       	movw	r24, r22
    172c:	76 d3       	rcall	.+1772   	; 0x1e1a <_Z12uart0_putinti>
    172e:	8a e0       	ldi	r24, 0x0A	; 10
    1730:	5f d3       	rcall	.+1726   	; 0x1df0 <_Z10uart0_putch>
    1732:	8d e0       	ldi	r24, 0x0D	; 13
    1734:	5d d3       	rcall	.+1722   	; 0x1df0 <_Z10uart0_putch>
    1736:	01 c1       	rjmp	.+514    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    1738:	2d ec       	ldi	r18, 0xCD	; 205
    173a:	3c ec       	ldi	r19, 0xCC	; 204

		case 'd':
		Controller.Inc_KD();
		
		uart0_putc('D');
    173c:	4c e4       	ldi	r20, 0x4C	; 76
    173e:	5d e3       	ldi	r21, 0x3D	; 61
    1740:	6f a1       	ldd	r22, Y+39	; 0x27
		uart0_putc(':');
    1742:	78 a5       	ldd	r23, Y+40	; 0x28
    1744:	89 a5       	ldd	r24, Y+41	; 0x29
    1746:	9a a5       	ldd	r25, Y+42	; 0x2a
		uart0_putint(Controller.kd*100);
    1748:	a3 d4       	rcall	.+2374   	; 0x2090 <__addsf3>
    174a:	6f a3       	std	Y+39, r22	; 0x27
    174c:	78 a7       	std	Y+40, r23	; 0x28
    174e:	89 a7       	std	Y+41, r24	; 0x29
    1750:	9a a7       	std	Y+42, r25	; 0x2a
    1752:	84 e4       	ldi	r24, 0x44	; 68
    1754:	4d d3       	rcall	.+1690   	; 0x1df0 <_Z10uart0_putch>
    1756:	8a e3       	ldi	r24, 0x3A	; 58
    1758:	4b d3       	rcall	.+1686   	; 0x1df0 <_Z10uart0_putch>
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	48 ec       	ldi	r20, 0xC8	; 200
		uart0_putc('\n');
    1760:	52 e4       	ldi	r21, 0x42	; 66
    1762:	6f a1       	ldd	r22, Y+39	; 0x27
    1764:	78 a5       	ldd	r23, Y+40	; 0x28
		uart0_putc('\r');
    1766:	89 a5       	ldd	r24, Y+41	; 0x29
	uint8_t timer;
	int setpoint,lastOutput;
	float kp,ki,kd;
	void Initialise(void);
	void Inc_KP(void){kp+=0.01;};
	void Dcr_KP(void){kp-=0.01;};
    1768:	9a a5       	ldd	r25, Y+42	; 0x2a
    176a:	1d d6       	rcall	.+3130   	; 0x23a6 <__mulsf3>
    176c:	5d d5       	rcall	.+2746   	; 0x2228 <__fixsfsi>
    176e:	cb 01       	movw	r24, r22
    1770:	54 d3       	rcall	.+1704   	; 0x1e1a <_Z12uart0_putinti>
    1772:	8a e0       	ldi	r24, 0x0A	; 10
    1774:	3d d3       	rcall	.+1658   	; 0x1df0 <_Z10uart0_putch>
    1776:	8d e0       	ldi	r24, 0x0D	; 13
    1778:	3b d3       	rcall	.+1654   	; 0x1df0 <_Z10uart0_putch>
    177a:	df c0       	rjmp	.+446    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
		break;

		case 'l':
		Controller.Dcr_KP();
		
		uart0_putc('P');
    177c:	2a e0       	ldi	r18, 0x0A	; 10
    177e:	37 ed       	ldi	r19, 0xD7	; 215
		uart0_putc(':');
    1780:	43 e2       	ldi	r20, 0x23	; 35
    1782:	5c e3       	ldi	r21, 0x3C	; 60
		uart0_putint(Controller.kp*100);
    1784:	6f 8d       	ldd	r22, Y+31	; 0x1f
    1786:	78 a1       	ldd	r23, Y+32	; 0x20
    1788:	89 a1       	ldd	r24, Y+33	; 0x21
    178a:	9a a1       	ldd	r25, Y+34	; 0x22
    178c:	80 d4       	rcall	.+2304   	; 0x208e <__subsf3>
    178e:	6f 8f       	std	Y+31, r22	; 0x1f
    1790:	78 a3       	std	Y+32, r23	; 0x20
    1792:	89 a3       	std	Y+33, r24	; 0x21
    1794:	9a a3       	std	Y+34, r25	; 0x22
    1796:	80 e5       	ldi	r24, 0x50	; 80
		uart0_putc('\n');
    1798:	2b d3       	rcall	.+1622   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc('\r');
    179a:	8a e3       	ldi	r24, 0x3A	; 58
    179c:	29 d3       	rcall	.+1618   	; 0x1df0 <_Z10uart0_putch>
		

		break;
    179e:	20 e0       	ldi	r18, 0x00	; 0
	void Inc_KI(void){ki+=0.0001;};
	void Dcr_KI(void){ki-=0.0001;};
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	48 ec       	ldi	r20, 0xC8	; 200
    17a4:	52 e4       	ldi	r21, 0x42	; 66
    17a6:	6f 8d       	ldd	r22, Y+31	; 0x1f
    17a8:	78 a1       	ldd	r23, Y+32	; 0x20
    17aa:	89 a1       	ldd	r24, Y+33	; 0x21
    17ac:	9a a1       	ldd	r25, Y+34	; 0x22
    17ae:	fb d5       	rcall	.+3062   	; 0x23a6 <__mulsf3>
    17b0:	3b d5       	rcall	.+2678   	; 0x2228 <__fixsfsi>
    17b2:	cb 01       	movw	r24, r22
    17b4:	32 d3       	rcall	.+1636   	; 0x1e1a <_Z12uart0_putinti>
		
		case 'o':
		Controller.Dcr_KI();
		
		uart0_putc('I');
    17b6:	8a e0       	ldi	r24, 0x0A	; 10
    17b8:	1b d3       	rcall	.+1590   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc(':');
    17ba:	8d e0       	ldi	r24, 0x0D	; 13
    17bc:	19 d3       	rcall	.+1586   	; 0x1df0 <_Z10uart0_putch>
    17be:	bd c0       	rjmp	.+378    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
		uart0_putint(Controller.ki*1000);
    17c0:	27 e1       	ldi	r18, 0x17	; 23
    17c2:	37 eb       	ldi	r19, 0xB7	; 183
    17c4:	41 ed       	ldi	r20, 0xD1	; 209
    17c6:	58 e3       	ldi	r21, 0x38	; 56
    17c8:	6b a1       	ldd	r22, Y+35	; 0x23
    17ca:	7c a1       	ldd	r23, Y+36	; 0x24
    17cc:	8d a1       	ldd	r24, Y+37	; 0x25
    17ce:	9e a1       	ldd	r25, Y+38	; 0x26
    17d0:	5e d4       	rcall	.+2236   	; 0x208e <__subsf3>
    17d2:	6b a3       	std	Y+35, r22	; 0x23
		uart0_putc('\n');
    17d4:	7c a3       	std	Y+36, r23	; 0x24
    17d6:	8d a3       	std	Y+37, r24	; 0x25
		uart0_putc('\r');
    17d8:	9e a3       	std	Y+38, r25	; 0x26
		break;
    17da:	89 e4       	ldi	r24, 0x49	; 73
	void Inc_KD(void){kd+=0.05;};
	void Dcr_KD(void){kd-=0.05;};
    17dc:	09 d3       	rcall	.+1554   	; 0x1df0 <_Z10uart0_putch>
    17de:	8a e3       	ldi	r24, 0x3A	; 58
    17e0:	07 d3       	rcall	.+1550   	; 0x1df0 <_Z10uart0_putch>
    17e2:	20 e0       	ldi	r18, 0x00	; 0
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	4a e7       	ldi	r20, 0x7A	; 122
    17e8:	54 e4       	ldi	r21, 0x44	; 68
    17ea:	6b a1       	ldd	r22, Y+35	; 0x23
    17ec:	7c a1       	ldd	r23, Y+36	; 0x24
    17ee:	8d a1       	ldd	r24, Y+37	; 0x25

		case 'f':
		Controller.Dcr_KD();
		
		uart0_putc('D');
    17f0:	9e a1       	ldd	r25, Y+38	; 0x26
    17f2:	d9 d5       	rcall	.+2994   	; 0x23a6 <__mulsf3>
		uart0_putc(':');
    17f4:	19 d5       	rcall	.+2610   	; 0x2228 <__fixsfsi>
		uart0_putint(Controller.kd*100);
    17f6:	cb 01       	movw	r24, r22
    17f8:	10 d3       	rcall	.+1568   	; 0x1e1a <_Z12uart0_putinti>
    17fa:	8a e0       	ldi	r24, 0x0A	; 10
    17fc:	f9 d2       	rcall	.+1522   	; 0x1df0 <_Z10uart0_putch>
    17fe:	8d e0       	ldi	r24, 0x0D	; 13
    1800:	f7 d2       	rcall	.+1518   	; 0x1df0 <_Z10uart0_putch>
    1802:	9b c0       	rjmp	.+310    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    1804:	2d ec       	ldi	r18, 0xCD	; 205
    1806:	3c ec       	ldi	r19, 0xCC	; 204
    1808:	4c e4       	ldi	r20, 0x4C	; 76
		uart0_putc('\n');
    180a:	5d e3       	ldi	r21, 0x3D	; 61
    180c:	6f a1       	ldd	r22, Y+39	; 0x27
    180e:	78 a5       	ldd	r23, Y+40	; 0x28
		uart0_putc('\r');
    1810:	89 a5       	ldd	r24, Y+41	; 0x29
    1812:	9a a5       	ldd	r25, Y+42	; 0x2a
    1814:	3c d4       	rcall	.+2168   	; 0x208e <__subsf3>
	void Inc_Setpoint(void){setpoint += SETPOINTSTEPPING;};
    1816:	6f a3       	std	Y+39, r22	; 0x27
    1818:	78 a7       	std	Y+40, r23	; 0x28
    181a:	89 a7       	std	Y+41, r24	; 0x29
		break;

		case 't':
		Controller.Inc_Setpoint();
		
		uart0_putc('S');
    181c:	9a a7       	std	Y+42, r25	; 0x2a
    181e:	84 e4       	ldi	r24, 0x44	; 68
		uart0_putc(':');
    1820:	e7 d2       	rcall	.+1486   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Controller.setpoint);
    1822:	8a e3       	ldi	r24, 0x3A	; 58
    1824:	e5 d2       	rcall	.+1482   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc('\n');
    1826:	20 e0       	ldi	r18, 0x00	; 0
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	48 ec       	ldi	r20, 0xC8	; 200
		uart0_putc('\r');
    182c:	52 e4       	ldi	r21, 0x42	; 66
    182e:	6f a1       	ldd	r22, Y+39	; 0x27
    1830:	78 a5       	ldd	r23, Y+40	; 0x28
	void Dcr_Setpoint(void){setpoint -= SETPOINTSTEPPING;};
    1832:	89 a5       	ldd	r24, Y+41	; 0x29
		break;

		case 'y':
		Controller.Dcr_Setpoint();
		
		uart0_putc('S');
    1834:	9a a5       	ldd	r25, Y+42	; 0x2a
		uart0_putc(':');
    1836:	b7 d5       	rcall	.+2926   	; 0x23a6 <__mulsf3>
    1838:	f7 d4       	rcall	.+2542   	; 0x2228 <__fixsfsi>
		uart0_putint(Controller.setpoint);
    183a:	cb 01       	movw	r24, r22
    183c:	ee d2       	rcall	.+1500   	; 0x1e1a <_Z12uart0_putinti>
    183e:	8a e0       	ldi	r24, 0x0A	; 10
    1840:	d7 d2       	rcall	.+1454   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc('\n');
    1842:	8d e0       	ldi	r24, 0x0D	; 13
    1844:	d5 d2       	rcall	.+1450   	; 0x1df0 <_Z10uart0_putch>
		
		//break;
		
		case 's':
		case 'S':
		StopMotor();
    1846:	79 c0       	rjmp	.+242    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>

		uart0_puts(" A:");
    1848:	8b 8d       	ldd	r24, Y+27	; 0x1b
    184a:	9c 8d       	ldd	r25, Y+28	; 0x1c
		uart0_putint(Ocr);
    184c:	0a 96       	adiw	r24, 0x0a	; 10
    184e:	9c 8f       	std	Y+28, r25	; 0x1c
    1850:	8b 8f       	std	Y+27, r24	; 0x1b
    1852:	83 e5       	ldi	r24, 0x53	; 83

		break;
    1854:	cd d2       	rcall	.+1434   	; 0x1df0 <_Z10uart0_putch>


		case 'r':
		Controller.Set_PID(0,0,0);
    1856:	8a e3       	ldi	r24, 0x3A	; 58
    1858:	cb d2       	rcall	.+1430   	; 0x1df0 <_Z10uart0_putch>
    185a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    185c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    185e:	dd d2       	rcall	.+1466   	; 0x1e1a <_Z12uart0_putinti>
    1860:	8a e0       	ldi	r24, 0x0A	; 10
		break;

		case 'v':
		//	uart0_puts(" R:");
		//	uart0_putint(RPM);
		uart0_puts("Pa:");
    1862:	c6 d2       	rcall	.+1420   	; 0x1df0 <_Z10uart0_putch>
    1864:	8d e0       	ldi	r24, 0x0D	; 13
    1866:	c4 d2       	rcall	.+1416   	; 0x1df0 <_Z10uart0_putch>
		uart0_putint(Ocr);
    1868:	68 c0       	rjmp	.+208    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    186a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    186c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    186e:	0a 97       	sbiw	r24, 0x0a	; 10
		uart0_putc(' ');
    1870:	9c 8f       	std	Y+28, r25	; 0x1c
    1872:	8b 8f       	std	Y+27, r24	; 0x1b
    1874:	83 e5       	ldi	r24, 0x53	; 83
		uart0_putc('P');
    1876:	bc d2       	rcall	.+1400   	; 0x1df0 <_Z10uart0_putch>
    1878:	8a e3       	ldi	r24, 0x3A	; 58
    187a:	ba d2       	rcall	.+1396   	; 0x1df0 <_Z10uart0_putch>
		uart0_putc(':');
    187c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    187e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1880:	cc d2       	rcall	.+1432   	; 0x1e1a <_Z12uart0_putinti>
		uart0_putint(Controller.kp*100);
    1882:	8a e0       	ldi	r24, 0x0A	; 10
    1884:	b5 d2       	rcall	.+1386   	; 0x1df0 <_Z10uart0_putch>
    1886:	8d e0       	ldi	r24, 0x0D	; 13
    1888:	b3 d2       	rcall	.+1382   	; 0x1df0 <_Z10uart0_putch>
    188a:	57 c0       	rjmp	.+174    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    188c:	ce 01       	movw	r24, r28
    188e:	8c de       	rcall	.-744    	; 0x15a8 <_ZN9MotorSide9StopMotorEv>
    1890:	84 e6       	ldi	r24, 0x64	; 100
    1892:	92 e0       	ldi	r25, 0x02	; 2
    1894:	ea d2       	rcall	.+1492   	; 0x1e6a <_Z10uart0_putsPKc>
    1896:	88 81       	ld	r24, Y
    1898:	99 81       	ldd	r25, Y+1	; 0x01
    189a:	bf d2       	rcall	.+1406   	; 0x1e1a <_Z12uart0_putinti>
    189c:	4e c0       	rjmp	.+156    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    189e:	c1 2c       	mov	r12, r1
		uart0_putc(' ');
    18a0:	d1 2c       	mov	r13, r1
    18a2:	76 01       	movw	r14, r12
    18a4:	97 01       	movw	r18, r14
		uart0_putc('I');
    18a6:	86 01       	movw	r16, r12
    18a8:	b7 01       	movw	r22, r14
    18aa:	a6 01       	movw	r20, r12
		uart0_putc(':');
    18ac:	ce 01       	movw	r24, r28
    18ae:	0e 96       	adiw	r24, 0x0e	; 14
    18b0:	75 d1       	rcall	.+746    	; 0x1b9c <_ZN3PID7Set_PIDEfff>
		uart0_putint(Controller.ki*10000);
    18b2:	43 c0       	rjmp	.+134    	; 0x193a <_ZN9MotorSide7OperateERhS0_+0x37a>
    18b4:	81 e7       	ldi	r24, 0x71	; 113
    18b6:	92 e0       	ldi	r25, 0x02	; 2
    18b8:	d8 d2       	rcall	.+1456   	; 0x1e6a <_Z10uart0_putsPKc>
    18ba:	88 81       	ld	r24, Y
    18bc:	99 81       	ldd	r25, Y+1	; 0x01
    18be:	ad d2       	rcall	.+1370   	; 0x1e1a <_Z12uart0_putinti>
    18c0:	80 e2       	ldi	r24, 0x20	; 32
    18c2:	96 d2       	rcall	.+1324   	; 0x1df0 <_Z10uart0_putch>
    18c4:	80 e5       	ldi	r24, 0x50	; 80
    18c6:	94 d2       	rcall	.+1320   	; 0x1df0 <_Z10uart0_putch>
    18c8:	8a e3       	ldi	r24, 0x3A	; 58
    18ca:	92 d2       	rcall	.+1316   	; 0x1df0 <_Z10uart0_putch>
    18cc:	20 e0       	ldi	r18, 0x00	; 0
    18ce:	30 e0       	ldi	r19, 0x00	; 0
		uart0_putc(' ');
    18d0:	48 ec       	ldi	r20, 0xC8	; 200
    18d2:	52 e4       	ldi	r21, 0x42	; 66
    18d4:	6f 8d       	ldd	r22, Y+31	; 0x1f
		uart0_putc('D');
    18d6:	78 a1       	ldd	r23, Y+32	; 0x20
    18d8:	89 a1       	ldd	r24, Y+33	; 0x21
    18da:	9a a1       	ldd	r25, Y+34	; 0x22
		uart0_putc(':');
    18dc:	64 d5       	rcall	.+2760   	; 0x23a6 <__mulsf3>
    18de:	a4 d4       	rcall	.+2376   	; 0x2228 <__fixsfsi>
    18e0:	cb 01       	movw	r24, r22
		uart0_putint(Controller.kd*100);
    18e2:	9b d2       	rcall	.+1334   	; 0x1e1a <_Z12uart0_putinti>
    18e4:	80 e2       	ldi	r24, 0x20	; 32
    18e6:	84 d2       	rcall	.+1288   	; 0x1df0 <_Z10uart0_putch>
    18e8:	89 e4       	ldi	r24, 0x49	; 73
    18ea:	82 d2       	rcall	.+1284   	; 0x1df0 <_Z10uart0_putch>
    18ec:	8a e3       	ldi	r24, 0x3A	; 58
    18ee:	80 d2       	rcall	.+1280   	; 0x1df0 <_Z10uart0_putch>
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	30 e4       	ldi	r19, 0x40	; 64
    18f4:	4c e1       	ldi	r20, 0x1C	; 28
    18f6:	56 e4       	ldi	r21, 0x46	; 70
    18f8:	6b a1       	ldd	r22, Y+35	; 0x23
    18fa:	7c a1       	ldd	r23, Y+36	; 0x24
    18fc:	8d a1       	ldd	r24, Y+37	; 0x25
    18fe:	9e a1       	ldd	r25, Y+38	; 0x26
		uart0_putc('\n');
    1900:	52 d5       	rcall	.+2724   	; 0x23a6 <__mulsf3>
    1902:	92 d4       	rcall	.+2340   	; 0x2228 <__fixsfsi>
    1904:	cb 01       	movw	r24, r22
		uart0_putc('\r');
    1906:	89 d2       	rcall	.+1298   	; 0x1e1a <_Z12uart0_putinti>
    1908:	80 e2       	ldi	r24, 0x20	; 32
    190a:	72 d2       	rcall	.+1252   	; 0x1df0 <_Z10uart0_putch>
		//uart0_puts(" S:");
		//uart0_putint(Controller.setpoint);
		uart0_puts("\n\r");
    190c:	84 e4       	ldi	r24, 0x44	; 68
    190e:	70 d2       	rcall	.+1248   	; 0x1df0 <_Z10uart0_putch>
    1910:	8a e3       	ldi	r24, 0x3A	; 58
    1912:	6e d2       	rcall	.+1244   	; 0x1df0 <_Z10uart0_putch>
		break;
	}

	return false;
}
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	30 e0       	ldi	r19, 0x00	; 0
    1918:	48 ec       	ldi	r20, 0xC8	; 200
    191a:	52 e4       	ldi	r21, 0x42	; 66
    191c:	6f a1       	ldd	r22, Y+39	; 0x27
    191e:	78 a5       	ldd	r23, Y+40	; 0x28
    1920:	89 a5       	ldd	r24, Y+41	; 0x29
    1922:	9a a5       	ldd	r25, Y+42	; 0x2a
    1924:	40 d5       	rcall	.+2688   	; 0x23a6 <__mulsf3>
    1926:	80 d4       	rcall	.+2304   	; 0x2228 <__fixsfsi>
    1928:	cb 01       	movw	r24, r22
    192a:	77 d2       	rcall	.+1262   	; 0x1e1a <_Z12uart0_putinti>
    192c:	8a e0       	ldi	r24, 0x0A	; 10
    192e:	60 d2       	rcall	.+1216   	; 0x1df0 <_Z10uart0_putch>
    1930:	8d e0       	ldi	r24, 0x0D	; 13
    1932:	5e d2       	rcall	.+1212   	; 0x1df0 <_Z10uart0_putch>
    1934:	81 e6       	ldi	r24, 0x61	; 97
    1936:	92 e0       	ldi	r25, 0x02	; 2
    1938:	98 d2       	rcall	.+1328   	; 0x1e6a <_Z10uart0_putsPKc>
    193a:	80 e0       	ldi	r24, 0x00	; 0
    193c:	df 91       	pop	r29
    193e:	cf 91       	pop	r28
    1940:	1f 91       	pop	r17
    1942:	0f 91       	pop	r16
    1944:	ff 90       	pop	r15
    1946:	ef 90       	pop	r14
    1948:	df 90       	pop	r13
    194a:	cf 90       	pop	r12
    194c:	08 95       	ret

0000194e <_ZN6TMotor15InitLimitSwitchEv>:


void TMotor::DoNothing()
{
	uart0_puts("This is nothing\n\r");
	uart3_puts("This is nothing\n\r");
    194e:	3f 98       	cbi	0x07, 7	; 7
    1950:	47 9a       	sbi	0x08, 7	; 8
    1952:	3d 98       	cbi	0x07, 5	; 7
    1954:	45 9a       	sbi	0x08, 5	; 8
    1956:	08 95       	ret

00001958 <_ZN6TMotor19SetForwardDirectionEv>:
    1958:	e8 e0       	ldi	r30, 0x08	; 8
    195a:	f1 e0       	ldi	r31, 0x01	; 1
    195c:	80 81       	ld	r24, Z
    195e:	81 60       	ori	r24, 0x01	; 1
    1960:	80 83       	st	Z, r24
    1962:	80 81       	ld	r24, Z
    1964:	8d 7f       	andi	r24, 0xFD	; 253
    1966:	80 83       	st	Z, r24
    1968:	08 95       	ret

0000196a <_ZN6TMotor19SetReverseDirectionEv>:
    196a:	e8 e0       	ldi	r30, 0x08	; 8
    196c:	f1 e0       	ldi	r31, 0x01	; 1
    196e:	80 81       	ld	r24, Z
    1970:	8e 7f       	andi	r24, 0xFE	; 254
    1972:	80 83       	st	Z, r24
    1974:	80 81       	ld	r24, Z
    1976:	82 60       	ori	r24, 0x02	; 2
    1978:	80 83       	st	Z, r24
    197a:	08 95       	ret

0000197c <_ZN6TMotor9StopMotorEv>:
    197c:	e8 e0       	ldi	r30, 0x08	; 8
    197e:	f1 e0       	ldi	r31, 0x01	; 1
    1980:	80 81       	ld	r24, Z
    1982:	81 60       	ori	r24, 0x01	; 1
    1984:	80 83       	st	Z, r24
    1986:	80 81       	ld	r24, Z
    1988:	82 60       	ori	r24, 0x02	; 2
    198a:	80 83       	st	Z, r24
    198c:	e2 e0       	ldi	r30, 0x02	; 2
    198e:	f1 e0       	ldi	r31, 0x01	; 1
    1990:	80 81       	ld	r24, Z
    1992:	8f 7e       	andi	r24, 0xEF	; 239
    1994:	80 83       	st	Z, r24
    1996:	08 95       	ret

00001998 <_ZN6TMotor11MoveForwardEv>:
    1998:	df df       	rcall	.-66     	; 0x1958 <_ZN6TMotor19SetForwardDirectionEv>
    199a:	e2 e0       	ldi	r30, 0x02	; 2
    199c:	f1 e0       	ldi	r31, 0x01	; 1
    199e:	80 81       	ld	r24, Z
    19a0:	80 61       	ori	r24, 0x10	; 16
    19a2:	80 83       	st	Z, r24
    19a4:	08 95       	ret

000019a6 <_ZN6TMotor12MoveBackwardEv>:
    19a6:	e1 df       	rcall	.-62     	; 0x196a <_ZN6TMotor19SetReverseDirectionEv>
    19a8:	e2 e0       	ldi	r30, 0x02	; 2
    19aa:	f1 e0       	ldi	r31, 0x01	; 1
    19ac:	80 81       	ld	r24, Z
    19ae:	80 61       	ori	r24, 0x10	; 16
    19b0:	80 83       	st	Z, r24
    19b2:	08 95       	ret

000019b4 <_ZN6TMotor10InitialiseEv>:
    19b4:	cf 93       	push	r28
    19b6:	df 93       	push	r29
    19b8:	ec 01       	movw	r28, r24
    19ba:	c9 df       	rcall	.-110    	; 0x194e <_ZN6TMotor15InitLimitSwitchEv>
    19bc:	ce 01       	movw	r24, r28
    19be:	cc df       	rcall	.-104    	; 0x1958 <_ZN6TMotor19SetForwardDirectionEv>
    19c0:	e7 e0       	ldi	r30, 0x07	; 7
    19c2:	f1 e0       	ldi	r31, 0x01	; 1
    19c4:	80 81       	ld	r24, Z
    19c6:	82 60       	ori	r24, 0x02	; 2
    19c8:	80 83       	st	Z, r24
    19ca:	80 81       	ld	r24, Z
    19cc:	81 60       	ori	r24, 0x01	; 1
    19ce:	80 83       	st	Z, r24
    19d0:	e1 e0       	ldi	r30, 0x01	; 1
    19d2:	f1 e0       	ldi	r31, 0x01	; 1
    19d4:	80 81       	ld	r24, Z
    19d6:	80 61       	ori	r24, 0x10	; 16
    19d8:	80 83       	st	Z, r24
    19da:	1e 82       	std	Y+6, r1	; 0x06
    19dc:	86 e0       	ldi	r24, 0x06	; 6
    19de:	8d 83       	std	Y+5, r24	; 0x05
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	8a 83       	std	Y+2, r24	; 0x02
    19e4:	8b 83       	std	Y+3, r24	; 0x03
    19e6:	1c 82       	std	Y+4, r1	; 0x04
    19e8:	88 87       	std	Y+8, r24	; 0x08
    19ea:	1f 82       	std	Y+7, r1	; 0x07
    19ec:	19 86       	std	Y+9, r1	; 0x09
    19ee:	ce 01       	movw	r24, r28
    19f0:	da df       	rcall	.-76     	; 0x19a6 <_ZN6TMotor12MoveBackwardEv>
    19f2:	df 91       	pop	r29
    19f4:	cf 91       	pop	r28
    19f6:	08 95       	ret

000019f8 <_ZN6TMotor12ControlLogicEv>:
    19f8:	fc 01       	movw	r30, r24
    19fa:	96 81       	ldd	r25, Z+6	; 0x06
    19fc:	92 30       	cpi	r25, 0x02	; 2
    19fe:	79 f0       	breq	.+30     	; 0x1a1e <_ZN6TMotor12ControlLogicEv+0x26>
    1a00:	18 f4       	brcc	.+6      	; 0x1a08 <_ZN6TMotor12ControlLogicEv+0x10>
    1a02:	91 30       	cpi	r25, 0x01	; 1
    1a04:	31 f0       	breq	.+12     	; 0x1a12 <_ZN6TMotor12ControlLogicEv+0x1a>
    1a06:	08 95       	ret
    1a08:	93 30       	cpi	r25, 0x03	; 3
    1a0a:	79 f0       	breq	.+30     	; 0x1a2a <_ZN6TMotor12ControlLogicEv+0x32>
    1a0c:	94 30       	cpi	r25, 0x04	; 4
    1a0e:	e9 f0       	breq	.+58     	; 0x1a4a <_ZN6TMotor12ControlLogicEv+0x52>
    1a10:	08 95       	ret
    1a12:	83 81       	ldd	r24, Z+3	; 0x03
    1a14:	88 23       	and	r24, r24
    1a16:	f1 f0       	breq	.+60     	; 0x1a54 <_ZN6TMotor12ControlLogicEv+0x5c>
    1a18:	cf 01       	movw	r24, r30
    1a1a:	c5 cf       	rjmp	.-118    	; 0x19a6 <_ZN6TMotor12MoveBackwardEv>
    1a1c:	08 95       	ret
    1a1e:	83 81       	ldd	r24, Z+3	; 0x03
    1a20:	88 23       	and	r24, r24
    1a22:	c1 f0       	breq	.+48     	; 0x1a54 <_ZN6TMotor12ControlLogicEv+0x5c>
    1a24:	cf 01       	movw	r24, r30
    1a26:	aa cf       	rjmp	.-172    	; 0x197c <_ZN6TMotor9StopMotorEv>
    1a28:	08 95       	ret
    1a2a:	83 81       	ldd	r24, Z+3	; 0x03
    1a2c:	88 23       	and	r24, r24
    1a2e:	91 f0       	breq	.+36     	; 0x1a54 <_ZN6TMotor12ControlLogicEv+0x5c>
    1a30:	cf 01       	movw	r24, r30
    1a32:	a4 df       	rcall	.-184    	; 0x197c <_ZN6TMotor9StopMotorEv>
    1a34:	61 e0       	ldi	r22, 0x01	; 1
    1a36:	8d e8       	ldi	r24, 0x8D	; 141
    1a38:	92 e0       	ldi	r25, 0x02	; 2
    1a3a:	0e 94 0e 03 	call	0x61c	; 0x61c <_ZN12MzMotorFront7OperateEb>
    1a3e:	61 e0       	ldi	r22, 0x01	; 1
    1a40:	81 e8       	ldi	r24, 0x81	; 129
    1a42:	92 e0       	ldi	r25, 0x02	; 2
    1a44:	0c 94 90 02 	jmp	0x520	; 0x520 <_ZN11MzMotorBack7OperateEb>
    1a48:	08 95       	ret
    1a4a:	83 81       	ldd	r24, Z+3	; 0x03
    1a4c:	88 23       	and	r24, r24
    1a4e:	11 f0       	breq	.+4      	; 0x1a54 <_ZN6TMotor12ControlLogicEv+0x5c>
    1a50:	cf 01       	movw	r24, r30
    1a52:	a9 cf       	rjmp	.-174    	; 0x19a6 <_ZN6TMotor12MoveBackwardEv>
    1a54:	08 95       	ret

00001a56 <_ZN6TMotor12ProcessInputEh>:
    1a56:	64 37       	cpi	r22, 0x74	; 116
    1a58:	79 f4       	brne	.+30     	; 0x1a78 <_ZN6TMotor12ProcessInputEh+0x22>
    1a5a:	fc 01       	movw	r30, r24
    1a5c:	26 81       	ldd	r18, Z+6	; 0x06
    1a5e:	21 11       	cpse	r18, r1
    1a60:	0b c0       	rjmp	.+22     	; 0x1a78 <_ZN6TMotor12ProcessInputEh+0x22>
    1a62:	25 81       	ldd	r18, Z+5	; 0x05
    1a64:	27 30       	cpi	r18, 0x07	; 7
    1a66:	11 f4       	brne	.+4      	; 0x1a6c <_ZN6TMotor12ProcessInputEh+0x16>
    1a68:	97 cf       	rjmp	.-210    	; 0x1998 <_ZN6TMotor11MoveForwardEv>
    1a6a:	08 95       	ret
    1a6c:	25 81       	ldd	r18, Z+5	; 0x05
    1a6e:	26 30       	cpi	r18, 0x06	; 6
    1a70:	19 f4       	brne	.+6      	; 0x1a78 <_ZN6TMotor12ProcessInputEh+0x22>
    1a72:	27 81       	ldd	r18, Z+7	; 0x07
    1a74:	21 11       	cpse	r18, r1
    1a76:	90 cf       	rjmp	.-224    	; 0x1998 <_ZN6TMotor11MoveForwardEv>
    1a78:	08 95       	ret

00001a7a <_ZN6TMotor12UpdateStatusEv>:
    1a7a:	fc 01       	movw	r30, r24
    1a7c:	84 81       	ldd	r24, Z+4	; 0x04
    1a7e:	88 23       	and	r24, r24
    1a80:	e9 f1       	breq	.+122    	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1a82:	85 81       	ldd	r24, Z+5	; 0x05
    1a84:	88 23       	and	r24, r24
    1a86:	e1 f0       	breq	.+56     	; 0x1ac0 <_ZN6TMotor12UpdateStatusEv+0x46>
    1a88:	85 81       	ldd	r24, Z+5	; 0x05
    1a8a:	86 30       	cpi	r24, 0x06	; 6
    1a8c:	21 f4       	brne	.+8      	; 0x1a96 <_ZN6TMotor12UpdateStatusEv+0x1c>
    1a8e:	15 82       	std	Z+5, r1	; 0x05
    1a90:	82 e0       	ldi	r24, 0x02	; 2
    1a92:	86 83       	std	Z+6, r24	; 0x06
    1a94:	33 c0       	rjmp	.+102    	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1a96:	85 81       	ldd	r24, Z+5	; 0x05
    1a98:	87 30       	cpi	r24, 0x07	; 7
    1a9a:	21 f4       	brne	.+8      	; 0x1aa4 <_ZN6TMotor12UpdateStatusEv+0x2a>
    1a9c:	15 82       	std	Z+5, r1	; 0x05
    1a9e:	81 e0       	ldi	r24, 0x01	; 1
    1aa0:	86 83       	std	Z+6, r24	; 0x06
    1aa2:	2c c0       	rjmp	.+88     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1aa4:	85 81       	ldd	r24, Z+5	; 0x05
    1aa6:	88 30       	cpi	r24, 0x08	; 8
    1aa8:	21 f4       	brne	.+8      	; 0x1ab2 <_ZN6TMotor12UpdateStatusEv+0x38>
    1aaa:	15 82       	std	Z+5, r1	; 0x05
    1aac:	84 e0       	ldi	r24, 0x04	; 4
    1aae:	86 83       	std	Z+6, r24	; 0x06
    1ab0:	25 c0       	rjmp	.+74     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ab2:	85 81       	ldd	r24, Z+5	; 0x05
    1ab4:	85 30       	cpi	r24, 0x05	; 5
    1ab6:	11 f5       	brne	.+68     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ab8:	15 82       	std	Z+5, r1	; 0x05
    1aba:	83 e0       	ldi	r24, 0x03	; 3
    1abc:	86 83       	std	Z+6, r24	; 0x06
    1abe:	1e c0       	rjmp	.+60     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ac0:	86 81       	ldd	r24, Z+6	; 0x06
    1ac2:	88 23       	and	r24, r24
    1ac4:	d9 f0       	breq	.+54     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ac6:	86 81       	ldd	r24, Z+6	; 0x06
    1ac8:	82 30       	cpi	r24, 0x02	; 2
    1aca:	21 f4       	brne	.+8      	; 0x1ad4 <_ZN6TMotor12UpdateStatusEv+0x5a>
    1acc:	87 e0       	ldi	r24, 0x07	; 7
    1ace:	85 83       	std	Z+5, r24	; 0x05
    1ad0:	16 82       	std	Z+6, r1	; 0x06
    1ad2:	14 c0       	rjmp	.+40     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ad4:	86 81       	ldd	r24, Z+6	; 0x06
    1ad6:	84 30       	cpi	r24, 0x04	; 4
    1ad8:	21 f4       	brne	.+8      	; 0x1ae2 <_ZN6TMotor12UpdateStatusEv+0x68>
    1ada:	85 e0       	ldi	r24, 0x05	; 5
    1adc:	85 83       	std	Z+5, r24	; 0x05
    1ade:	16 82       	std	Z+6, r1	; 0x06
    1ae0:	0d c0       	rjmp	.+26     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1ae2:	86 81       	ldd	r24, Z+6	; 0x06
    1ae4:	81 30       	cpi	r24, 0x01	; 1
    1ae6:	21 f4       	brne	.+8      	; 0x1af0 <_ZN6TMotor12UpdateStatusEv+0x76>
    1ae8:	88 e0       	ldi	r24, 0x08	; 8
    1aea:	85 83       	std	Z+5, r24	; 0x05
    1aec:	16 82       	std	Z+6, r1	; 0x06
    1aee:	06 c0       	rjmp	.+12     	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1af0:	86 81       	ldd	r24, Z+6	; 0x06
    1af2:	83 30       	cpi	r24, 0x03	; 3
    1af4:	19 f4       	brne	.+6      	; 0x1afc <_ZN6TMotor12UpdateStatusEv+0x82>
    1af6:	86 e0       	ldi	r24, 0x06	; 6
    1af8:	85 83       	std	Z+5, r24	; 0x05
    1afa:	16 82       	std	Z+6, r1	; 0x06
    1afc:	14 82       	std	Z+4, r1	; 0x04
    1afe:	08 95       	ret

00001b00 <_ZN6TMotor7OperateEh>:




bool TMotor::Operate( unsigned char Rx )
{	
    1b00:	cf 93       	push	r28
    1b02:	df 93       	push	r29
    1b04:	ec 01       	movw	r28, r24
	
	if(EnableControl)
    1b06:	89 85       	ldd	r24, Y+9	; 0x09
    1b08:	88 23       	and	r24, r24
    1b0a:	f1 f0       	breq	.+60     	; 0x1b48 <_ZN6TMotor7OperateEh+0x48>
	{
		LimitFlag = READ(FL_INTPIN);
    1b0c:	86 b1       	in	r24, 0x06	; 6
    1b0e:	88 1f       	adc	r24, r24
    1b10:	88 27       	eor	r24, r24
    1b12:	88 1f       	adc	r24, r24
    1b14:	8b 83       	std	Y+3, r24	; 0x03
		ChangeFlag = (LastState != LimitFlag);
    1b16:	9b 81       	ldd	r25, Y+3	; 0x03
    1b18:	81 e0       	ldi	r24, 0x01	; 1
    1b1a:	2a 81       	ldd	r18, Y+2	; 0x02
    1b1c:	29 13       	cpse	r18, r25
    1b1e:	01 c0       	rjmp	.+2      	; 0x1b22 <_ZN6TMotor7OperateEh+0x22>
    1b20:	80 e0       	ldi	r24, 0x00	; 0
    1b22:	8c 83       	std	Y+4, r24	; 0x04
		LastState = LimitFlag ;
    1b24:	8b 81       	ldd	r24, Y+3	; 0x03
    1b26:	8a 83       	std	Y+2, r24	; 0x02

		
		if(MagazineFront.LimitFlag && MagazineBack.LimitFlag)
    1b28:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <MagazineFront+0x3>
    1b2c:	88 23       	and	r24, r24
    1b2e:	e1 f0       	breq	.+56     	; 0x1b68 <_ZN6TMotor7OperateEh+0x68>
    1b30:	80 91 87 02 	lds	r24, 0x0287	; 0x800287 <MagazineBack+0x6>
    1b34:	81 11       	cpse	r24, r1
    1b36:	15 c0       	rjmp	.+42     	; 0x1b62 <_ZN6TMotor7OperateEh+0x62>
    1b38:	17 c0       	rjmp	.+46     	; 0x1b68 <_ZN6TMotor7OperateEh+0x68>
			ReadyFlag = false;
		}



		ProcessInput(Rx);
    1b3a:	ce 01       	movw	r24, r28
		ControlLogic();
    1b3c:	8c df       	rcall	.-232    	; 0x1a56 <_ZN6TMotor12ProcessInputEh>
		UpdateStatus();
    1b3e:	ce 01       	movw	r24, r28
    1b40:	5b df       	rcall	.-330    	; 0x19f8 <_ZN6TMotor12ControlLogicEv>
    1b42:	ce 01       	movw	r24, r28
    1b44:	9a df       	rcall	.-204    	; 0x1a7a <_ZN6TMotor12UpdateStatusEv>

	}
	else
	{	

		if(!READ(DD_HOMELIMIT))
    1b46:	12 c0       	rjmp	.+36     	; 0x1b6c <_ZN6TMotor7OperateEh+0x6c>
    1b48:	35 99       	sbic	0x06, 5	; 6
		{
			EnableControl = true;
    1b4a:	08 c0       	rjmp	.+16     	; 0x1b5c <_ZN6TMotor7OperateEh+0x5c>
    1b4c:	81 e0       	ldi	r24, 0x01	; 1
			Position = HOMEPOSITION;
    1b4e:	89 87       	std	Y+9, r24	; 0x09
			Status   = NOTGOINGANYWHERE;
    1b50:	86 e0       	ldi	r24, 0x06	; 6
			StopMotor();
    1b52:	8d 83       	std	Y+5, r24	; 0x05
    1b54:	1e 82       	std	Y+6, r1	; 0x06
    1b56:	ce 01       	movw	r24, r28
		}
		else
		{
			MoveBackward();
    1b58:	11 df       	rcall	.-478    	; 0x197c <_ZN6TMotor9StopMotorEv>
    1b5a:	08 c0       	rjmp	.+16     	; 0x1b6c <_ZN6TMotor7OperateEh+0x6c>
    1b5c:	ce 01       	movw	r24, r28
		}
	}

	

	return true;
    1b5e:	23 df       	rcall	.-442    	; 0x19a6 <_ZN6TMotor12MoveBackwardEv>
		LastState = LimitFlag ;

		
		if(MagazineFront.LimitFlag && MagazineBack.LimitFlag)
		{
			ReadyFlag = true;
    1b60:	05 c0       	rjmp	.+10     	; 0x1b6c <_ZN6TMotor7OperateEh+0x6c>
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	8f 83       	std	Y+7, r24	; 0x07
		}
		else
		{
			ReadyFlag = false;
    1b66:	e9 cf       	rjmp	.-46     	; 0x1b3a <_ZN6TMotor7OperateEh+0x3a>
    1b68:	1f 82       	std	Y+7, r1	; 0x07

	

	return true;

}
    1b6a:	e7 cf       	rjmp	.-50     	; 0x1b3a <_ZN6TMotor7OperateEh+0x3a>
    1b6c:	81 e0       	ldi	r24, 0x01	; 1
    1b6e:	df 91       	pop	r29
    1b70:	cf 91       	pop	r28
	CLEAR(DD_M);
}


void TMotor::MoveForward()
{
    1b72:	08 95       	ret

00001b74 <_ZN3PID10InitialiseEv>:
	return kd;
}
int PID::Get_Setpoint()
{
	return setpoint;
}
    1b74:	fc 01       	movw	r30, r24
    1b76:	ae e6       	ldi	r26, 0x6E	; 110
    1b78:	b0 e0       	ldi	r27, 0x00	; 0
    1b7a:	9c 91       	ld	r25, X
    1b7c:	91 60       	ori	r25, 0x01	; 1
    1b7e:	9c 93       	st	X, r25
    1b80:	95 b5       	in	r25, 0x25	; 37
    1b82:	94 60       	ori	r25, 0x04	; 4
    1b84:	95 bd       	out	0x25, r25	; 37
    1b86:	8c ed       	ldi	r24, 0xDC	; 220
    1b88:	95 e0       	ldi	r25, 0x05	; 5
    1b8a:	96 87       	std	Z+14, r25	; 0x0e
    1b8c:	85 87       	std	Z+13, r24	; 0x0d
    1b8e:	81 e0       	ldi	r24, 0x01	; 1
    1b90:	83 87       	std	Z+11, r24	; 0x0b
    1b92:	08 95       	ret

00001b94 <_ZN3PID12Set_SetpointEi>:
    1b94:	fc 01       	movw	r30, r24
    1b96:	76 87       	std	Z+14, r23	; 0x0e
    1b98:	65 87       	std	Z+13, r22	; 0x0d
    1b9a:	08 95       	ret

00001b9c <_ZN3PID7Set_PIDEfff>:
    1b9c:	cf 92       	push	r12
    1b9e:	df 92       	push	r13
    1ba0:	ef 92       	push	r14
    1ba2:	ff 92       	push	r15
    1ba4:	0f 93       	push	r16
    1ba6:	1f 93       	push	r17
    1ba8:	fc 01       	movw	r30, r24
    1baa:	41 8b       	std	Z+17, r20	; 0x11
    1bac:	52 8b       	std	Z+18, r21	; 0x12
    1bae:	63 8b       	std	Z+19, r22	; 0x13
    1bb0:	74 8b       	std	Z+20, r23	; 0x14
    1bb2:	05 8b       	std	Z+21, r16	; 0x15
    1bb4:	16 8b       	std	Z+22, r17	; 0x16
    1bb6:	27 8b       	std	Z+23, r18	; 0x17
    1bb8:	30 8f       	std	Z+24, r19	; 0x18
    1bba:	c1 8e       	std	Z+25, r12	; 0x19
    1bbc:	d2 8e       	std	Z+26, r13	; 0x1a
    1bbe:	e3 8e       	std	Z+27, r14	; 0x1b
    1bc0:	f4 8e       	std	Z+28, r15	; 0x1c
    1bc2:	1f 91       	pop	r17
    1bc4:	0f 91       	pop	r16
    1bc6:	ff 90       	pop	r15
    1bc8:	ef 90       	pop	r14
    1bca:	df 90       	pop	r13
    1bcc:	cf 90       	pop	r12
    1bce:	08 95       	ret

00001bd0 <_ZN3PID11Compute_PIDEib>:

int PID::Compute_PID(int currentRPM,bool LowFlag)
{
    1bd0:	8f 92       	push	r8
    1bd2:	9f 92       	push	r9
    1bd4:	af 92       	push	r10
    1bd6:	bf 92       	push	r11
    1bd8:	cf 92       	push	r12
    1bda:	df 92       	push	r13
    1bdc:	ef 92       	push	r14
    1bde:	ff 92       	push	r15
    1be0:	0f 93       	push	r16
    1be2:	1f 93       	push	r17
    1be4:	cf 93       	push	r28
    1be6:	df 93       	push	r29
    1be8:	ec 01       	movw	r28, r24
    1bea:	8b 01       	movw	r16, r22
	static int output;
	static uint16_t TimeLimit = 0;
	TimeLimit = 0;
    1bec:	10 92 1f 03 	sts	0x031F, r1	; 0x80031f <_ZZN3PID11Compute_PIDEibE9TimeLimit+0x1>
    1bf0:	10 92 1e 03 	sts	0x031E, r1	; 0x80031e <_ZZN3PID11Compute_PIDEibE9TimeLimit>
	if(setpoint < 0 )
    1bf4:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bf6:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bf8:	99 23       	and	r25, r25
    1bfa:	14 f4       	brge	.+4      	; 0x1c00 <_ZN3PID11Compute_PIDEib+0x30>
	{
		setpoint = 0;
    1bfc:	1e 86       	std	Y+14, r1	; 0x0e
    1bfe:	1d 86       	std	Y+13, r1	; 0x0d
	}
	if(LowFlag)
    1c00:	44 23       	and	r20, r20
    1c02:	51 f0       	breq	.+20     	; 0x1c18 <_ZN3PID11Compute_PIDEib+0x48>
		{
			TimeLimit = 5;
    1c04:	85 e0       	ldi	r24, 0x05	; 5
    1c06:	90 e0       	ldi	r25, 0x00	; 0
    1c08:	90 93 1f 03 	sts	0x031F, r25	; 0x80031f <_ZZN3PID11Compute_PIDEibE9TimeLimit+0x1>
    1c0c:	80 93 1e 03 	sts	0x031E, r24	; 0x80031e <_ZZN3PID11Compute_PIDEibE9TimeLimit>

		}

	if(timer >= TimeLimit)
    1c10:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c12:	85 30       	cpi	r24, 0x05	; 5
    1c14:	08 f4       	brcc	.+2      	; 0x1c18 <_ZN3PID11Compute_PIDEib+0x48>
    1c16:	4c c0       	rjmp	.+152    	; 0x1cb0 <_ZN3PID11Compute_PIDEib+0xe0>
	{
		error = setpoint - currentRPM; //speed error
    1c18:	6d 85       	ldd	r22, Y+13	; 0x0d
    1c1a:	7e 85       	ldd	r23, Y+14	; 0x0e
    1c1c:	60 1b       	sub	r22, r16
    1c1e:	71 0b       	sbc	r23, r17
    1c20:	7a 87       	std	Y+10, r23	; 0x0a
    1c22:	69 87       	std	Y+9, r22	; 0x09
		
		//if(abs(error) > 10)
		{
			pTerm = kp * error;
    1c24:	07 2e       	mov	r0, r23
    1c26:	00 0c       	add	r0, r0
    1c28:	88 0b       	sbc	r24, r24
    1c2a:	99 0b       	sbc	r25, r25
    1c2c:	30 d3       	rcall	.+1632   	; 0x228e <__floatsisf>
    1c2e:	4b 01       	movw	r8, r22
    1c30:	5c 01       	movw	r10, r24
    1c32:	29 89       	ldd	r18, Y+17	; 0x11
    1c34:	3a 89       	ldd	r19, Y+18	; 0x12
    1c36:	4b 89       	ldd	r20, Y+19	; 0x13
    1c38:	5c 89       	ldd	r21, Y+20	; 0x14
    1c3a:	b5 d3       	rcall	.+1898   	; 0x23a6 <__mulsf3>
    1c3c:	f5 d2       	rcall	.+1514   	; 0x2228 <__fixsfsi>
    1c3e:	6b 01       	movw	r12, r22
    1c40:	7c 01       	movw	r14, r24
    1c42:	7a 83       	std	Y+2, r23	; 0x02
    1c44:	69 83       	std	Y+1, r22	; 0x01
			
			iTerm += ki*error;
    1c46:	2d 89       	ldd	r18, Y+21	; 0x15
    1c48:	3e 89       	ldd	r19, Y+22	; 0x16
    1c4a:	4f 89       	ldd	r20, Y+23	; 0x17
    1c4c:	58 8d       	ldd	r21, Y+24	; 0x18
    1c4e:	c5 01       	movw	r24, r10
    1c50:	b4 01       	movw	r22, r8
    1c52:	a9 d3       	rcall	.+1874   	; 0x23a6 <__mulsf3>
    1c54:	4b 01       	movw	r8, r22
    1c56:	5c 01       	movw	r10, r24
    1c58:	6b 81       	ldd	r22, Y+3	; 0x03
    1c5a:	7c 81       	ldd	r23, Y+4	; 0x04
    1c5c:	07 2e       	mov	r0, r23
    1c5e:	00 0c       	add	r0, r0
    1c60:	88 0b       	sbc	r24, r24
    1c62:	99 0b       	sbc	r25, r25
    1c64:	14 d3       	rcall	.+1576   	; 0x228e <__floatsisf>
    1c66:	9b 01       	movw	r18, r22
    1c68:	ac 01       	movw	r20, r24
    1c6a:	c5 01       	movw	r24, r10
    1c6c:	b4 01       	movw	r22, r8
    1c6e:	10 d2       	rcall	.+1056   	; 0x2090 <__addsf3>
    1c70:	db d2       	rcall	.+1462   	; 0x2228 <__fixsfsi>
    1c72:	4b 01       	movw	r8, r22
    1c74:	5c 01       	movw	r10, r24
    1c76:	7c 83       	std	Y+4, r23	; 0x04
    1c78:	6b 83       	std	Y+3, r22	; 0x03
			
			dTerm = kd*(currentRPM-lastRPM);
    1c7a:	8f 81       	ldd	r24, Y+7	; 0x07
    1c7c:	98 85       	ldd	r25, Y+8	; 0x08
    1c7e:	b8 01       	movw	r22, r16
    1c80:	68 1b       	sub	r22, r24
    1c82:	79 0b       	sbc	r23, r25
    1c84:	07 2e       	mov	r0, r23
    1c86:	00 0c       	add	r0, r0
    1c88:	88 0b       	sbc	r24, r24
    1c8a:	99 0b       	sbc	r25, r25
    1c8c:	00 d3       	rcall	.+1536   	; 0x228e <__floatsisf>
    1c8e:	29 8d       	ldd	r18, Y+25	; 0x19
    1c90:	3a 8d       	ldd	r19, Y+26	; 0x1a
    1c92:	4b 8d       	ldd	r20, Y+27	; 0x1b
    1c94:	5c 8d       	ldd	r21, Y+28	; 0x1c
    1c96:	87 d3       	rcall	.+1806   	; 0x23a6 <__mulsf3>
    1c98:	c7 d2       	rcall	.+1422   	; 0x2228 <__fixsfsi>
    1c9a:	7e 83       	std	Y+6, r23	; 0x06
    1c9c:	6d 83       	std	Y+5, r22	; 0x05
			
			output=pTerm+iTerm-dTerm;
			
			lastRPM = currentRPM;
    1c9e:	18 87       	std	Y+8, r17	; 0x08
    1ca0:	0f 83       	std	Y+7, r16	; 0x07
			

			lastOutput = output;
    1ca2:	c8 0c       	add	r12, r8
    1ca4:	d9 1c       	adc	r13, r9
    1ca6:	c6 1a       	sub	r12, r22
    1ca8:	d7 0a       	sbc	r13, r23
    1caa:	d8 8a       	std	Y+16, r13	; 0x10
    1cac:	cf 86       	std	Y+15, r12	; 0x0f
			
			
		}
		timer = 0;
    1cae:	1c 86       	std	Y+12, r1	; 0x0c
	}
	return lastOutput;
	
}
    1cb0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cb2:	98 89       	ldd	r25, Y+16	; 0x10
    1cb4:	df 91       	pop	r29
    1cb6:	cf 91       	pop	r28
    1cb8:	1f 91       	pop	r17
    1cba:	0f 91       	pop	r16
    1cbc:	ff 90       	pop	r15
    1cbe:	ef 90       	pop	r14
    1cc0:	df 90       	pop	r13
    1cc2:	cf 90       	pop	r12
    1cc4:	bf 90       	pop	r11
    1cc6:	af 90       	pop	r10
    1cc8:	9f 90       	pop	r9
    1cca:	8f 90       	pop	r8
    1ccc:	08 95       	ret

00001cce <__vector_25>:
	register char c;

	while ((c = pgm_read_byte(progmem_s++)))
		uart3_putc(c);

}/* uart3_puts_p */
    1cce:	1f 92       	push	r1
    1cd0:	0f 92       	push	r0
    1cd2:	0f b6       	in	r0, 0x3f	; 63
    1cd4:	0f 92       	push	r0
    1cd6:	11 24       	eor	r1, r1
    1cd8:	0b b6       	in	r0, 0x3b	; 59
    1cda:	0f 92       	push	r0
    1cdc:	2f 93       	push	r18
    1cde:	8f 93       	push	r24
    1ce0:	9f 93       	push	r25
    1ce2:	ef 93       	push	r30
    1ce4:	ff 93       	push	r31
    1ce6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
    1cea:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1cee:	88 71       	andi	r24, 0x18	; 24
    1cf0:	e0 91 ac 03 	lds	r30, 0x03AC	; 0x8003ac <_ZL12UART0_RxHead>
    1cf4:	ef 5f       	subi	r30, 0xFF	; 255
    1cf6:	ef 71       	andi	r30, 0x1F	; 31
    1cf8:	90 91 ab 03 	lds	r25, 0x03AB	; 0x8003ab <_ZL12UART0_RxTail>
    1cfc:	e9 17       	cp	r30, r25
    1cfe:	39 f0       	breq	.+14     	; 0x1d0e <__vector_25+0x40>
    1d00:	e0 93 ac 03 	sts	0x03AC, r30	; 0x8003ac <_ZL12UART0_RxHead>
    1d04:	f0 e0       	ldi	r31, 0x00	; 0
    1d06:	e1 55       	subi	r30, 0x51	; 81
    1d08:	fc 4f       	sbci	r31, 0xFC	; 252
    1d0a:	20 83       	st	Z, r18
    1d0c:	01 c0       	rjmp	.+2      	; 0x1d10 <__vector_25+0x42>
    1d0e:	82 e0       	ldi	r24, 0x02	; 2
    1d10:	80 93 aa 03 	sts	0x03AA, r24	; 0x8003aa <_ZL17UART0_LastRxError>
    1d14:	ff 91       	pop	r31
    1d16:	ef 91       	pop	r30
    1d18:	9f 91       	pop	r25
    1d1a:	8f 91       	pop	r24
    1d1c:	2f 91       	pop	r18
    1d1e:	0f 90       	pop	r0
    1d20:	0b be       	out	0x3b, r0	; 59
    1d22:	0f 90       	pop	r0
    1d24:	0f be       	out	0x3f, r0	; 63
    1d26:	0f 90       	pop	r0
    1d28:	1f 90       	pop	r1
    1d2a:	18 95       	reti

00001d2c <__vector_26>:
    1d2c:	1f 92       	push	r1
    1d2e:	0f 92       	push	r0
    1d30:	0f b6       	in	r0, 0x3f	; 63
    1d32:	0f 92       	push	r0
    1d34:	11 24       	eor	r1, r1
    1d36:	0b b6       	in	r0, 0x3b	; 59
    1d38:	0f 92       	push	r0
    1d3a:	8f 93       	push	r24
    1d3c:	9f 93       	push	r25
    1d3e:	ef 93       	push	r30
    1d40:	ff 93       	push	r31
    1d42:	90 91 ae 03 	lds	r25, 0x03AE	; 0x8003ae <_ZL12UART0_TxHead>
    1d46:	80 91 ad 03 	lds	r24, 0x03AD	; 0x8003ad <_ZL12UART0_TxTail>
    1d4a:	98 17       	cp	r25, r24
    1d4c:	69 f0       	breq	.+26     	; 0x1d68 <__vector_26+0x3c>
    1d4e:	e0 91 ad 03 	lds	r30, 0x03AD	; 0x8003ad <_ZL12UART0_TxTail>
    1d52:	ef 5f       	subi	r30, 0xFF	; 255
    1d54:	ef 71       	andi	r30, 0x1F	; 31
    1d56:	e0 93 ad 03 	sts	0x03AD, r30	; 0x8003ad <_ZL12UART0_TxTail>
    1d5a:	f0 e0       	ldi	r31, 0x00	; 0
    1d5c:	e1 53       	subi	r30, 0x31	; 49
    1d5e:	fc 4f       	sbci	r31, 0xFC	; 252
    1d60:	80 81       	ld	r24, Z
    1d62:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    1d66:	05 c0       	rjmp	.+10     	; 0x1d72 <__vector_26+0x46>
    1d68:	e1 ec       	ldi	r30, 0xC1	; 193
    1d6a:	f0 e0       	ldi	r31, 0x00	; 0
    1d6c:	80 81       	ld	r24, Z
    1d6e:	8f 7d       	andi	r24, 0xDF	; 223
    1d70:	80 83       	st	Z, r24
    1d72:	ff 91       	pop	r31
    1d74:	ef 91       	pop	r30
    1d76:	9f 91       	pop	r25
    1d78:	8f 91       	pop	r24
    1d7a:	0f 90       	pop	r0
    1d7c:	0b be       	out	0x3b, r0	; 59
    1d7e:	0f 90       	pop	r0
    1d80:	0f be       	out	0x3f, r0	; 63
    1d82:	0f 90       	pop	r0
    1d84:	1f 90       	pop	r1
    1d86:	18 95       	reti

00001d88 <_Z10uart0_initj>:
    1d88:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <_ZL12UART0_TxHead>
    1d8c:	10 92 ad 03 	sts	0x03AD, r1	; 0x8003ad <_ZL12UART0_TxTail>
    1d90:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <_ZL12UART0_RxHead>
    1d94:	10 92 ab 03 	sts	0x03AB, r1	; 0x8003ab <_ZL12UART0_RxTail>
    1d98:	99 23       	and	r25, r25
    1d9a:	24 f4       	brge	.+8      	; 0x1da4 <_Z10uart0_initj+0x1c>
    1d9c:	22 e0       	ldi	r18, 0x02	; 2
    1d9e:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
    1da2:	9f 77       	andi	r25, 0x7F	; 127
    1da4:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    1da8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    1dac:	88 e9       	ldi	r24, 0x98	; 152
    1dae:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    1db2:	86 e0       	ldi	r24, 0x06	; 6
    1db4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    1db8:	08 95       	ret

00001dba <_Z10uart0_getcv>:
    1dba:	90 91 ac 03 	lds	r25, 0x03AC	; 0x8003ac <_ZL12UART0_RxHead>
    1dbe:	80 91 ab 03 	lds	r24, 0x03AB	; 0x8003ab <_ZL12UART0_RxTail>
    1dc2:	98 17       	cp	r25, r24
    1dc4:	91 f0       	breq	.+36     	; 0x1dea <_Z10uart0_getcv+0x30>
    1dc6:	e0 91 ab 03 	lds	r30, 0x03AB	; 0x8003ab <_ZL12UART0_RxTail>
    1dca:	ef 5f       	subi	r30, 0xFF	; 255
    1dcc:	ef 71       	andi	r30, 0x1F	; 31
    1dce:	e0 93 ab 03 	sts	0x03AB, r30	; 0x8003ab <_ZL12UART0_RxTail>
    1dd2:	f0 e0       	ldi	r31, 0x00	; 0
    1dd4:	e1 55       	subi	r30, 0x51	; 81
    1dd6:	fc 4f       	sbci	r31, 0xFC	; 252
    1dd8:	20 81       	ld	r18, Z
    1dda:	80 91 aa 03 	lds	r24, 0x03AA	; 0x8003aa <_ZL17UART0_LastRxError>
    1dde:	90 e0       	ldi	r25, 0x00	; 0
    1de0:	98 2f       	mov	r25, r24
    1de2:	88 27       	eor	r24, r24
    1de4:	82 0f       	add	r24, r18
    1de6:	91 1d       	adc	r25, r1
    1de8:	08 95       	ret
    1dea:	80 e0       	ldi	r24, 0x00	; 0
    1dec:	91 e0       	ldi	r25, 0x01	; 1
    1dee:	08 95       	ret

00001df0 <_Z10uart0_putch>:
    1df0:	20 91 ae 03 	lds	r18, 0x03AE	; 0x8003ae <_ZL12UART0_TxHead>
    1df4:	2f 5f       	subi	r18, 0xFF	; 255
    1df6:	2f 71       	andi	r18, 0x1F	; 31
    1df8:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <_ZL12UART0_TxTail>
    1dfc:	29 17       	cp	r18, r25
    1dfe:	e1 f3       	breq	.-8      	; 0x1df8 <_Z10uart0_putch+0x8>
    1e00:	e2 2f       	mov	r30, r18
    1e02:	f0 e0       	ldi	r31, 0x00	; 0
    1e04:	e1 53       	subi	r30, 0x31	; 49
    1e06:	fc 4f       	sbci	r31, 0xFC	; 252
    1e08:	80 83       	st	Z, r24
    1e0a:	20 93 ae 03 	sts	0x03AE, r18	; 0x8003ae <_ZL12UART0_TxHead>
    1e0e:	e1 ec       	ldi	r30, 0xC1	; 193
    1e10:	f0 e0       	ldi	r31, 0x00	; 0
    1e12:	80 81       	ld	r24, Z
    1e14:	80 62       	ori	r24, 0x20	; 32
    1e16:	80 83       	st	Z, r24
    1e18:	08 95       	ret

00001e1a <_Z12uart0_putinti>:
    1e1a:	0f 93       	push	r16
    1e1c:	1f 93       	push	r17
    1e1e:	cf 93       	push	r28
    1e20:	df 93       	push	r29
    1e22:	cd b7       	in	r28, 0x3d	; 61
    1e24:	de b7       	in	r29, 0x3e	; 62
    1e26:	2f 97       	sbiw	r28, 0x0f	; 15
    1e28:	0f b6       	in	r0, 0x3f	; 63
    1e2a:	f8 94       	cli
    1e2c:	de bf       	out	0x3e, r29	; 62
    1e2e:	0f be       	out	0x3f, r0	; 63
    1e30:	cd bf       	out	0x3d, r28	; 61
    1e32:	4a e0       	ldi	r20, 0x0A	; 10
    1e34:	be 01       	movw	r22, r28
    1e36:	6f 5f       	subi	r22, 0xFF	; 255
    1e38:	7f 4f       	sbci	r23, 0xFF	; 255
    1e3a:	47 d3       	rcall	.+1678   	; 0x24ca <__itoa_ncheck>
    1e3c:	89 81       	ldd	r24, Y+1	; 0x01
    1e3e:	88 23       	and	r24, r24
    1e40:	49 f0       	breq	.+18     	; 0x1e54 <_Z12uart0_putinti+0x3a>
    1e42:	8e 01       	movw	r16, r28
    1e44:	0e 5f       	subi	r16, 0xFE	; 254
    1e46:	1f 4f       	sbci	r17, 0xFF	; 255
    1e48:	d3 df       	rcall	.-90     	; 0x1df0 <_Z10uart0_putch>
    1e4a:	f8 01       	movw	r30, r16
    1e4c:	81 91       	ld	r24, Z+
    1e4e:	8f 01       	movw	r16, r30
    1e50:	81 11       	cpse	r24, r1
    1e52:	fa cf       	rjmp	.-12     	; 0x1e48 <_Z12uart0_putinti+0x2e>
    1e54:	2f 96       	adiw	r28, 0x0f	; 15
    1e56:	0f b6       	in	r0, 0x3f	; 63
    1e58:	f8 94       	cli
    1e5a:	de bf       	out	0x3e, r29	; 62
    1e5c:	0f be       	out	0x3f, r0	; 63
    1e5e:	cd bf       	out	0x3d, r28	; 61
    1e60:	df 91       	pop	r29
    1e62:	cf 91       	pop	r28
    1e64:	1f 91       	pop	r17
    1e66:	0f 91       	pop	r16
    1e68:	08 95       	ret

00001e6a <_Z10uart0_putsPKc>:
    1e6a:	cf 93       	push	r28
    1e6c:	df 93       	push	r29
    1e6e:	ec 01       	movw	r28, r24
    1e70:	88 81       	ld	r24, Y
    1e72:	88 23       	and	r24, r24
    1e74:	29 f0       	breq	.+10     	; 0x1e80 <_Z10uart0_putsPKc+0x16>
    1e76:	21 96       	adiw	r28, 0x01	; 1
    1e78:	bb df       	rcall	.-138    	; 0x1df0 <_Z10uart0_putch>
    1e7a:	89 91       	ld	r24, Y+
    1e7c:	81 11       	cpse	r24, r1
    1e7e:	fc cf       	rjmp	.-8      	; 0x1e78 <_Z10uart0_putsPKc+0xe>
    1e80:	df 91       	pop	r29
    1e82:	cf 91       	pop	r28
    1e84:	08 95       	ret

00001e86 <_Z15uart0_availablev>:
    1e86:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <_ZL12UART0_RxHead>
    1e8a:	20 91 ab 03 	lds	r18, 0x03AB	; 0x8003ab <_ZL12UART0_RxTail>
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	4f 96       	adiw	r24, 0x1f	; 31
    1e92:	82 1b       	sub	r24, r18
    1e94:	91 09       	sbc	r25, r1
    1e96:	6f e1       	ldi	r22, 0x1F	; 31
    1e98:	70 e0       	ldi	r23, 0x00	; 0
    1e9a:	e8 c2       	rjmp	.+1488   	; 0x246c <__divmodhi4>

00001e9c <__vector_51>:
    1e9c:	1f 92       	push	r1
    1e9e:	0f 92       	push	r0
    1ea0:	0f b6       	in	r0, 0x3f	; 63
    1ea2:	0f 92       	push	r0
    1ea4:	11 24       	eor	r1, r1
    1ea6:	0b b6       	in	r0, 0x3b	; 59
    1ea8:	0f 92       	push	r0
    1eaa:	2f 93       	push	r18
    1eac:	8f 93       	push	r24
    1eae:	9f 93       	push	r25
    1eb0:	ef 93       	push	r30
    1eb2:	ff 93       	push	r31
    1eb4:	80 91 d0 00 	lds	r24, 0x00D0	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7000d0>
    1eb8:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    1ebc:	88 71       	andi	r24, 0x18	; 24
    1ebe:	e0 91 67 03 	lds	r30, 0x0367	; 0x800367 <_ZL12UART2_RxHead>
    1ec2:	ef 5f       	subi	r30, 0xFF	; 255
    1ec4:	ef 71       	andi	r30, 0x1F	; 31
    1ec6:	90 91 66 03 	lds	r25, 0x0366	; 0x800366 <_ZL12UART2_RxTail>
    1eca:	e9 17       	cp	r30, r25
    1ecc:	39 f0       	breq	.+14     	; 0x1edc <__vector_51+0x40>
    1ece:	e0 93 67 03 	sts	0x0367, r30	; 0x800367 <_ZL12UART2_RxHead>
    1ed2:	f0 e0       	ldi	r31, 0x00	; 0
    1ed4:	e6 59       	subi	r30, 0x96	; 150
    1ed6:	fc 4f       	sbci	r31, 0xFC	; 252
    1ed8:	20 83       	st	Z, r18
    1eda:	01 c0       	rjmp	.+2      	; 0x1ede <__vector_51+0x42>
    1edc:	82 e0       	ldi	r24, 0x02	; 2
    1ede:	80 93 65 03 	sts	0x0365, r24	; 0x800365 <_ZL17UART2_LastRxError>
    1ee2:	ff 91       	pop	r31
    1ee4:	ef 91       	pop	r30
    1ee6:	9f 91       	pop	r25
    1ee8:	8f 91       	pop	r24
    1eea:	2f 91       	pop	r18
    1eec:	0f 90       	pop	r0
    1eee:	0b be       	out	0x3b, r0	; 59
    1ef0:	0f 90       	pop	r0
    1ef2:	0f be       	out	0x3f, r0	; 63
    1ef4:	0f 90       	pop	r0
    1ef6:	1f 90       	pop	r1
    1ef8:	18 95       	reti

00001efa <__vector_52>:
    1efa:	1f 92       	push	r1
    1efc:	0f 92       	push	r0
    1efe:	0f b6       	in	r0, 0x3f	; 63
    1f00:	0f 92       	push	r0
    1f02:	11 24       	eor	r1, r1
    1f04:	0b b6       	in	r0, 0x3b	; 59
    1f06:	0f 92       	push	r0
    1f08:	8f 93       	push	r24
    1f0a:	9f 93       	push	r25
    1f0c:	ef 93       	push	r30
    1f0e:	ff 93       	push	r31
    1f10:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <_ZL12UART2_TxHead>
    1f14:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <_ZL12UART2_TxTail>
    1f18:	98 17       	cp	r25, r24
    1f1a:	69 f0       	breq	.+26     	; 0x1f36 <__vector_52+0x3c>
    1f1c:	e0 91 68 03 	lds	r30, 0x0368	; 0x800368 <_ZL12UART2_TxTail>
    1f20:	ef 5f       	subi	r30, 0xFF	; 255
    1f22:	ef 71       	andi	r30, 0x1F	; 31
    1f24:	e0 93 68 03 	sts	0x0368, r30	; 0x800368 <_ZL12UART2_TxTail>
    1f28:	f0 e0       	ldi	r31, 0x00	; 0
    1f2a:	e6 57       	subi	r30, 0x76	; 118
    1f2c:	fc 4f       	sbci	r31, 0xFC	; 252
    1f2e:	80 81       	ld	r24, Z
    1f30:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7000d6>
    1f34:	05 c0       	rjmp	.+10     	; 0x1f40 <__vector_52+0x46>
    1f36:	e1 ed       	ldi	r30, 0xD1	; 209
    1f38:	f0 e0       	ldi	r31, 0x00	; 0
    1f3a:	80 81       	ld	r24, Z
    1f3c:	8f 7d       	andi	r24, 0xDF	; 223
    1f3e:	80 83       	st	Z, r24
    1f40:	ff 91       	pop	r31
    1f42:	ef 91       	pop	r30
    1f44:	9f 91       	pop	r25
    1f46:	8f 91       	pop	r24
    1f48:	0f 90       	pop	r0
    1f4a:	0b be       	out	0x3b, r0	; 59
    1f4c:	0f 90       	pop	r0
    1f4e:	0f be       	out	0x3f, r0	; 63
    1f50:	0f 90       	pop	r0
    1f52:	1f 90       	pop	r1
    1f54:	18 95       	reti

00001f56 <__vector_54>:
    1f56:	1f 92       	push	r1
    1f58:	0f 92       	push	r0
    1f5a:	0f b6       	in	r0, 0x3f	; 63
    1f5c:	0f 92       	push	r0
    1f5e:	11 24       	eor	r1, r1
    1f60:	0b b6       	in	r0, 0x3b	; 59
    1f62:	0f 92       	push	r0
    1f64:	2f 93       	push	r18
    1f66:	8f 93       	push	r24
    1f68:	9f 93       	push	r25
    1f6a:	ef 93       	push	r30
    1f6c:	ff 93       	push	r31
    1f6e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    1f72:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    1f76:	88 71       	andi	r24, 0x18	; 24
    1f78:	e0 91 22 03 	lds	r30, 0x0322	; 0x800322 <_ZL12UART3_RxHead>
    1f7c:	ef 5f       	subi	r30, 0xFF	; 255
    1f7e:	ef 71       	andi	r30, 0x1F	; 31
    1f80:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <_ZL12UART3_RxTail>
    1f84:	e9 17       	cp	r30, r25
    1f86:	39 f0       	breq	.+14     	; 0x1f96 <__vector_54+0x40>
    1f88:	e0 93 22 03 	sts	0x0322, r30	; 0x800322 <_ZL12UART3_RxHead>
    1f8c:	f0 e0       	ldi	r31, 0x00	; 0
    1f8e:	eb 5d       	subi	r30, 0xDB	; 219
    1f90:	fc 4f       	sbci	r31, 0xFC	; 252
    1f92:	20 83       	st	Z, r18
    1f94:	01 c0       	rjmp	.+2      	; 0x1f98 <__vector_54+0x42>
    1f96:	82 e0       	ldi	r24, 0x02	; 2
    1f98:	80 93 20 03 	sts	0x0320, r24	; 0x800320 <_ZL17UART3_LastRxError>
    1f9c:	ff 91       	pop	r31
    1f9e:	ef 91       	pop	r30
    1fa0:	9f 91       	pop	r25
    1fa2:	8f 91       	pop	r24
    1fa4:	2f 91       	pop	r18
    1fa6:	0f 90       	pop	r0
    1fa8:	0b be       	out	0x3b, r0	; 59
    1faa:	0f 90       	pop	r0
    1fac:	0f be       	out	0x3f, r0	; 63
    1fae:	0f 90       	pop	r0
    1fb0:	1f 90       	pop	r1
    1fb2:	18 95       	reti

00001fb4 <__vector_55>:
    1fb4:	1f 92       	push	r1
    1fb6:	0f 92       	push	r0
    1fb8:	0f b6       	in	r0, 0x3f	; 63
    1fba:	0f 92       	push	r0
    1fbc:	11 24       	eor	r1, r1
    1fbe:	0b b6       	in	r0, 0x3b	; 59
    1fc0:	0f 92       	push	r0
    1fc2:	8f 93       	push	r24
    1fc4:	9f 93       	push	r25
    1fc6:	ef 93       	push	r30
    1fc8:	ff 93       	push	r31
    1fca:	90 91 24 03 	lds	r25, 0x0324	; 0x800324 <_ZL12UART3_TxHead>
    1fce:	80 91 23 03 	lds	r24, 0x0323	; 0x800323 <_ZL12UART3_TxTail>
    1fd2:	98 17       	cp	r25, r24
    1fd4:	69 f0       	breq	.+26     	; 0x1ff0 <__vector_55+0x3c>
    1fd6:	e0 91 23 03 	lds	r30, 0x0323	; 0x800323 <_ZL12UART3_TxTail>
    1fda:	ef 5f       	subi	r30, 0xFF	; 255
    1fdc:	ef 71       	andi	r30, 0x1F	; 31
    1fde:	e0 93 23 03 	sts	0x0323, r30	; 0x800323 <_ZL12UART3_TxTail>
    1fe2:	f0 e0       	ldi	r31, 0x00	; 0
    1fe4:	eb 5b       	subi	r30, 0xBB	; 187
    1fe6:	fc 4f       	sbci	r31, 0xFC	; 252
    1fe8:	80 81       	ld	r24, Z
    1fea:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x700136>
    1fee:	05 c0       	rjmp	.+10     	; 0x1ffa <__vector_55+0x46>
    1ff0:	e1 e3       	ldi	r30, 0x31	; 49
    1ff2:	f1 e0       	ldi	r31, 0x01	; 1
    1ff4:	80 81       	ld	r24, Z
    1ff6:	8f 7d       	andi	r24, 0xDF	; 223
    1ff8:	80 83       	st	Z, r24
    1ffa:	ff 91       	pop	r31
    1ffc:	ef 91       	pop	r30
    1ffe:	9f 91       	pop	r25
    2000:	8f 91       	pop	r24
    2002:	0f 90       	pop	r0
    2004:	0b be       	out	0x3b, r0	; 59
    2006:	0f 90       	pop	r0
    2008:	0f be       	out	0x3f, r0	; 63
    200a:	0f 90       	pop	r0
    200c:	1f 90       	pop	r1
    200e:	18 95       	reti

00002010 <_Z10uart3_initj>:
    2010:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <_ZL12UART3_TxHead>
    2014:	10 92 23 03 	sts	0x0323, r1	; 0x800323 <_ZL12UART3_TxTail>
    2018:	10 92 22 03 	sts	0x0322, r1	; 0x800322 <_ZL12UART3_RxHead>
    201c:	10 92 21 03 	sts	0x0321, r1	; 0x800321 <_ZL12UART3_RxTail>
    2020:	99 23       	and	r25, r25
    2022:	24 f4       	brge	.+8      	; 0x202c <_Z10uart3_initj+0x1c>
    2024:	26 e0       	ldi	r18, 0x06	; 6
    2026:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <__TEXT_REGION_LENGTH__+0x700130>
    202a:	9f 77       	andi	r25, 0x7F	; 127
    202c:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__TEXT_REGION_LENGTH__+0x700135>
    2030:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x700134>
    2034:	88 e9       	ldi	r24, 0x98	; 152
    2036:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x700131>
    203a:	86 e0       	ldi	r24, 0x06	; 6
    203c:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x700132>
    2040:	08 95       	ret

00002042 <_Z10uart3_getcv>:
    2042:	90 91 22 03 	lds	r25, 0x0322	; 0x800322 <_ZL12UART3_RxHead>
    2046:	80 91 21 03 	lds	r24, 0x0321	; 0x800321 <_ZL12UART3_RxTail>
    204a:	98 17       	cp	r25, r24
    204c:	91 f0       	breq	.+36     	; 0x2072 <_Z10uart3_getcv+0x30>
    204e:	e0 91 21 03 	lds	r30, 0x0321	; 0x800321 <_ZL12UART3_RxTail>
    2052:	ef 5f       	subi	r30, 0xFF	; 255
    2054:	ef 71       	andi	r30, 0x1F	; 31
    2056:	e0 93 21 03 	sts	0x0321, r30	; 0x800321 <_ZL12UART3_RxTail>
    205a:	f0 e0       	ldi	r31, 0x00	; 0
    205c:	eb 5d       	subi	r30, 0xDB	; 219
    205e:	fc 4f       	sbci	r31, 0xFC	; 252
    2060:	20 81       	ld	r18, Z
    2062:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <_ZL17UART3_LastRxError>
    2066:	90 e0       	ldi	r25, 0x00	; 0
    2068:	98 2f       	mov	r25, r24
    206a:	88 27       	eor	r24, r24
    206c:	82 0f       	add	r24, r18
    206e:	91 1d       	adc	r25, r1
    2070:	08 95       	ret
    2072:	80 e0       	ldi	r24, 0x00	; 0
    2074:	91 e0       	ldi	r25, 0x01	; 1
    2076:	08 95       	ret

00002078 <_Z15uart3_availablev>:
 Input:    None
 Returns:  Integer number of bytes in the receive buffer
 **************************************************************************/
int uart3_available(void)
{
	return (UART3_RxHead - UART3_RxTail) != 0;
    2078:	30 91 22 03 	lds	r19, 0x0322	; 0x800322 <_ZL12UART3_RxHead>
    207c:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <_ZL12UART3_RxTail>
    2080:	81 e0       	ldi	r24, 0x01	; 1
    2082:	90 e0       	ldi	r25, 0x00	; 0
    2084:	32 13       	cpse	r19, r18
    2086:	02 c0       	rjmp	.+4      	; 0x208c <_Z15uart3_availablev+0x14>
    2088:	80 e0       	ldi	r24, 0x00	; 0
    208a:	90 e0       	ldi	r25, 0x00	; 0
}/* uart3_available */
    208c:	08 95       	ret

0000208e <__subsf3>:
    208e:	50 58       	subi	r21, 0x80	; 128

00002090 <__addsf3>:
    2090:	bb 27       	eor	r27, r27
    2092:	aa 27       	eor	r26, r26
    2094:	0e d0       	rcall	.+28     	; 0x20b2 <__addsf3x>
    2096:	4d c1       	rjmp	.+666    	; 0x2332 <__fp_round>
    2098:	3e d1       	rcall	.+636    	; 0x2316 <__fp_pscA>
    209a:	30 f0       	brcs	.+12     	; 0x20a8 <__addsf3+0x18>
    209c:	43 d1       	rcall	.+646    	; 0x2324 <__fp_pscB>
    209e:	20 f0       	brcs	.+8      	; 0x20a8 <__addsf3+0x18>
    20a0:	31 f4       	brne	.+12     	; 0x20ae <__addsf3+0x1e>
    20a2:	9f 3f       	cpi	r25, 0xFF	; 255
    20a4:	11 f4       	brne	.+4      	; 0x20aa <__addsf3+0x1a>
    20a6:	1e f4       	brtc	.+6      	; 0x20ae <__addsf3+0x1e>
    20a8:	33 c1       	rjmp	.+614    	; 0x2310 <__fp_nan>
    20aa:	0e f4       	brtc	.+2      	; 0x20ae <__addsf3+0x1e>
    20ac:	e0 95       	com	r30
    20ae:	e7 fb       	bst	r30, 7
    20b0:	29 c1       	rjmp	.+594    	; 0x2304 <__fp_inf>

000020b2 <__addsf3x>:
    20b2:	e9 2f       	mov	r30, r25
    20b4:	4f d1       	rcall	.+670    	; 0x2354 <__fp_split3>
    20b6:	80 f3       	brcs	.-32     	; 0x2098 <__addsf3+0x8>
    20b8:	ba 17       	cp	r27, r26
    20ba:	62 07       	cpc	r22, r18
    20bc:	73 07       	cpc	r23, r19
    20be:	84 07       	cpc	r24, r20
    20c0:	95 07       	cpc	r25, r21
    20c2:	18 f0       	brcs	.+6      	; 0x20ca <__addsf3x+0x18>
    20c4:	71 f4       	brne	.+28     	; 0x20e2 <__addsf3x+0x30>
    20c6:	9e f5       	brtc	.+102    	; 0x212e <__addsf3x+0x7c>
    20c8:	67 c1       	rjmp	.+718    	; 0x2398 <__fp_zero>
    20ca:	0e f4       	brtc	.+2      	; 0x20ce <__addsf3x+0x1c>
    20cc:	e0 95       	com	r30
    20ce:	0b 2e       	mov	r0, r27
    20d0:	ba 2f       	mov	r27, r26
    20d2:	a0 2d       	mov	r26, r0
    20d4:	0b 01       	movw	r0, r22
    20d6:	b9 01       	movw	r22, r18
    20d8:	90 01       	movw	r18, r0
    20da:	0c 01       	movw	r0, r24
    20dc:	ca 01       	movw	r24, r20
    20de:	a0 01       	movw	r20, r0
    20e0:	11 24       	eor	r1, r1
    20e2:	ff 27       	eor	r31, r31
    20e4:	59 1b       	sub	r21, r25
    20e6:	99 f0       	breq	.+38     	; 0x210e <__addsf3x+0x5c>
    20e8:	59 3f       	cpi	r21, 0xF9	; 249
    20ea:	50 f4       	brcc	.+20     	; 0x2100 <__addsf3x+0x4e>
    20ec:	50 3e       	cpi	r21, 0xE0	; 224
    20ee:	68 f1       	brcs	.+90     	; 0x214a <__addsf3x+0x98>
    20f0:	1a 16       	cp	r1, r26
    20f2:	f0 40       	sbci	r31, 0x00	; 0
    20f4:	a2 2f       	mov	r26, r18
    20f6:	23 2f       	mov	r18, r19
    20f8:	34 2f       	mov	r19, r20
    20fa:	44 27       	eor	r20, r20
    20fc:	58 5f       	subi	r21, 0xF8	; 248
    20fe:	f3 cf       	rjmp	.-26     	; 0x20e6 <__addsf3x+0x34>
    2100:	46 95       	lsr	r20
    2102:	37 95       	ror	r19
    2104:	27 95       	ror	r18
    2106:	a7 95       	ror	r26
    2108:	f0 40       	sbci	r31, 0x00	; 0
    210a:	53 95       	inc	r21
    210c:	c9 f7       	brne	.-14     	; 0x2100 <__addsf3x+0x4e>
    210e:	7e f4       	brtc	.+30     	; 0x212e <__addsf3x+0x7c>
    2110:	1f 16       	cp	r1, r31
    2112:	ba 0b       	sbc	r27, r26
    2114:	62 0b       	sbc	r22, r18
    2116:	73 0b       	sbc	r23, r19
    2118:	84 0b       	sbc	r24, r20
    211a:	ba f0       	brmi	.+46     	; 0x214a <__addsf3x+0x98>
    211c:	91 50       	subi	r25, 0x01	; 1
    211e:	a1 f0       	breq	.+40     	; 0x2148 <__addsf3x+0x96>
    2120:	ff 0f       	add	r31, r31
    2122:	bb 1f       	adc	r27, r27
    2124:	66 1f       	adc	r22, r22
    2126:	77 1f       	adc	r23, r23
    2128:	88 1f       	adc	r24, r24
    212a:	c2 f7       	brpl	.-16     	; 0x211c <__addsf3x+0x6a>
    212c:	0e c0       	rjmp	.+28     	; 0x214a <__addsf3x+0x98>
    212e:	ba 0f       	add	r27, r26
    2130:	62 1f       	adc	r22, r18
    2132:	73 1f       	adc	r23, r19
    2134:	84 1f       	adc	r24, r20
    2136:	48 f4       	brcc	.+18     	; 0x214a <__addsf3x+0x98>
    2138:	87 95       	ror	r24
    213a:	77 95       	ror	r23
    213c:	67 95       	ror	r22
    213e:	b7 95       	ror	r27
    2140:	f7 95       	ror	r31
    2142:	9e 3f       	cpi	r25, 0xFE	; 254
    2144:	08 f0       	brcs	.+2      	; 0x2148 <__addsf3x+0x96>
    2146:	b3 cf       	rjmp	.-154    	; 0x20ae <__addsf3+0x1e>
    2148:	93 95       	inc	r25
    214a:	88 0f       	add	r24, r24
    214c:	08 f0       	brcs	.+2      	; 0x2150 <__addsf3x+0x9e>
    214e:	99 27       	eor	r25, r25
    2150:	ee 0f       	add	r30, r30
    2152:	97 95       	ror	r25
    2154:	87 95       	ror	r24
    2156:	08 95       	ret

00002158 <__divsf3>:
    2158:	0c d0       	rcall	.+24     	; 0x2172 <__divsf3x>
    215a:	eb c0       	rjmp	.+470    	; 0x2332 <__fp_round>
    215c:	e3 d0       	rcall	.+454    	; 0x2324 <__fp_pscB>
    215e:	40 f0       	brcs	.+16     	; 0x2170 <__divsf3+0x18>
    2160:	da d0       	rcall	.+436    	; 0x2316 <__fp_pscA>
    2162:	30 f0       	brcs	.+12     	; 0x2170 <__divsf3+0x18>
    2164:	21 f4       	brne	.+8      	; 0x216e <__divsf3+0x16>
    2166:	5f 3f       	cpi	r21, 0xFF	; 255
    2168:	19 f0       	breq	.+6      	; 0x2170 <__divsf3+0x18>
    216a:	cc c0       	rjmp	.+408    	; 0x2304 <__fp_inf>
    216c:	51 11       	cpse	r21, r1
    216e:	15 c1       	rjmp	.+554    	; 0x239a <__fp_szero>
    2170:	cf c0       	rjmp	.+414    	; 0x2310 <__fp_nan>

00002172 <__divsf3x>:
    2172:	f0 d0       	rcall	.+480    	; 0x2354 <__fp_split3>
    2174:	98 f3       	brcs	.-26     	; 0x215c <__divsf3+0x4>

00002176 <__divsf3_pse>:
    2176:	99 23       	and	r25, r25
    2178:	c9 f3       	breq	.-14     	; 0x216c <__divsf3+0x14>
    217a:	55 23       	and	r21, r21
    217c:	b1 f3       	breq	.-20     	; 0x216a <__divsf3+0x12>
    217e:	95 1b       	sub	r25, r21
    2180:	55 0b       	sbc	r21, r21
    2182:	bb 27       	eor	r27, r27
    2184:	aa 27       	eor	r26, r26
    2186:	62 17       	cp	r22, r18
    2188:	73 07       	cpc	r23, r19
    218a:	84 07       	cpc	r24, r20
    218c:	38 f0       	brcs	.+14     	; 0x219c <__divsf3_pse+0x26>
    218e:	9f 5f       	subi	r25, 0xFF	; 255
    2190:	5f 4f       	sbci	r21, 0xFF	; 255
    2192:	22 0f       	add	r18, r18
    2194:	33 1f       	adc	r19, r19
    2196:	44 1f       	adc	r20, r20
    2198:	aa 1f       	adc	r26, r26
    219a:	a9 f3       	breq	.-22     	; 0x2186 <__divsf3_pse+0x10>
    219c:	33 d0       	rcall	.+102    	; 0x2204 <__stack+0x5>
    219e:	0e 2e       	mov	r0, r30
    21a0:	3a f0       	brmi	.+14     	; 0x21b0 <__divsf3_pse+0x3a>
    21a2:	e0 e8       	ldi	r30, 0x80	; 128
    21a4:	30 d0       	rcall	.+96     	; 0x2206 <__stack+0x7>
    21a6:	91 50       	subi	r25, 0x01	; 1
    21a8:	50 40       	sbci	r21, 0x00	; 0
    21aa:	e6 95       	lsr	r30
    21ac:	00 1c       	adc	r0, r0
    21ae:	ca f7       	brpl	.-14     	; 0x21a2 <__divsf3_pse+0x2c>
    21b0:	29 d0       	rcall	.+82     	; 0x2204 <__stack+0x5>
    21b2:	fe 2f       	mov	r31, r30
    21b4:	27 d0       	rcall	.+78     	; 0x2204 <__stack+0x5>
    21b6:	66 0f       	add	r22, r22
    21b8:	77 1f       	adc	r23, r23
    21ba:	88 1f       	adc	r24, r24
    21bc:	bb 1f       	adc	r27, r27
    21be:	26 17       	cp	r18, r22
    21c0:	37 07       	cpc	r19, r23
    21c2:	48 07       	cpc	r20, r24
    21c4:	ab 07       	cpc	r26, r27
    21c6:	b0 e8       	ldi	r27, 0x80	; 128
    21c8:	09 f0       	breq	.+2      	; 0x21cc <__divsf3_pse+0x56>
    21ca:	bb 0b       	sbc	r27, r27
    21cc:	80 2d       	mov	r24, r0
    21ce:	bf 01       	movw	r22, r30
    21d0:	ff 27       	eor	r31, r31
    21d2:	93 58       	subi	r25, 0x83	; 131
    21d4:	5f 4f       	sbci	r21, 0xFF	; 255
    21d6:	2a f0       	brmi	.+10     	; 0x21e2 <__divsf3_pse+0x6c>
    21d8:	9e 3f       	cpi	r25, 0xFE	; 254
    21da:	51 05       	cpc	r21, r1
    21dc:	68 f0       	brcs	.+26     	; 0x21f8 <__divsf3_pse+0x82>
    21de:	92 c0       	rjmp	.+292    	; 0x2304 <__fp_inf>
    21e0:	dc c0       	rjmp	.+440    	; 0x239a <__fp_szero>
    21e2:	5f 3f       	cpi	r21, 0xFF	; 255
    21e4:	ec f3       	brlt	.-6      	; 0x21e0 <__divsf3_pse+0x6a>
    21e6:	98 3e       	cpi	r25, 0xE8	; 232
    21e8:	dc f3       	brlt	.-10     	; 0x21e0 <__divsf3_pse+0x6a>
    21ea:	86 95       	lsr	r24
    21ec:	77 95       	ror	r23
    21ee:	67 95       	ror	r22
    21f0:	b7 95       	ror	r27
    21f2:	f7 95       	ror	r31
    21f4:	9f 5f       	subi	r25, 0xFF	; 255
    21f6:	c9 f7       	brne	.-14     	; 0x21ea <__divsf3_pse+0x74>
    21f8:	88 0f       	add	r24, r24
    21fa:	91 1d       	adc	r25, r1
    21fc:	96 95       	lsr	r25
    21fe:	87 95       	ror	r24
    2200:	97 f9       	bld	r25, 7
    2202:	08 95       	ret
    2204:	e1 e0       	ldi	r30, 0x01	; 1
    2206:	66 0f       	add	r22, r22
    2208:	77 1f       	adc	r23, r23
    220a:	88 1f       	adc	r24, r24
    220c:	bb 1f       	adc	r27, r27
    220e:	62 17       	cp	r22, r18
    2210:	73 07       	cpc	r23, r19
    2212:	84 07       	cpc	r24, r20
    2214:	ba 07       	cpc	r27, r26
    2216:	20 f0       	brcs	.+8      	; 0x2220 <__stack+0x21>
    2218:	62 1b       	sub	r22, r18
    221a:	73 0b       	sbc	r23, r19
    221c:	84 0b       	sbc	r24, r20
    221e:	ba 0b       	sbc	r27, r26
    2220:	ee 1f       	adc	r30, r30
    2222:	88 f7       	brcc	.-30     	; 0x2206 <__stack+0x7>
    2224:	e0 95       	com	r30
    2226:	08 95       	ret

00002228 <__fixsfsi>:
    2228:	04 d0       	rcall	.+8      	; 0x2232 <__fixunssfsi>
    222a:	68 94       	set
    222c:	b1 11       	cpse	r27, r1
    222e:	b5 c0       	rjmp	.+362    	; 0x239a <__fp_szero>
    2230:	08 95       	ret

00002232 <__fixunssfsi>:
    2232:	98 d0       	rcall	.+304    	; 0x2364 <__fp_splitA>
    2234:	88 f0       	brcs	.+34     	; 0x2258 <__fixunssfsi+0x26>
    2236:	9f 57       	subi	r25, 0x7F	; 127
    2238:	90 f0       	brcs	.+36     	; 0x225e <__fixunssfsi+0x2c>
    223a:	b9 2f       	mov	r27, r25
    223c:	99 27       	eor	r25, r25
    223e:	b7 51       	subi	r27, 0x17	; 23
    2240:	a0 f0       	brcs	.+40     	; 0x226a <__fixunssfsi+0x38>
    2242:	d1 f0       	breq	.+52     	; 0x2278 <__fixunssfsi+0x46>
    2244:	66 0f       	add	r22, r22
    2246:	77 1f       	adc	r23, r23
    2248:	88 1f       	adc	r24, r24
    224a:	99 1f       	adc	r25, r25
    224c:	1a f0       	brmi	.+6      	; 0x2254 <__fixunssfsi+0x22>
    224e:	ba 95       	dec	r27
    2250:	c9 f7       	brne	.-14     	; 0x2244 <__fixunssfsi+0x12>
    2252:	12 c0       	rjmp	.+36     	; 0x2278 <__fixunssfsi+0x46>
    2254:	b1 30       	cpi	r27, 0x01	; 1
    2256:	81 f0       	breq	.+32     	; 0x2278 <__fixunssfsi+0x46>
    2258:	9f d0       	rcall	.+318    	; 0x2398 <__fp_zero>
    225a:	b1 e0       	ldi	r27, 0x01	; 1
    225c:	08 95       	ret
    225e:	9c c0       	rjmp	.+312    	; 0x2398 <__fp_zero>
    2260:	67 2f       	mov	r22, r23
    2262:	78 2f       	mov	r23, r24
    2264:	88 27       	eor	r24, r24
    2266:	b8 5f       	subi	r27, 0xF8	; 248
    2268:	39 f0       	breq	.+14     	; 0x2278 <__fixunssfsi+0x46>
    226a:	b9 3f       	cpi	r27, 0xF9	; 249
    226c:	cc f3       	brlt	.-14     	; 0x2260 <__fixunssfsi+0x2e>
    226e:	86 95       	lsr	r24
    2270:	77 95       	ror	r23
    2272:	67 95       	ror	r22
    2274:	b3 95       	inc	r27
    2276:	d9 f7       	brne	.-10     	; 0x226e <__fixunssfsi+0x3c>
    2278:	3e f4       	brtc	.+14     	; 0x2288 <__fixunssfsi+0x56>
    227a:	90 95       	com	r25
    227c:	80 95       	com	r24
    227e:	70 95       	com	r23
    2280:	61 95       	neg	r22
    2282:	7f 4f       	sbci	r23, 0xFF	; 255
    2284:	8f 4f       	sbci	r24, 0xFF	; 255
    2286:	9f 4f       	sbci	r25, 0xFF	; 255
    2288:	08 95       	ret

0000228a <__floatunsisf>:
    228a:	e8 94       	clt
    228c:	09 c0       	rjmp	.+18     	; 0x22a0 <__floatsisf+0x12>

0000228e <__floatsisf>:
    228e:	97 fb       	bst	r25, 7
    2290:	3e f4       	brtc	.+14     	; 0x22a0 <__floatsisf+0x12>
    2292:	90 95       	com	r25
    2294:	80 95       	com	r24
    2296:	70 95       	com	r23
    2298:	61 95       	neg	r22
    229a:	7f 4f       	sbci	r23, 0xFF	; 255
    229c:	8f 4f       	sbci	r24, 0xFF	; 255
    229e:	9f 4f       	sbci	r25, 0xFF	; 255
    22a0:	99 23       	and	r25, r25
    22a2:	a9 f0       	breq	.+42     	; 0x22ce <__floatsisf+0x40>
    22a4:	f9 2f       	mov	r31, r25
    22a6:	96 e9       	ldi	r25, 0x96	; 150
    22a8:	bb 27       	eor	r27, r27
    22aa:	93 95       	inc	r25
    22ac:	f6 95       	lsr	r31
    22ae:	87 95       	ror	r24
    22b0:	77 95       	ror	r23
    22b2:	67 95       	ror	r22
    22b4:	b7 95       	ror	r27
    22b6:	f1 11       	cpse	r31, r1
    22b8:	f8 cf       	rjmp	.-16     	; 0x22aa <__floatsisf+0x1c>
    22ba:	fa f4       	brpl	.+62     	; 0x22fa <__floatsisf+0x6c>
    22bc:	bb 0f       	add	r27, r27
    22be:	11 f4       	brne	.+4      	; 0x22c4 <__floatsisf+0x36>
    22c0:	60 ff       	sbrs	r22, 0
    22c2:	1b c0       	rjmp	.+54     	; 0x22fa <__floatsisf+0x6c>
    22c4:	6f 5f       	subi	r22, 0xFF	; 255
    22c6:	7f 4f       	sbci	r23, 0xFF	; 255
    22c8:	8f 4f       	sbci	r24, 0xFF	; 255
    22ca:	9f 4f       	sbci	r25, 0xFF	; 255
    22cc:	16 c0       	rjmp	.+44     	; 0x22fa <__floatsisf+0x6c>
    22ce:	88 23       	and	r24, r24
    22d0:	11 f0       	breq	.+4      	; 0x22d6 <__floatsisf+0x48>
    22d2:	96 e9       	ldi	r25, 0x96	; 150
    22d4:	11 c0       	rjmp	.+34     	; 0x22f8 <__floatsisf+0x6a>
    22d6:	77 23       	and	r23, r23
    22d8:	21 f0       	breq	.+8      	; 0x22e2 <__floatsisf+0x54>
    22da:	9e e8       	ldi	r25, 0x8E	; 142
    22dc:	87 2f       	mov	r24, r23
    22de:	76 2f       	mov	r23, r22
    22e0:	05 c0       	rjmp	.+10     	; 0x22ec <__floatsisf+0x5e>
    22e2:	66 23       	and	r22, r22
    22e4:	71 f0       	breq	.+28     	; 0x2302 <__floatsisf+0x74>
    22e6:	96 e8       	ldi	r25, 0x86	; 134
    22e8:	86 2f       	mov	r24, r22
    22ea:	70 e0       	ldi	r23, 0x00	; 0
    22ec:	60 e0       	ldi	r22, 0x00	; 0
    22ee:	2a f0       	brmi	.+10     	; 0x22fa <__floatsisf+0x6c>
    22f0:	9a 95       	dec	r25
    22f2:	66 0f       	add	r22, r22
    22f4:	77 1f       	adc	r23, r23
    22f6:	88 1f       	adc	r24, r24
    22f8:	da f7       	brpl	.-10     	; 0x22f0 <__floatsisf+0x62>
    22fa:	88 0f       	add	r24, r24
    22fc:	96 95       	lsr	r25
    22fe:	87 95       	ror	r24
    2300:	97 f9       	bld	r25, 7
    2302:	08 95       	ret

00002304 <__fp_inf>:
    2304:	97 f9       	bld	r25, 7
    2306:	9f 67       	ori	r25, 0x7F	; 127
    2308:	80 e8       	ldi	r24, 0x80	; 128
    230a:	70 e0       	ldi	r23, 0x00	; 0
    230c:	60 e0       	ldi	r22, 0x00	; 0
    230e:	08 95       	ret

00002310 <__fp_nan>:
    2310:	9f ef       	ldi	r25, 0xFF	; 255
    2312:	80 ec       	ldi	r24, 0xC0	; 192
    2314:	08 95       	ret

00002316 <__fp_pscA>:
    2316:	00 24       	eor	r0, r0
    2318:	0a 94       	dec	r0
    231a:	16 16       	cp	r1, r22
    231c:	17 06       	cpc	r1, r23
    231e:	18 06       	cpc	r1, r24
    2320:	09 06       	cpc	r0, r25
    2322:	08 95       	ret

00002324 <__fp_pscB>:
    2324:	00 24       	eor	r0, r0
    2326:	0a 94       	dec	r0
    2328:	12 16       	cp	r1, r18
    232a:	13 06       	cpc	r1, r19
    232c:	14 06       	cpc	r1, r20
    232e:	05 06       	cpc	r0, r21
    2330:	08 95       	ret

00002332 <__fp_round>:
    2332:	09 2e       	mov	r0, r25
    2334:	03 94       	inc	r0
    2336:	00 0c       	add	r0, r0
    2338:	11 f4       	brne	.+4      	; 0x233e <__fp_round+0xc>
    233a:	88 23       	and	r24, r24
    233c:	52 f0       	brmi	.+20     	; 0x2352 <__fp_round+0x20>
    233e:	bb 0f       	add	r27, r27
    2340:	40 f4       	brcc	.+16     	; 0x2352 <__fp_round+0x20>
    2342:	bf 2b       	or	r27, r31
    2344:	11 f4       	brne	.+4      	; 0x234a <__fp_round+0x18>
    2346:	60 ff       	sbrs	r22, 0
    2348:	04 c0       	rjmp	.+8      	; 0x2352 <__fp_round+0x20>
    234a:	6f 5f       	subi	r22, 0xFF	; 255
    234c:	7f 4f       	sbci	r23, 0xFF	; 255
    234e:	8f 4f       	sbci	r24, 0xFF	; 255
    2350:	9f 4f       	sbci	r25, 0xFF	; 255
    2352:	08 95       	ret

00002354 <__fp_split3>:
    2354:	57 fd       	sbrc	r21, 7
    2356:	90 58       	subi	r25, 0x80	; 128
    2358:	44 0f       	add	r20, r20
    235a:	55 1f       	adc	r21, r21
    235c:	59 f0       	breq	.+22     	; 0x2374 <__fp_splitA+0x10>
    235e:	5f 3f       	cpi	r21, 0xFF	; 255
    2360:	71 f0       	breq	.+28     	; 0x237e <__fp_splitA+0x1a>
    2362:	47 95       	ror	r20

00002364 <__fp_splitA>:
    2364:	88 0f       	add	r24, r24
    2366:	97 fb       	bst	r25, 7
    2368:	99 1f       	adc	r25, r25
    236a:	61 f0       	breq	.+24     	; 0x2384 <__fp_splitA+0x20>
    236c:	9f 3f       	cpi	r25, 0xFF	; 255
    236e:	79 f0       	breq	.+30     	; 0x238e <__fp_splitA+0x2a>
    2370:	87 95       	ror	r24
    2372:	08 95       	ret
    2374:	12 16       	cp	r1, r18
    2376:	13 06       	cpc	r1, r19
    2378:	14 06       	cpc	r1, r20
    237a:	55 1f       	adc	r21, r21
    237c:	f2 cf       	rjmp	.-28     	; 0x2362 <__fp_split3+0xe>
    237e:	46 95       	lsr	r20
    2380:	f1 df       	rcall	.-30     	; 0x2364 <__fp_splitA>
    2382:	08 c0       	rjmp	.+16     	; 0x2394 <__fp_splitA+0x30>
    2384:	16 16       	cp	r1, r22
    2386:	17 06       	cpc	r1, r23
    2388:	18 06       	cpc	r1, r24
    238a:	99 1f       	adc	r25, r25
    238c:	f1 cf       	rjmp	.-30     	; 0x2370 <__fp_splitA+0xc>
    238e:	86 95       	lsr	r24
    2390:	71 05       	cpc	r23, r1
    2392:	61 05       	cpc	r22, r1
    2394:	08 94       	sec
    2396:	08 95       	ret

00002398 <__fp_zero>:
    2398:	e8 94       	clt

0000239a <__fp_szero>:
    239a:	bb 27       	eor	r27, r27
    239c:	66 27       	eor	r22, r22
    239e:	77 27       	eor	r23, r23
    23a0:	cb 01       	movw	r24, r22
    23a2:	97 f9       	bld	r25, 7
    23a4:	08 95       	ret

000023a6 <__mulsf3>:
    23a6:	0b d0       	rcall	.+22     	; 0x23be <__mulsf3x>
    23a8:	c4 cf       	rjmp	.-120    	; 0x2332 <__fp_round>
    23aa:	b5 df       	rcall	.-150    	; 0x2316 <__fp_pscA>
    23ac:	28 f0       	brcs	.+10     	; 0x23b8 <__mulsf3+0x12>
    23ae:	ba df       	rcall	.-140    	; 0x2324 <__fp_pscB>
    23b0:	18 f0       	brcs	.+6      	; 0x23b8 <__mulsf3+0x12>
    23b2:	95 23       	and	r25, r21
    23b4:	09 f0       	breq	.+2      	; 0x23b8 <__mulsf3+0x12>
    23b6:	a6 cf       	rjmp	.-180    	; 0x2304 <__fp_inf>
    23b8:	ab cf       	rjmp	.-170    	; 0x2310 <__fp_nan>
    23ba:	11 24       	eor	r1, r1
    23bc:	ee cf       	rjmp	.-36     	; 0x239a <__fp_szero>

000023be <__mulsf3x>:
    23be:	ca df       	rcall	.-108    	; 0x2354 <__fp_split3>
    23c0:	a0 f3       	brcs	.-24     	; 0x23aa <__mulsf3+0x4>

000023c2 <__mulsf3_pse>:
    23c2:	95 9f       	mul	r25, r21
    23c4:	d1 f3       	breq	.-12     	; 0x23ba <__mulsf3+0x14>
    23c6:	95 0f       	add	r25, r21
    23c8:	50 e0       	ldi	r21, 0x00	; 0
    23ca:	55 1f       	adc	r21, r21
    23cc:	62 9f       	mul	r22, r18
    23ce:	f0 01       	movw	r30, r0
    23d0:	72 9f       	mul	r23, r18
    23d2:	bb 27       	eor	r27, r27
    23d4:	f0 0d       	add	r31, r0
    23d6:	b1 1d       	adc	r27, r1
    23d8:	63 9f       	mul	r22, r19
    23da:	aa 27       	eor	r26, r26
    23dc:	f0 0d       	add	r31, r0
    23de:	b1 1d       	adc	r27, r1
    23e0:	aa 1f       	adc	r26, r26
    23e2:	64 9f       	mul	r22, r20
    23e4:	66 27       	eor	r22, r22
    23e6:	b0 0d       	add	r27, r0
    23e8:	a1 1d       	adc	r26, r1
    23ea:	66 1f       	adc	r22, r22
    23ec:	82 9f       	mul	r24, r18
    23ee:	22 27       	eor	r18, r18
    23f0:	b0 0d       	add	r27, r0
    23f2:	a1 1d       	adc	r26, r1
    23f4:	62 1f       	adc	r22, r18
    23f6:	73 9f       	mul	r23, r19
    23f8:	b0 0d       	add	r27, r0
    23fa:	a1 1d       	adc	r26, r1
    23fc:	62 1f       	adc	r22, r18
    23fe:	83 9f       	mul	r24, r19
    2400:	a0 0d       	add	r26, r0
    2402:	61 1d       	adc	r22, r1
    2404:	22 1f       	adc	r18, r18
    2406:	74 9f       	mul	r23, r20
    2408:	33 27       	eor	r19, r19
    240a:	a0 0d       	add	r26, r0
    240c:	61 1d       	adc	r22, r1
    240e:	23 1f       	adc	r18, r19
    2410:	84 9f       	mul	r24, r20
    2412:	60 0d       	add	r22, r0
    2414:	21 1d       	adc	r18, r1
    2416:	82 2f       	mov	r24, r18
    2418:	76 2f       	mov	r23, r22
    241a:	6a 2f       	mov	r22, r26
    241c:	11 24       	eor	r1, r1
    241e:	9f 57       	subi	r25, 0x7F	; 127
    2420:	50 40       	sbci	r21, 0x00	; 0
    2422:	8a f0       	brmi	.+34     	; 0x2446 <__mulsf3_pse+0x84>
    2424:	e1 f0       	breq	.+56     	; 0x245e <__mulsf3_pse+0x9c>
    2426:	88 23       	and	r24, r24
    2428:	4a f0       	brmi	.+18     	; 0x243c <__mulsf3_pse+0x7a>
    242a:	ee 0f       	add	r30, r30
    242c:	ff 1f       	adc	r31, r31
    242e:	bb 1f       	adc	r27, r27
    2430:	66 1f       	adc	r22, r22
    2432:	77 1f       	adc	r23, r23
    2434:	88 1f       	adc	r24, r24
    2436:	91 50       	subi	r25, 0x01	; 1
    2438:	50 40       	sbci	r21, 0x00	; 0
    243a:	a9 f7       	brne	.-22     	; 0x2426 <__mulsf3_pse+0x64>
    243c:	9e 3f       	cpi	r25, 0xFE	; 254
    243e:	51 05       	cpc	r21, r1
    2440:	70 f0       	brcs	.+28     	; 0x245e <__mulsf3_pse+0x9c>
    2442:	60 cf       	rjmp	.-320    	; 0x2304 <__fp_inf>
    2444:	aa cf       	rjmp	.-172    	; 0x239a <__fp_szero>
    2446:	5f 3f       	cpi	r21, 0xFF	; 255
    2448:	ec f3       	brlt	.-6      	; 0x2444 <__mulsf3_pse+0x82>
    244a:	98 3e       	cpi	r25, 0xE8	; 232
    244c:	dc f3       	brlt	.-10     	; 0x2444 <__mulsf3_pse+0x82>
    244e:	86 95       	lsr	r24
    2450:	77 95       	ror	r23
    2452:	67 95       	ror	r22
    2454:	b7 95       	ror	r27
    2456:	f7 95       	ror	r31
    2458:	e7 95       	ror	r30
    245a:	9f 5f       	subi	r25, 0xFF	; 255
    245c:	c1 f7       	brne	.-16     	; 0x244e <__mulsf3_pse+0x8c>
    245e:	fe 2b       	or	r31, r30
    2460:	88 0f       	add	r24, r24
    2462:	91 1d       	adc	r25, r1
    2464:	96 95       	lsr	r25
    2466:	87 95       	ror	r24
    2468:	97 f9       	bld	r25, 7
    246a:	08 95       	ret

0000246c <__divmodhi4>:
    246c:	97 fb       	bst	r25, 7
    246e:	07 2e       	mov	r0, r23
    2470:	16 f4       	brtc	.+4      	; 0x2476 <__divmodhi4+0xa>
    2472:	00 94       	com	r0
    2474:	06 d0       	rcall	.+12     	; 0x2482 <__divmodhi4_neg1>
    2476:	77 fd       	sbrc	r23, 7
    2478:	08 d0       	rcall	.+16     	; 0x248a <__divmodhi4_neg2>
    247a:	13 d0       	rcall	.+38     	; 0x24a2 <__udivmodhi4>
    247c:	07 fc       	sbrc	r0, 7
    247e:	05 d0       	rcall	.+10     	; 0x248a <__divmodhi4_neg2>
    2480:	3e f4       	brtc	.+14     	; 0x2490 <__divmodhi4_exit>

00002482 <__divmodhi4_neg1>:
    2482:	90 95       	com	r25
    2484:	81 95       	neg	r24
    2486:	9f 4f       	sbci	r25, 0xFF	; 255
    2488:	08 95       	ret

0000248a <__divmodhi4_neg2>:
    248a:	70 95       	com	r23
    248c:	61 95       	neg	r22
    248e:	7f 4f       	sbci	r23, 0xFF	; 255

00002490 <__divmodhi4_exit>:
    2490:	08 95       	ret

00002492 <__tablejump2__>:
    2492:	ee 0f       	add	r30, r30
    2494:	ff 1f       	adc	r31, r31
    2496:	88 1f       	adc	r24, r24
    2498:	8b bf       	out	0x3b, r24	; 59
    249a:	07 90       	elpm	r0, Z+
    249c:	f6 91       	elpm	r31, Z
    249e:	e0 2d       	mov	r30, r0
    24a0:	19 94       	eijmp

000024a2 <__udivmodhi4>:
    24a2:	aa 1b       	sub	r26, r26
    24a4:	bb 1b       	sub	r27, r27
    24a6:	51 e1       	ldi	r21, 0x11	; 17
    24a8:	07 c0       	rjmp	.+14     	; 0x24b8 <__udivmodhi4_ep>

000024aa <__udivmodhi4_loop>:
    24aa:	aa 1f       	adc	r26, r26
    24ac:	bb 1f       	adc	r27, r27
    24ae:	a6 17       	cp	r26, r22
    24b0:	b7 07       	cpc	r27, r23
    24b2:	10 f0       	brcs	.+4      	; 0x24b8 <__udivmodhi4_ep>
    24b4:	a6 1b       	sub	r26, r22
    24b6:	b7 0b       	sbc	r27, r23

000024b8 <__udivmodhi4_ep>:
    24b8:	88 1f       	adc	r24, r24
    24ba:	99 1f       	adc	r25, r25
    24bc:	5a 95       	dec	r21
    24be:	a9 f7       	brne	.-22     	; 0x24aa <__udivmodhi4_loop>
    24c0:	80 95       	com	r24
    24c2:	90 95       	com	r25
    24c4:	bc 01       	movw	r22, r24
    24c6:	cd 01       	movw	r24, r26
    24c8:	08 95       	ret

000024ca <__itoa_ncheck>:
    24ca:	bb 27       	eor	r27, r27
    24cc:	4a 30       	cpi	r20, 0x0A	; 10
    24ce:	31 f4       	brne	.+12     	; 0x24dc <__itoa_ncheck+0x12>
    24d0:	99 23       	and	r25, r25
    24d2:	22 f4       	brpl	.+8      	; 0x24dc <__itoa_ncheck+0x12>
    24d4:	bd e2       	ldi	r27, 0x2D	; 45
    24d6:	90 95       	com	r25
    24d8:	81 95       	neg	r24
    24da:	9f 4f       	sbci	r25, 0xFF	; 255
    24dc:	01 c0       	rjmp	.+2      	; 0x24e0 <__utoa_common>

000024de <__utoa_ncheck>:
    24de:	bb 27       	eor	r27, r27

000024e0 <__utoa_common>:
    24e0:	fb 01       	movw	r30, r22
    24e2:	55 27       	eor	r21, r21
    24e4:	aa 27       	eor	r26, r26
    24e6:	88 0f       	add	r24, r24
    24e8:	99 1f       	adc	r25, r25
    24ea:	aa 1f       	adc	r26, r26
    24ec:	a4 17       	cp	r26, r20
    24ee:	10 f0       	brcs	.+4      	; 0x24f4 <__utoa_common+0x14>
    24f0:	a4 1b       	sub	r26, r20
    24f2:	83 95       	inc	r24
    24f4:	50 51       	subi	r21, 0x10	; 16
    24f6:	b9 f7       	brne	.-18     	; 0x24e6 <__utoa_common+0x6>
    24f8:	a0 5d       	subi	r26, 0xD0	; 208
    24fa:	aa 33       	cpi	r26, 0x3A	; 58
    24fc:	08 f0       	brcs	.+2      	; 0x2500 <__utoa_common+0x20>
    24fe:	a9 5d       	subi	r26, 0xD9	; 217
    2500:	a1 93       	st	Z+, r26
    2502:	00 97       	sbiw	r24, 0x00	; 0
    2504:	79 f7       	brne	.-34     	; 0x24e4 <__utoa_common+0x4>
    2506:	b1 11       	cpse	r27, r1
    2508:	b1 93       	st	Z+, r27
    250a:	11 92       	st	Z+, r1
    250c:	cb 01       	movw	r24, r22
    250e:	00 c0       	rjmp	.+0      	; 0x2510 <strrev>

00002510 <strrev>:
    2510:	dc 01       	movw	r26, r24
    2512:	fc 01       	movw	r30, r24
    2514:	67 2f       	mov	r22, r23
    2516:	71 91       	ld	r23, Z+
    2518:	77 23       	and	r23, r23
    251a:	e1 f7       	brne	.-8      	; 0x2514 <strrev+0x4>
    251c:	32 97       	sbiw	r30, 0x02	; 2
    251e:	04 c0       	rjmp	.+8      	; 0x2528 <strrev+0x18>
    2520:	7c 91       	ld	r23, X
    2522:	6d 93       	st	X+, r22
    2524:	70 83       	st	Z, r23
    2526:	62 91       	ld	r22, -Z
    2528:	ae 17       	cp	r26, r30
    252a:	bf 07       	cpc	r27, r31
    252c:	c8 f3       	brcs	.-14     	; 0x2520 <strrev+0x10>
    252e:	08 95       	ret

00002530 <__do_global_dtors>:
    2530:	10 e0       	ldi	r17, 0x00	; 0
    2532:	ce ee       	ldi	r28, 0xEE	; 238
    2534:	d0 e0       	ldi	r29, 0x00	; 0
    2536:	00 e0       	ldi	r16, 0x00	; 0
    2538:	05 c0       	rjmp	.+10     	; 0x2544 <__do_global_dtors+0x14>
    253a:	80 2f       	mov	r24, r16
    253c:	fe 01       	movw	r30, r28
    253e:	a9 df       	rcall	.-174    	; 0x2492 <__tablejump2__>
    2540:	21 96       	adiw	r28, 0x01	; 1
    2542:	01 1d       	adc	r16, r1
    2544:	cf 3e       	cpi	r28, 0xEF	; 239
    2546:	d1 07       	cpc	r29, r17
    2548:	80 e0       	ldi	r24, 0x00	; 0
    254a:	08 07       	cpc	r16, r24
    254c:	b1 f7       	brne	.-20     	; 0x253a <__do_global_dtors+0xa>
    254e:	f8 94       	cli

00002550 <__stop_program>:
    2550:	ff cf       	rjmp	.-2      	; 0x2550 <__stop_program>
