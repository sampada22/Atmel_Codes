
encoderLCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000754  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000007c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000004d  00800060  00800060  000007c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018a2  00000000  00000000  0000096c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3b  00000000  00000000  0000220e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c27  00000000  00000000  00002d49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d4  00000000  00000000  00003970  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075d  00000000  00000000  00003d44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000153a  00000000  00000000  000044a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000138  00000000  00000000  000059db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 1a 01 	jmp	0x234	; 0x234 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3f 01 	jmp	0x27e	; 0x27e <__vector_7>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 89 01 	jmp	0x312	; 0x312 <__vector_13>
  38:	0c 94 b2 01 	jmp	0x364	; 0x364 <__vector_14>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	ad 3a       	cpi	r26, 0xAD	; 173
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <main>
  74:	0c 94 a8 03 	jmp	0x750	; 0x750 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <_ZL9lcd_writeh>:
void lcd_num( int num, int radix )
{
	char str[6];
	itoa( num, str, radix );
	lcd_puts( str );
}
  7c:	95 ed       	ldi	r25, 0xD5	; 213
  7e:	9a 95       	dec	r25
  80:	f1 f7       	brne	.-4      	; 0x7e <_ZL9lcd_writeh+0x2>
  82:	00 00       	nop
  84:	88 23       	and	r24, r24
  86:	14 f4       	brge	.+4      	; 0x8c <_ZL9lcd_writeh+0x10>
  88:	da 9a       	sbi	0x1b, 2	; 27
  8a:	01 c0       	rjmp	.+2      	; 0x8e <_ZL9lcd_writeh+0x12>
  8c:	da 98       	cbi	0x1b, 2	; 27
  8e:	86 ff       	sbrs	r24, 6
  90:	02 c0       	rjmp	.+4      	; 0x96 <_ZL9lcd_writeh+0x1a>
  92:	db 9a       	sbi	0x1b, 3	; 27
  94:	01 c0       	rjmp	.+2      	; 0x98 <_ZL9lcd_writeh+0x1c>
  96:	db 98       	cbi	0x1b, 3	; 27
  98:	85 ff       	sbrs	r24, 5
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <_ZL9lcd_writeh+0x24>
  9c:	dc 9a       	sbi	0x1b, 4	; 27
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <_ZL9lcd_writeh+0x26>
  a0:	dc 98       	cbi	0x1b, 4	; 27
  a2:	84 ff       	sbrs	r24, 4
  a4:	02 c0       	rjmp	.+4      	; 0xaa <_ZL9lcd_writeh+0x2e>
  a6:	dd 9a       	sbi	0x1b, 5	; 27
  a8:	01 c0       	rjmp	.+2      	; 0xac <_ZL9lcd_writeh+0x30>
  aa:	dd 98       	cbi	0x1b, 5	; 27
  ac:	de 9a       	sbi	0x1b, 6	; 27
  ae:	de 98       	cbi	0x1b, 6	; 27
  b0:	83 ff       	sbrs	r24, 3
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <_ZL9lcd_writeh+0x3c>
  b4:	da 9a       	sbi	0x1b, 2	; 27
  b6:	01 c0       	rjmp	.+2      	; 0xba <_ZL9lcd_writeh+0x3e>
  b8:	da 98       	cbi	0x1b, 2	; 27
  ba:	82 ff       	sbrs	r24, 2
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <_ZL9lcd_writeh+0x46>
  be:	db 9a       	sbi	0x1b, 3	; 27
  c0:	01 c0       	rjmp	.+2      	; 0xc4 <_ZL9lcd_writeh+0x48>
  c2:	db 98       	cbi	0x1b, 3	; 27
  c4:	81 ff       	sbrs	r24, 1
  c6:	02 c0       	rjmp	.+4      	; 0xcc <_ZL9lcd_writeh+0x50>
  c8:	dc 9a       	sbi	0x1b, 4	; 27
  ca:	01 c0       	rjmp	.+2      	; 0xce <_ZL9lcd_writeh+0x52>
  cc:	dc 98       	cbi	0x1b, 4	; 27
  ce:	80 ff       	sbrs	r24, 0
  d0:	02 c0       	rjmp	.+4      	; 0xd6 <_ZL9lcd_writeh+0x5a>
  d2:	dd 9a       	sbi	0x1b, 5	; 27
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <_ZL9lcd_writeh+0x5c>
  d6:	dd 98       	cbi	0x1b, 5	; 27
  d8:	de 9a       	sbi	0x1b, 6	; 27
  da:	de 98       	cbi	0x1b, 6	; 27
  dc:	08 95       	ret

000000de <_Z9lcd_clearv>:
  de:	df 98       	cbi	0x1b, 7	; 27
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
  e6:	8f e3       	ldi	r24, 0x3F	; 63
  e8:	9f e1       	ldi	r25, 0x1F	; 31
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <_Z9lcd_clearv+0xc>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <_Z9lcd_clearv+0x12>
  f0:	00 00       	nop
  f2:	08 95       	ret

000000f4 <_Z9lcd_putchc>:
  f4:	df 9a       	sbi	0x1b, 7	; 27
  f6:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
  fa:	08 95       	ret

000000fc <_Z8lcd_gotoh>:
  fc:	df 98       	cbi	0x1b, 7	; 27
  fe:	80 68       	ori	r24, 0x80	; 128
 100:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
 104:	08 95       	ret

00000106 <_Z8lcd_initv>:
 106:	d7 9a       	sbi	0x1a, 7	; 26
 108:	d6 9a       	sbi	0x1a, 6	; 26
 10a:	d2 9a       	sbi	0x1a, 2	; 26
 10c:	d3 9a       	sbi	0x1a, 3	; 26
 10e:	d4 9a       	sbi	0x1a, 4	; 26
 110:	d5 9a       	sbi	0x1a, 5	; 26
 112:	df 98       	cbi	0x1b, 7	; 27
 114:	de 98       	cbi	0x1b, 6	; 27
 116:	8f e5       	ldi	r24, 0x5F	; 95
 118:	9a ee       	ldi	r25, 0xEA	; 234
 11a:	01 97       	sbiw	r24, 0x01	; 1
 11c:	f1 f7       	brne	.-4      	; 0x11a <_Z8lcd_initv+0x14>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <_Z8lcd_initv+0x1a>
 120:	00 00       	nop
 122:	dd 9a       	sbi	0x1b, 5	; 27
 124:	dc 9a       	sbi	0x1b, 4	; 27
 126:	db 98       	cbi	0x1b, 3	; 27
 128:	da 98       	cbi	0x1b, 2	; 27
 12a:	de 9a       	sbi	0x1b, 6	; 27
 12c:	de 98       	cbi	0x1b, 6	; 27
 12e:	8f e1       	ldi	r24, 0x1F	; 31
 130:	9e e4       	ldi	r25, 0x4E	; 78
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <_Z8lcd_initv+0x2c>
 136:	00 c0       	rjmp	.+0      	; 0x138 <_Z8lcd_initv+0x32>
 138:	00 00       	nop
 13a:	de 9a       	sbi	0x1b, 6	; 27
 13c:	de 98       	cbi	0x1b, 6	; 27
 13e:	8f e1       	ldi	r24, 0x1F	; 31
 140:	93 e0       	ldi	r25, 0x03	; 3
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <_Z8lcd_initv+0x3c>
 146:	00 c0       	rjmp	.+0      	; 0x148 <_Z8lcd_initv+0x42>
 148:	00 00       	nop
 14a:	de 9a       	sbi	0x1b, 6	; 27
 14c:	de 98       	cbi	0x1b, 6	; 27
 14e:	8f e1       	ldi	r24, 0x1F	; 31
 150:	93 e0       	ldi	r25, 0x03	; 3
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <_Z8lcd_initv+0x4c>
 156:	00 c0       	rjmp	.+0      	; 0x158 <_Z8lcd_initv+0x52>
 158:	00 00       	nop
 15a:	dd 98       	cbi	0x1b, 5	; 27
 15c:	dc 9a       	sbi	0x1b, 4	; 27
 15e:	db 98       	cbi	0x1b, 3	; 27
 160:	da 98       	cbi	0x1b, 2	; 27
 162:	de 9a       	sbi	0x1b, 6	; 27
 164:	de 98       	cbi	0x1b, 6	; 27
 166:	88 e2       	ldi	r24, 0x28	; 40
 168:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
 16c:	8c e0       	ldi	r24, 0x0C	; 12
 16e:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
 172:	0e 94 6f 00 	call	0xde	; 0xde <_Z9lcd_clearv>
 176:	86 e0       	ldi	r24, 0x06	; 6
 178:	0e 94 3e 00 	call	0x7c	; 0x7c <_ZL9lcd_writeh>
 17c:	08 95       	ret

0000017e <_Z10lcd_putinti>:
 17e:	0f 93       	push	r16
 180:	1f 93       	push	r17
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	cd b7       	in	r28, 0x3d	; 61
 188:	de b7       	in	r29, 0x3e	; 62
 18a:	2f 97       	sbiw	r28, 0x0f	; 15
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	f8 94       	cli
 190:	de bf       	out	0x3e, r29	; 62
 192:	0f be       	out	0x3f, r0	; 63
 194:	cd bf       	out	0x3d, r28	; 61
 196:	4a e0       	ldi	r20, 0x0A	; 10
 198:	be 01       	movw	r22, r28
 19a:	6f 5f       	subi	r22, 0xFF	; 255
 19c:	7f 4f       	sbci	r23, 0xFF	; 255
 19e:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__itoa_ncheck>
 1a2:	89 81       	ldd	r24, Y+1	; 0x01
 1a4:	88 23       	and	r24, r24
 1a6:	51 f0       	breq	.+20     	; 0x1bc <_Z10lcd_putinti+0x3e>
 1a8:	8e 01       	movw	r16, r28
 1aa:	0e 5f       	subi	r16, 0xFE	; 254
 1ac:	1f 4f       	sbci	r17, 0xFF	; 255
 1ae:	0e 94 7a 00 	call	0xf4	; 0xf4 <_Z9lcd_putchc>
 1b2:	f8 01       	movw	r30, r16
 1b4:	81 91       	ld	r24, Z+
 1b6:	8f 01       	movw	r16, r30
 1b8:	81 11       	cpse	r24, r1
 1ba:	f9 cf       	rjmp	.-14     	; 0x1ae <_Z10lcd_putinti+0x30>
 1bc:	2f 96       	adiw	r28, 0x0f	; 15
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	f8 94       	cli
 1c2:	de bf       	out	0x3e, r29	; 62
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	cd bf       	out	0x3d, r28	; 61
 1c8:	df 91       	pop	r29
 1ca:	cf 91       	pop	r28
 1cc:	1f 91       	pop	r17
 1ce:	0f 91       	pop	r16
 1d0:	08 95       	ret

000001d2 <_Z10lcd_gotoxyhh>:

void lcd_gotoxy( unsigned char x, unsigned char y )
{
	lcd_goto( y*64+x );
 1d2:	90 e4       	ldi	r25, 0x40	; 64
 1d4:	69 9f       	mul	r22, r25
 1d6:	80 0d       	add	r24, r0
 1d8:	11 24       	eor	r1, r1
 1da:	0e 94 7e 00 	call	0xfc	; 0xfc <_Z8lcd_gotoh>
 1de:	08 95       	ret

000001e0 <main>:
volatile  long unsigned rpm=0;   // Revolution per min

int main(void)
{	
	
	DDRD   = (0<<PIND2)|(0<<PIND3)|(1<<PIND7);
 1e0:	80 e8       	ldi	r24, 0x80	; 128
 1e2:	81 bb       	out	0x11, r24	; 17
	
	lcd_init();
 1e4:	0e 94 83 00 	call	0x106	; 0x106 <_Z8lcd_initv>
	// Timer Clock = 1/1024 of sys clock and CTC mode
	TCCR1B|=((1<<WGM12)|(1<<CS12)|(1<<CS10));
 1e8:	8e b5       	in	r24, 0x2e	; 46
 1ea:	8d 60       	ori	r24, 0x0D	; 13
 1ec:	8e bd       	out	0x2e, r24	; 46
	
	// Initialize INT0
	MCUCR |= (1<<ISC00)|(1<<ISC01);   // Rising edge on INT0 triggers interrupt.
 1ee:	85 b7       	in	r24, 0x35	; 53
 1f0:	83 60       	ori	r24, 0x03	; 3
 1f2:	85 bf       	out	0x35, r24	; 53
	GICR  |= (1<<INT0);               // Enable INT0 interrupt
 1f4:	8b b7       	in	r24, 0x3b	; 59
 1f6:	80 64       	ori	r24, 0x40	; 64
 1f8:	8b bf       	out	0x3b, r24	; 59
	TIMSK |= (1<<OCIE1A);             // Output compare 1A interrupt enable
 1fa:	89 b7       	in	r24, 0x39	; 57
 1fc:	80 61       	ori	r24, 0x10	; 16
 1fe:	89 bf       	out	0x39, r24	; 57
	OCR1A  = (15624*SAMPLE_TIME);     // Compare value = 1 second
 200:	80 e1       	ldi	r24, 0x10	; 16
 202:	9a e7       	ldi	r25, 0x7A	; 122
 204:	9b bd       	out	0x2b, r25	; 43
 206:	8a bd       	out	0x2a, r24	; 42
	sei();
 208:	78 94       	sei
	
	lcd_gotoxy(2,2);
 20a:	62 e0       	ldi	r22, 0x02	; 2
 20c:	82 e0       	ldi	r24, 0x02	; 2
 20e:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <_Z10lcd_gotoxyhh>
	

	while(1)
	{
	  
	   lcd_putint(rpm);
 212:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 216:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <_edata+0x1>
 21a:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <_edata+0x2>
 21e:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <_edata+0x3>
 222:	0e 94 bf 00 	call	0x17e	; 0x17e <_Z10lcd_putinti>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 226:	8f e3       	ldi	r24, 0x3F	; 63
 228:	9c e9       	ldi	r25, 0x9C	; 156
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <main+0x4a>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x50>
 230:	00 00       	nop
 232:	ef cf       	rjmp	.-34     	; 0x212 <main+0x32>

00000234 <__vector_1>:
	}
	return 0;
}

ISR(INT0_vect)
{
 234:	1f 92       	push	r1
 236:	0f 92       	push	r0
 238:	0f b6       	in	r0, 0x3f	; 63
 23a:	0f 92       	push	r0
 23c:	11 24       	eor	r1, r1
 23e:	8f 93       	push	r24
 240:	9f 93       	push	r25
 242:	af 93       	push	r26
 244:	bf 93       	push	r27
	   
count++;
 246:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <count>
 24a:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <count+0x1>
 24e:	a0 91 66 00 	lds	r26, 0x0066	; 0x800066 <count+0x2>
 252:	b0 91 67 00 	lds	r27, 0x0067	; 0x800067 <count+0x3>
 256:	01 96       	adiw	r24, 0x01	; 1
 258:	a1 1d       	adc	r26, r1
 25a:	b1 1d       	adc	r27, r1
 25c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <count>
 260:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <count+0x1>
 264:	a0 93 66 00 	sts	0x0066, r26	; 0x800066 <count+0x2>
 268:	b0 93 67 00 	sts	0x0067, r27	; 0x800067 <count+0x3>
 	 	
}
 26c:	bf 91       	pop	r27
 26e:	af 91       	pop	r26
 270:	9f 91       	pop	r25
 272:	8f 91       	pop	r24
 274:	0f 90       	pop	r0
 276:	0f be       	out	0x3f, r0	; 63
 278:	0f 90       	pop	r0
 27a:	1f 90       	pop	r1
 27c:	18 95       	reti

0000027e <__vector_7>:

ISR(TIMER1_COMPA_vect)
{
 27e:	1f 92       	push	r1
 280:	0f 92       	push	r0
 282:	0f b6       	in	r0, 0x3f	; 63
 284:	0f 92       	push	r0
 286:	11 24       	eor	r1, r1
 288:	2f 93       	push	r18
 28a:	3f 93       	push	r19
 28c:	4f 93       	push	r20
 28e:	5f 93       	push	r21
 290:	6f 93       	push	r22
 292:	7f 93       	push	r23
 294:	8f 93       	push	r24
 296:	9f 93       	push	r25
 298:	af 93       	push	r26
 29a:	bf 93       	push	r27
 29c:	ef 93       	push	r30
 29e:	ff 93       	push	r31
	// Every SAMPLE_TIME sec !
	
	rpm = (count*60.0)/(kppr*SAMPLE_TIME);
 2a0:	60 91 64 00 	lds	r22, 0x0064	; 0x800064 <count>
 2a4:	70 91 65 00 	lds	r23, 0x0065	; 0x800065 <count+0x1>
 2a8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <count+0x2>
 2ac:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <count+0x3>
 2b0:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__floatunsisf>
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	40 e7       	ldi	r20, 0x70	; 112
 2ba:	52 e4       	ldi	r21, 0x42	; 66
 2bc:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	48 e4       	ldi	r20, 0x48	; 72
 2c6:	53 e4       	ldi	r21, 0x43	; 67
 2c8:	0e 94 d7 01 	call	0x3ae	; 0x3ae <__divsf3>
 2cc:	0e 94 49 02 	call	0x492	; 0x492 <__fixunssfsi>
 2d0:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <_edata>
 2d4:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <_edata+0x1>
 2d8:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <_edata+0x2>
 2dc:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <_edata+0x3>
	
	count = 0;
 2e0:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <count>
 2e4:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <count+0x1>
 2e8:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <count+0x2>
 2ec:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <count+0x3>
}
 2f0:	ff 91       	pop	r31
 2f2:	ef 91       	pop	r30
 2f4:	bf 91       	pop	r27
 2f6:	af 91       	pop	r26
 2f8:	9f 91       	pop	r25
 2fa:	8f 91       	pop	r24
 2fc:	7f 91       	pop	r23
 2fe:	6f 91       	pop	r22
 300:	5f 91       	pop	r21
 302:	4f 91       	pop	r20
 304:	3f 91       	pop	r19
 306:	2f 91       	pop	r18
 308:	0f 90       	pop	r0
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	0f 90       	pop	r0
 30e:	1f 90       	pop	r1
 310:	18 95       	reti

00000312 <__vector_13>:
ISR(UART_RECEIVE_INTERRUPT)
/*************************************************************************
Function: UART Receive Complete interrupt
Purpose:  called when the UART has received a character
**************************************************************************/
{
 312:	1f 92       	push	r1
 314:	0f 92       	push	r0
 316:	0f b6       	in	r0, 0x3f	; 63
 318:	0f 92       	push	r0
 31a:	11 24       	eor	r1, r1
 31c:	2f 93       	push	r18
 31e:	8f 93       	push	r24
 320:	9f 93       	push	r25
 322:	ef 93       	push	r30
 324:	ff 93       	push	r31
    unsigned char usr;
    unsigned char lastRxError;
 
 
    /* read UART status register and UART data register */ 
    usr  = UART_STATUS;
 326:	8b b1       	in	r24, 0x0b	; 11
    data = UART_DATA;
 328:	2c b1       	in	r18, 0x0c	; 12
    
    /* */

    lastRxError = (usr & (_BV(FE)|_BV(DOR)) );
 32a:	88 71       	andi	r24, 0x18	; 24

        
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
 32c:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <_ZL11UART_RxHead>
 330:	ef 5f       	subi	r30, 0xFF	; 255
 332:	ef 71       	andi	r30, 0x1F	; 31
    
    if ( tmphead == UART_RxTail ) {
 334:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <_ZL11UART_RxTail>
 338:	e9 17       	cp	r30, r25
 33a:	39 f0       	breq	.+14     	; 0x34a <__vector_13+0x38>
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
    }else{
        /* store new index */
        UART_RxHead = tmphead;
 33c:	e0 93 6a 00 	sts	0x006A, r30	; 0x80006a <_ZL11UART_RxHead>
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	e3 59       	subi	r30, 0x93	; 147
 344:	ff 4f       	sbci	r31, 0xFF	; 255
 346:	20 83       	st	Z, r18
 348:	01 c0       	rjmp	.+2      	; 0x34c <__vector_13+0x3a>
    /* calculate buffer index */ 
    tmphead = ( UART_RxHead + 1) & UART_RX_BUFFER_MASK;
    
    if ( tmphead == UART_RxTail ) {
        /* error: receive buffer overflow */
        lastRxError = UART_BUFFER_OVERFLOW >> 8;
 34a:	82 e0       	ldi	r24, 0x02	; 2
        /* store new index */
        UART_RxHead = tmphead;
        /* store received data in buffer */
        UART_RxBuf[tmphead] = data;
    }
    UART_LastRxError = lastRxError;   
 34c:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <_ZL16UART_LastRxError>
}
 350:	ff 91       	pop	r31
 352:	ef 91       	pop	r30
 354:	9f 91       	pop	r25
 356:	8f 91       	pop	r24
 358:	2f 91       	pop	r18
 35a:	0f 90       	pop	r0
 35c:	0f be       	out	0x3f, r0	; 63
 35e:	0f 90       	pop	r0
 360:	1f 90       	pop	r1
 362:	18 95       	reti

00000364 <__vector_14>:
ISR(UART_TRANSMIT_INTERRUPT)
/*************************************************************************
Function: UART Data Register Empty interrupt
Purpose:  called when the UART is ready to transmit the next byte
**************************************************************************/
{
 364:	1f 92       	push	r1
 366:	0f 92       	push	r0
 368:	0f b6       	in	r0, 0x3f	; 63
 36a:	0f 92       	push	r0
 36c:	11 24       	eor	r1, r1
 36e:	8f 93       	push	r24
 370:	9f 93       	push	r25
 372:	ef 93       	push	r30
 374:	ff 93       	push	r31
    unsigned char tmptail;

    
    if ( UART_TxHead != UART_TxTail) {
 376:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <_ZL11UART_TxHead>
 37a:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <_ZL11UART_TxTail>
 37e:	98 17       	cp	r25, r24
 380:	61 f0       	breq	.+24     	; 0x39a <__vector_14+0x36>
        /* calculate and store new buffer index */
        tmptail = (UART_TxTail + 1) & UART_TX_BUFFER_MASK;
 382:	e0 91 6b 00 	lds	r30, 0x006B	; 0x80006b <_ZL11UART_TxTail>
 386:	ef 5f       	subi	r30, 0xFF	; 255
 388:	ef 71       	andi	r30, 0x1F	; 31
        UART_TxTail = tmptail;
 38a:	e0 93 6b 00 	sts	0x006B, r30	; 0x80006b <_ZL11UART_TxTail>
        /* get one byte from buffer and write it to UART */
        UART_DATA = UART_TxBuf[tmptail];  /* start transmission */
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	e3 57       	subi	r30, 0x73	; 115
 392:	ff 4f       	sbci	r31, 0xFF	; 255
 394:	80 81       	ld	r24, Z
 396:	8c b9       	out	0x0c, r24	; 12
 398:	01 c0       	rjmp	.+2      	; 0x39c <__vector_14+0x38>
    }else{
        /* tx buffer empty, disable UDRE interrupt */
        UART_CONTROL &= ~_BV(UART_UDRIE);
 39a:	55 98       	cbi	0x0a, 5	; 10
    }
}
 39c:	ff 91       	pop	r31
 39e:	ef 91       	pop	r30
 3a0:	9f 91       	pop	r25
 3a2:	8f 91       	pop	r24
 3a4:	0f 90       	pop	r0
 3a6:	0f be       	out	0x3f, r0	; 63
 3a8:	0f 90       	pop	r0
 3aa:	1f 90       	pop	r1
 3ac:	18 95       	reti

000003ae <__divsf3>:
 3ae:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__divsf3x>
 3b2:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_round>
 3b6:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_pscB>
 3ba:	58 f0       	brcs	.+22     	; 0x3d2 <__divsf3+0x24>
 3bc:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_pscA>
 3c0:	40 f0       	brcs	.+16     	; 0x3d2 <__divsf3+0x24>
 3c2:	29 f4       	brne	.+10     	; 0x3ce <__divsf3+0x20>
 3c4:	5f 3f       	cpi	r21, 0xFF	; 255
 3c6:	29 f0       	breq	.+10     	; 0x3d2 <__divsf3+0x24>
 3c8:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_inf>
 3cc:	51 11       	cpse	r21, r1
 3ce:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_szero>
 3d2:	0c 94 bb 02 	jmp	0x576	; 0x576 <__fp_nan>

000003d6 <__divsf3x>:
 3d6:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__fp_split3>
 3da:	68 f3       	brcs	.-38     	; 0x3b6 <__divsf3+0x8>

000003dc <__divsf3_pse>:
 3dc:	99 23       	and	r25, r25
 3de:	b1 f3       	breq	.-20     	; 0x3cc <__divsf3+0x1e>
 3e0:	55 23       	and	r21, r21
 3e2:	91 f3       	breq	.-28     	; 0x3c8 <__divsf3+0x1a>
 3e4:	95 1b       	sub	r25, r21
 3e6:	55 0b       	sbc	r21, r21
 3e8:	bb 27       	eor	r27, r27
 3ea:	aa 27       	eor	r26, r26
 3ec:	62 17       	cp	r22, r18
 3ee:	73 07       	cpc	r23, r19
 3f0:	84 07       	cpc	r24, r20
 3f2:	38 f0       	brcs	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	9f 5f       	subi	r25, 0xFF	; 255
 3f6:	5f 4f       	sbci	r21, 0xFF	; 255
 3f8:	22 0f       	add	r18, r18
 3fa:	33 1f       	adc	r19, r19
 3fc:	44 1f       	adc	r20, r20
 3fe:	aa 1f       	adc	r26, r26
 400:	a9 f3       	breq	.-22     	; 0x3ec <__divsf3_pse+0x10>
 402:	35 d0       	rcall	.+106    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 404:	0e 2e       	mov	r0, r30
 406:	3a f0       	brmi	.+14     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 408:	e0 e8       	ldi	r30, 0x80	; 128
 40a:	32 d0       	rcall	.+100    	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 40c:	91 50       	subi	r25, 0x01	; 1
 40e:	50 40       	sbci	r21, 0x00	; 0
 410:	e6 95       	lsr	r30
 412:	00 1c       	adc	r0, r0
 414:	ca f7       	brpl	.-14     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 416:	2b d0       	rcall	.+86     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 418:	fe 2f       	mov	r31, r30
 41a:	29 d0       	rcall	.+82     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 41c:	66 0f       	add	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	bb 1f       	adc	r27, r27
 424:	26 17       	cp	r18, r22
 426:	37 07       	cpc	r19, r23
 428:	48 07       	cpc	r20, r24
 42a:	ab 07       	cpc	r26, r27
 42c:	b0 e8       	ldi	r27, 0x80	; 128
 42e:	09 f0       	breq	.+2      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 430:	bb 0b       	sbc	r27, r27
 432:	80 2d       	mov	r24, r0
 434:	bf 01       	movw	r22, r30
 436:	ff 27       	eor	r31, r31
 438:	93 58       	subi	r25, 0x83	; 131
 43a:	5f 4f       	sbci	r21, 0xFF	; 255
 43c:	3a f0       	brmi	.+14     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 43e:	9e 3f       	cpi	r25, 0xFE	; 254
 440:	51 05       	cpc	r21, r1
 442:	78 f0       	brcs	.+30     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 444:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_inf>
 448:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_szero>
 44c:	5f 3f       	cpi	r21, 0xFF	; 255
 44e:	e4 f3       	brlt	.-8      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 450:	98 3e       	cpi	r25, 0xE8	; 232
 452:	d4 f3       	brlt	.-12     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 454:	86 95       	lsr	r24
 456:	77 95       	ror	r23
 458:	67 95       	ror	r22
 45a:	b7 95       	ror	r27
 45c:	f7 95       	ror	r31
 45e:	9f 5f       	subi	r25, 0xFF	; 255
 460:	c9 f7       	brne	.-14     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 462:	88 0f       	add	r24, r24
 464:	91 1d       	adc	r25, r1
 466:	96 95       	lsr	r25
 468:	87 95       	ror	r24
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret
 46e:	e1 e0       	ldi	r30, 0x01	; 1
 470:	66 0f       	add	r22, r22
 472:	77 1f       	adc	r23, r23
 474:	88 1f       	adc	r24, r24
 476:	bb 1f       	adc	r27, r27
 478:	62 17       	cp	r22, r18
 47a:	73 07       	cpc	r23, r19
 47c:	84 07       	cpc	r24, r20
 47e:	ba 07       	cpc	r27, r26
 480:	20 f0       	brcs	.+8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 482:	62 1b       	sub	r22, r18
 484:	73 0b       	sbc	r23, r19
 486:	84 0b       	sbc	r24, r20
 488:	ba 0b       	sbc	r27, r26
 48a:	ee 1f       	adc	r30, r30
 48c:	88 f7       	brcc	.-30     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 48e:	e0 95       	com	r30
 490:	08 95       	ret

00000492 <__fixunssfsi>:
 492:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fp_splitA>
 496:	88 f0       	brcs	.+34     	; 0x4ba <__fixunssfsi+0x28>
 498:	9f 57       	subi	r25, 0x7F	; 127
 49a:	98 f0       	brcs	.+38     	; 0x4c2 <__fixunssfsi+0x30>
 49c:	b9 2f       	mov	r27, r25
 49e:	99 27       	eor	r25, r25
 4a0:	b7 51       	subi	r27, 0x17	; 23
 4a2:	b0 f0       	brcs	.+44     	; 0x4d0 <__fixunssfsi+0x3e>
 4a4:	e1 f0       	breq	.+56     	; 0x4de <__fixunssfsi+0x4c>
 4a6:	66 0f       	add	r22, r22
 4a8:	77 1f       	adc	r23, r23
 4aa:	88 1f       	adc	r24, r24
 4ac:	99 1f       	adc	r25, r25
 4ae:	1a f0       	brmi	.+6      	; 0x4b6 <__fixunssfsi+0x24>
 4b0:	ba 95       	dec	r27
 4b2:	c9 f7       	brne	.-14     	; 0x4a6 <__fixunssfsi+0x14>
 4b4:	14 c0       	rjmp	.+40     	; 0x4de <__fixunssfsi+0x4c>
 4b6:	b1 30       	cpi	r27, 0x01	; 1
 4b8:	91 f0       	breq	.+36     	; 0x4de <__fixunssfsi+0x4c>
 4ba:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_zero>
 4be:	b1 e0       	ldi	r27, 0x01	; 1
 4c0:	08 95       	ret
 4c2:	0c 94 ff 02 	jmp	0x5fe	; 0x5fe <__fp_zero>
 4c6:	67 2f       	mov	r22, r23
 4c8:	78 2f       	mov	r23, r24
 4ca:	88 27       	eor	r24, r24
 4cc:	b8 5f       	subi	r27, 0xF8	; 248
 4ce:	39 f0       	breq	.+14     	; 0x4de <__fixunssfsi+0x4c>
 4d0:	b9 3f       	cpi	r27, 0xF9	; 249
 4d2:	cc f3       	brlt	.-14     	; 0x4c6 <__fixunssfsi+0x34>
 4d4:	86 95       	lsr	r24
 4d6:	77 95       	ror	r23
 4d8:	67 95       	ror	r22
 4da:	b3 95       	inc	r27
 4dc:	d9 f7       	brne	.-10     	; 0x4d4 <__fixunssfsi+0x42>
 4de:	3e f4       	brtc	.+14     	; 0x4ee <__fixunssfsi+0x5c>
 4e0:	90 95       	com	r25
 4e2:	80 95       	com	r24
 4e4:	70 95       	com	r23
 4e6:	61 95       	neg	r22
 4e8:	7f 4f       	sbci	r23, 0xFF	; 255
 4ea:	8f 4f       	sbci	r24, 0xFF	; 255
 4ec:	9f 4f       	sbci	r25, 0xFF	; 255
 4ee:	08 95       	ret

000004f0 <__floatunsisf>:
 4f0:	e8 94       	clt
 4f2:	09 c0       	rjmp	.+18     	; 0x506 <__floatsisf+0x12>

000004f4 <__floatsisf>:
 4f4:	97 fb       	bst	r25, 7
 4f6:	3e f4       	brtc	.+14     	; 0x506 <__floatsisf+0x12>
 4f8:	90 95       	com	r25
 4fa:	80 95       	com	r24
 4fc:	70 95       	com	r23
 4fe:	61 95       	neg	r22
 500:	7f 4f       	sbci	r23, 0xFF	; 255
 502:	8f 4f       	sbci	r24, 0xFF	; 255
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	99 23       	and	r25, r25
 508:	a9 f0       	breq	.+42     	; 0x534 <__floatsisf+0x40>
 50a:	f9 2f       	mov	r31, r25
 50c:	96 e9       	ldi	r25, 0x96	; 150
 50e:	bb 27       	eor	r27, r27
 510:	93 95       	inc	r25
 512:	f6 95       	lsr	r31
 514:	87 95       	ror	r24
 516:	77 95       	ror	r23
 518:	67 95       	ror	r22
 51a:	b7 95       	ror	r27
 51c:	f1 11       	cpse	r31, r1
 51e:	f8 cf       	rjmp	.-16     	; 0x510 <__floatsisf+0x1c>
 520:	fa f4       	brpl	.+62     	; 0x560 <__floatsisf+0x6c>
 522:	bb 0f       	add	r27, r27
 524:	11 f4       	brne	.+4      	; 0x52a <__floatsisf+0x36>
 526:	60 ff       	sbrs	r22, 0
 528:	1b c0       	rjmp	.+54     	; 0x560 <__floatsisf+0x6c>
 52a:	6f 5f       	subi	r22, 0xFF	; 255
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	16 c0       	rjmp	.+44     	; 0x560 <__floatsisf+0x6c>
 534:	88 23       	and	r24, r24
 536:	11 f0       	breq	.+4      	; 0x53c <__floatsisf+0x48>
 538:	96 e9       	ldi	r25, 0x96	; 150
 53a:	11 c0       	rjmp	.+34     	; 0x55e <__floatsisf+0x6a>
 53c:	77 23       	and	r23, r23
 53e:	21 f0       	breq	.+8      	; 0x548 <__floatsisf+0x54>
 540:	9e e8       	ldi	r25, 0x8E	; 142
 542:	87 2f       	mov	r24, r23
 544:	76 2f       	mov	r23, r22
 546:	05 c0       	rjmp	.+10     	; 0x552 <__floatsisf+0x5e>
 548:	66 23       	and	r22, r22
 54a:	71 f0       	breq	.+28     	; 0x568 <__floatsisf+0x74>
 54c:	96 e8       	ldi	r25, 0x86	; 134
 54e:	86 2f       	mov	r24, r22
 550:	70 e0       	ldi	r23, 0x00	; 0
 552:	60 e0       	ldi	r22, 0x00	; 0
 554:	2a f0       	brmi	.+10     	; 0x560 <__floatsisf+0x6c>
 556:	9a 95       	dec	r25
 558:	66 0f       	add	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	da f7       	brpl	.-10     	; 0x556 <__floatsisf+0x62>
 560:	88 0f       	add	r24, r24
 562:	96 95       	lsr	r25
 564:	87 95       	ror	r24
 566:	97 f9       	bld	r25, 7
 568:	08 95       	ret

0000056a <__fp_inf>:
 56a:	97 f9       	bld	r25, 7
 56c:	9f 67       	ori	r25, 0x7F	; 127
 56e:	80 e8       	ldi	r24, 0x80	; 128
 570:	70 e0       	ldi	r23, 0x00	; 0
 572:	60 e0       	ldi	r22, 0x00	; 0
 574:	08 95       	ret

00000576 <__fp_nan>:
 576:	9f ef       	ldi	r25, 0xFF	; 255
 578:	80 ec       	ldi	r24, 0xC0	; 192
 57a:	08 95       	ret

0000057c <__fp_pscA>:
 57c:	00 24       	eor	r0, r0
 57e:	0a 94       	dec	r0
 580:	16 16       	cp	r1, r22
 582:	17 06       	cpc	r1, r23
 584:	18 06       	cpc	r1, r24
 586:	09 06       	cpc	r0, r25
 588:	08 95       	ret

0000058a <__fp_pscB>:
 58a:	00 24       	eor	r0, r0
 58c:	0a 94       	dec	r0
 58e:	12 16       	cp	r1, r18
 590:	13 06       	cpc	r1, r19
 592:	14 06       	cpc	r1, r20
 594:	05 06       	cpc	r0, r21
 596:	08 95       	ret

00000598 <__fp_round>:
 598:	09 2e       	mov	r0, r25
 59a:	03 94       	inc	r0
 59c:	00 0c       	add	r0, r0
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__fp_round+0xc>
 5a0:	88 23       	and	r24, r24
 5a2:	52 f0       	brmi	.+20     	; 0x5b8 <__fp_round+0x20>
 5a4:	bb 0f       	add	r27, r27
 5a6:	40 f4       	brcc	.+16     	; 0x5b8 <__fp_round+0x20>
 5a8:	bf 2b       	or	r27, r31
 5aa:	11 f4       	brne	.+4      	; 0x5b0 <__fp_round+0x18>
 5ac:	60 ff       	sbrs	r22, 0
 5ae:	04 c0       	rjmp	.+8      	; 0x5b8 <__fp_round+0x20>
 5b0:	6f 5f       	subi	r22, 0xFF	; 255
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	08 95       	ret

000005ba <__fp_split3>:
 5ba:	57 fd       	sbrc	r21, 7
 5bc:	90 58       	subi	r25, 0x80	; 128
 5be:	44 0f       	add	r20, r20
 5c0:	55 1f       	adc	r21, r21
 5c2:	59 f0       	breq	.+22     	; 0x5da <__fp_splitA+0x10>
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	71 f0       	breq	.+28     	; 0x5e4 <__fp_splitA+0x1a>
 5c8:	47 95       	ror	r20

000005ca <__fp_splitA>:
 5ca:	88 0f       	add	r24, r24
 5cc:	97 fb       	bst	r25, 7
 5ce:	99 1f       	adc	r25, r25
 5d0:	61 f0       	breq	.+24     	; 0x5ea <__fp_splitA+0x20>
 5d2:	9f 3f       	cpi	r25, 0xFF	; 255
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <__fp_splitA+0x2a>
 5d6:	87 95       	ror	r24
 5d8:	08 95       	ret
 5da:	12 16       	cp	r1, r18
 5dc:	13 06       	cpc	r1, r19
 5de:	14 06       	cpc	r1, r20
 5e0:	55 1f       	adc	r21, r21
 5e2:	f2 cf       	rjmp	.-28     	; 0x5c8 <__fp_split3+0xe>
 5e4:	46 95       	lsr	r20
 5e6:	f1 df       	rcall	.-30     	; 0x5ca <__fp_splitA>
 5e8:	08 c0       	rjmp	.+16     	; 0x5fa <__fp_splitA+0x30>
 5ea:	16 16       	cp	r1, r22
 5ec:	17 06       	cpc	r1, r23
 5ee:	18 06       	cpc	r1, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	f1 cf       	rjmp	.-30     	; 0x5d6 <__fp_splitA+0xc>
 5f4:	86 95       	lsr	r24
 5f6:	71 05       	cpc	r23, r1
 5f8:	61 05       	cpc	r22, r1
 5fa:	08 94       	sec
 5fc:	08 95       	ret

000005fe <__fp_zero>:
 5fe:	e8 94       	clt

00000600 <__fp_szero>:
 600:	bb 27       	eor	r27, r27
 602:	66 27       	eor	r22, r22
 604:	77 27       	eor	r23, r23
 606:	cb 01       	movw	r24, r22
 608:	97 f9       	bld	r25, 7
 60a:	08 95       	ret

0000060c <__mulsf3>:
 60c:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3x>
 610:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_round>
 614:	0e 94 be 02 	call	0x57c	; 0x57c <__fp_pscA>
 618:	38 f0       	brcs	.+14     	; 0x628 <__mulsf3+0x1c>
 61a:	0e 94 c5 02 	call	0x58a	; 0x58a <__fp_pscB>
 61e:	20 f0       	brcs	.+8      	; 0x628 <__mulsf3+0x1c>
 620:	95 23       	and	r25, r21
 622:	11 f0       	breq	.+4      	; 0x628 <__mulsf3+0x1c>
 624:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_inf>
 628:	0c 94 bb 02 	jmp	0x576	; 0x576 <__fp_nan>
 62c:	11 24       	eor	r1, r1
 62e:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_szero>

00000632 <__mulsf3x>:
 632:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__fp_split3>
 636:	70 f3       	brcs	.-36     	; 0x614 <__mulsf3+0x8>

00000638 <__mulsf3_pse>:
 638:	95 9f       	mul	r25, r21
 63a:	c1 f3       	breq	.-16     	; 0x62c <__mulsf3+0x20>
 63c:	95 0f       	add	r25, r21
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	55 1f       	adc	r21, r21
 642:	62 9f       	mul	r22, r18
 644:	f0 01       	movw	r30, r0
 646:	72 9f       	mul	r23, r18
 648:	bb 27       	eor	r27, r27
 64a:	f0 0d       	add	r31, r0
 64c:	b1 1d       	adc	r27, r1
 64e:	63 9f       	mul	r22, r19
 650:	aa 27       	eor	r26, r26
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	aa 1f       	adc	r26, r26
 658:	64 9f       	mul	r22, r20
 65a:	66 27       	eor	r22, r22
 65c:	b0 0d       	add	r27, r0
 65e:	a1 1d       	adc	r26, r1
 660:	66 1f       	adc	r22, r22
 662:	82 9f       	mul	r24, r18
 664:	22 27       	eor	r18, r18
 666:	b0 0d       	add	r27, r0
 668:	a1 1d       	adc	r26, r1
 66a:	62 1f       	adc	r22, r18
 66c:	73 9f       	mul	r23, r19
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	83 9f       	mul	r24, r19
 676:	a0 0d       	add	r26, r0
 678:	61 1d       	adc	r22, r1
 67a:	22 1f       	adc	r18, r18
 67c:	74 9f       	mul	r23, r20
 67e:	33 27       	eor	r19, r19
 680:	a0 0d       	add	r26, r0
 682:	61 1d       	adc	r22, r1
 684:	23 1f       	adc	r18, r19
 686:	84 9f       	mul	r24, r20
 688:	60 0d       	add	r22, r0
 68a:	21 1d       	adc	r18, r1
 68c:	82 2f       	mov	r24, r18
 68e:	76 2f       	mov	r23, r22
 690:	6a 2f       	mov	r22, r26
 692:	11 24       	eor	r1, r1
 694:	9f 57       	subi	r25, 0x7F	; 127
 696:	50 40       	sbci	r21, 0x00	; 0
 698:	9a f0       	brmi	.+38     	; 0x6c0 <__mulsf3_pse+0x88>
 69a:	f1 f0       	breq	.+60     	; 0x6d8 <__mulsf3_pse+0xa0>
 69c:	88 23       	and	r24, r24
 69e:	4a f0       	brmi	.+18     	; 0x6b2 <__mulsf3_pse+0x7a>
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	bb 1f       	adc	r27, r27
 6a6:	66 1f       	adc	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	88 1f       	adc	r24, r24
 6ac:	91 50       	subi	r25, 0x01	; 1
 6ae:	50 40       	sbci	r21, 0x00	; 0
 6b0:	a9 f7       	brne	.-22     	; 0x69c <__mulsf3_pse+0x64>
 6b2:	9e 3f       	cpi	r25, 0xFE	; 254
 6b4:	51 05       	cpc	r21, r1
 6b6:	80 f0       	brcs	.+32     	; 0x6d8 <__mulsf3_pse+0xa0>
 6b8:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_inf>
 6bc:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_szero>
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	e4 f3       	brlt	.-8      	; 0x6bc <__mulsf3_pse+0x84>
 6c4:	98 3e       	cpi	r25, 0xE8	; 232
 6c6:	d4 f3       	brlt	.-12     	; 0x6bc <__mulsf3_pse+0x84>
 6c8:	86 95       	lsr	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f7 95       	ror	r31
 6d2:	e7 95       	ror	r30
 6d4:	9f 5f       	subi	r25, 0xFF	; 255
 6d6:	c1 f7       	brne	.-16     	; 0x6c8 <__mulsf3_pse+0x90>
 6d8:	fe 2b       	or	r31, r30
 6da:	88 0f       	add	r24, r24
 6dc:	91 1d       	adc	r25, r1
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret

000006e6 <__itoa_ncheck>:
 6e6:	bb 27       	eor	r27, r27
 6e8:	4a 30       	cpi	r20, 0x0A	; 10
 6ea:	31 f4       	brne	.+12     	; 0x6f8 <__itoa_ncheck+0x12>
 6ec:	99 23       	and	r25, r25
 6ee:	22 f4       	brpl	.+8      	; 0x6f8 <__itoa_ncheck+0x12>
 6f0:	bd e2       	ldi	r27, 0x2D	; 45
 6f2:	90 95       	com	r25
 6f4:	81 95       	neg	r24
 6f6:	9f 4f       	sbci	r25, 0xFF	; 255
 6f8:	0c 94 7f 03 	jmp	0x6fe	; 0x6fe <__utoa_common>

000006fc <__utoa_ncheck>:
 6fc:	bb 27       	eor	r27, r27

000006fe <__utoa_common>:
 6fe:	fb 01       	movw	r30, r22
 700:	55 27       	eor	r21, r21
 702:	aa 27       	eor	r26, r26
 704:	88 0f       	add	r24, r24
 706:	99 1f       	adc	r25, r25
 708:	aa 1f       	adc	r26, r26
 70a:	a4 17       	cp	r26, r20
 70c:	10 f0       	brcs	.+4      	; 0x712 <__utoa_common+0x14>
 70e:	a4 1b       	sub	r26, r20
 710:	83 95       	inc	r24
 712:	50 51       	subi	r21, 0x10	; 16
 714:	b9 f7       	brne	.-18     	; 0x704 <__utoa_common+0x6>
 716:	a0 5d       	subi	r26, 0xD0	; 208
 718:	aa 33       	cpi	r26, 0x3A	; 58
 71a:	08 f0       	brcs	.+2      	; 0x71e <__utoa_common+0x20>
 71c:	a9 5d       	subi	r26, 0xD9	; 217
 71e:	a1 93       	st	Z+, r26
 720:	00 97       	sbiw	r24, 0x00	; 0
 722:	79 f7       	brne	.-34     	; 0x702 <__utoa_common+0x4>
 724:	b1 11       	cpse	r27, r1
 726:	b1 93       	st	Z+, r27
 728:	11 92       	st	Z+, r1
 72a:	cb 01       	movw	r24, r22
 72c:	0c 94 98 03 	jmp	0x730	; 0x730 <strrev>

00000730 <strrev>:
 730:	dc 01       	movw	r26, r24
 732:	fc 01       	movw	r30, r24
 734:	67 2f       	mov	r22, r23
 736:	71 91       	ld	r23, Z+
 738:	77 23       	and	r23, r23
 73a:	e1 f7       	brne	.-8      	; 0x734 <strrev+0x4>
 73c:	32 97       	sbiw	r30, 0x02	; 2
 73e:	04 c0       	rjmp	.+8      	; 0x748 <strrev+0x18>
 740:	7c 91       	ld	r23, X
 742:	6d 93       	st	X+, r22
 744:	70 83       	st	Z, r23
 746:	62 91       	ld	r22, -Z
 748:	ae 17       	cp	r26, r30
 74a:	bf 07       	cpc	r27, r31
 74c:	c8 f3       	brcs	.-14     	; 0x740 <strrev+0x10>
 74e:	08 95       	ret

00000750 <_exit>:
 750:	f8 94       	cli

00000752 <__stop_program>:
 752:	ff cf       	rjmp	.-2      	; 0x752 <__stop_program>
